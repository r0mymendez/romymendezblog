[
  {
    "path": "posts/2021-09-10-rabbitmq-pika/",
    "title": "RabbitMQ-Pika",
    "description": "RabbitMQ permite gestionar colas de mensajes entre emisores y destinatarios, en el siguiente post vamos a utilizar en python **Pika** para su implementación.",
    "author": [
      {
        "name": "Romina Mendez",
        "url": "https://example.com/norajones"
      }
    ],
    "date": "2021-09-10",
    "categories": [
      "Python",
      "Programacion",
      "Tutorial"
    ],
    "contents": "\n\nContents\nIntroducción: ¿Que es RabbitMQ?\nImplementación\nMongodb + Pika\n\n\nIntroducción: ¿Que es RabbitMQ?\nRabbitMQ es un intermediario que envia mensajes 📩 entre un productor y un consumidor por medio de la utilización de una cola.\nLos principales conceptos que se deben tener en cuenta son:\nProductor: Es el que envía mensajes.\nCola: Es el buffer en donde se almacenan los mensajes.\nConsumidor: El que recibe los mensajes.\n\nImplementación\nPara la implementación en `Python 🐍 utilizaremos pika y vamos a desarrollar dos programas: productor y consumidor.\nPika tiene un set de objetos para la comunicación con RabbitMQ.\nEn nuestro ejemplo vamos a imaginar que un productor es un app que tiene como objetivo tomar pedidos de delivery 🛵de comida, la misma necesita enviar multiples mensajes📝 relacionados a los pedidos que realizar usuarios 📱.\nPor lo cual vamos a realizar los siguientes pasos:\nInstalar pika\n!pip install pika\nGenerar el script send.py 📄\nimport pika\nfrom datetime import datetime\n\nconnection = pika.BlockingConnection(\n    pika.ConnectionParameters(host='localhost'))\nchannel = connection.channel()\n\nchannel.queue_declare(queue='delivery')\n\npedidos=['🍕🍕🍕','🍔🍔🍔','🍰🍰🍰','🍺🍺🍺']\n\nfor i in pedidos:\n    channel.basic_publish(exchange='', routing_key='delivery', body=i)\n    print(\" [x] Se envia pedido!'\"+ i)\n\nconnection.close()\nGenerar el script receive.py 📄\nimport pika, sys, os\nfrom datetime import datetime\n\n\ndef main(queue='delivery'):\n    connection = pika.BlockingConnection(pika.ConnectionParameters(host='localhost'))\n    channel = connection.channel()\n    channel.queue_declare(queue=queue)\n\n    def callback(ch, method, properties, body):\n        print(\" [x] Received %r\" % body.decode())\n\n    channel.basic_consume(queue='delivery', on_message_callback=callback, auto_ack=True)\n\n    print(' [*] Waiting for messages. To exit press CTRL+C')\n    channel.start_consuming()\n\nif __name__ == '__main__':\n    try:\n        main(queue=queue)\n    except KeyboardInterrupt:\n        print('Interrupted')\n        try:\n            sys.exit(0)\n        except SystemExit:\n            os._exit(0)\nResultados:\n [x] Received '🍕🍕🍕'\n [x] Received '🍕🍕🍕'\n [x] Received '☕☕☕'\n [x] Received '🍰🍰🍰'\n [x] Received '🍺🍺🍺'\n [x] Received '🍕🍕🍕'\n [x] Received '🍔🍔🍔'\n [x] Received '🍰🍰🍰'\n [x] Received '🍺🍺🍺'\nMongodb + Pika\nA continuación vamos a modificar el script para que pueda conectarse a un mongodb atlas y realice el insert de los mensajes recibidos.\nimport pymongo\nimport pika, sys, os\nfrom datetime import datetime\n\n# Crear una conexion con MongoClient\nclient = pymongo.MongoClient(\"mongodb+srv://NombreUser:PasswordUser@clusterName.moczg.mongodb.net/rabbit?retryWrites=true&w=majority\")\n\n# Database\ndb = client[\"rabbit\"]\n\n# Collection\ncollection= db[\"mensajes\"]\n\ndef main(queue='delivery'):\n    connection = pika.BlockingConnection(pika.ConnectionParameters(host='localhost'))\n    channel = connection.channel()\n    channel.queue_declare(queue=queue)\n\n    def callback(ch, method, properties, body):\n        print(\" [x] Received %r\" % body.decode())\n        body_indsert={'fecha':datetime.now(),'queue':queue,'message':body.decode()}\n        db[\"mensajes\"].insert_one(body_indsert)\n\n    channel.basic_consume(queue='hello', on_message_callback=callback, auto_ack=True)\n\n    print(' [*] Waiting for messages. To exit press CTRL+C')\n    channel.start_consuming()\n\nif __name__ == '__main__':\n    try:\n        main(queue=queue)\n    except KeyboardInterrupt:\n        print('Interrupted')\n        try:\n            sys.exit(0)\n        except SystemExit:\n            os._exit(0)\nPara conocer más de Rabbitmq puedes ver los siguientes sitios:\n📄 Documentacion Oficial con el Tutorial\n🐍 Pika\n\n\n\n",
    "preview": "https://image.freepik.com/free-vector/landing-page-send-message-illustration_126608-31.jpg",
    "last_modified": "2021-09-11T18:17:03-03:00",
    "input_file": {}
  },
  {
    "path": "posts/2021-02-21-apps-gratuitas-para-proyectos/",
    "title": "14 Apps Gratuitas para Proyectos",
    "description": "En el siguiente articulo te cuento sobre algunas aplicaciones free para utilizar en tus proyectos.",
    "author": [
      {
        "name": "Romina Mendez",
        "url": {}
      },
      {
        "name": "",
        "url": "https://example.com/norajones"
      }
    ],
    "date": "2021-02-21",
    "categories": [
      "Proyectos",
      "Metodologias"
    ],
    "contents": "\n\nContents\nMetodologíasTrello\nMiro\nQuire\nAsana\nClikup\nScrumblr\nGitmind\nHabitica\n\nDiagramasDraw.io\nMindmup\n\nEstimación de tiemposPlanning poker\n\nDiseñoCanva\n\nMensajeriaSlack\nDiscord\n\n\nLa pandemia de coronavirus impulso el home office y muchos empleados se vieron obligados a transformar su forma de trabajar. Este contexto genero un cambio en la forma en la que nos relacionamos y desempeñamos nuestras tareas diarias.\n\nA continuación te recopilo un listado de herramientas y recursos que puedes utilizar para poder desarrollar tu tareas y gestionar tus proyectos.\nMetodologías\nTrello\nTrello es una aplicación basada en la metodología Kanban y permite gestionar tu trabajo de forma colaborativa. Su version gratuita tiene tableros personales ilimitados, tarjetas ilimitadas al igual que listas y hasta 10MB por archivo adjunto. \nMiro\nMiro es una aplicación que te permite tener pizarras, en las cuales los integrantes de los equipos puedan colaborar y modificarlas en tiempo real. Asimismo posee múltiples plantillas que pueden ser utilizadas para realizar la planificación de un proyecto. En su version gratuita permite principalmente tener: 3 tableros editables, espectadores anónimos y plantillas.\n\nQuire\nQuire es una aplicación que implementa el tablero Kanban, en su sitio web mencionan que hasta la primera mitad del 2020 no tiene precios definidos y que puedes tener una cuenta gratuita con hasta 35 organizaciones, 80 proyectos y 30 miembros.\n source image : imagen obtenida en https://quire.io/\nAsana\nAsana es una aplicación que permite organizar proyectos utilizando tableros Kanban en linea. En su version free permite hasta 15 miembros y vistas de calendarios, asignación de responsables y fechas de entregas.\n imagen obtenida en https://asana.com/es\nClikup\nClikup es una aplicación para gestionar tus proyectos, la cual permite generar documentos, notificaciones y administrar tu bandeja de entrada. Adicionalmente permite realizar dashboard para ver el avance de los proyectos. Lo más importante es que su version free tiene 100MB Storage e ilimitadas tareas y usuarios.\n imagen obtenida en https://clickup.com/welcome\nScrumblr\nScrumblr es una aplicación que permite generar un tablero de Kanban y su colaboración en tiempo real. Lo más destacable de esta aplicación es que no necesitas generar un usuario, ya que el único dato que solicita es el nombre de tu tablero.\n\nGitmind\nGitmind es una herramienta para realizar diagramas de mapas mentales y la misma es gratuita \nimagen obtenida en gitmind\nHabitica\nHabitica es una aplicación para gestionar proyectos de manera más divertida, ya que puedes administrar tus tareas por medio de un juego de rol. Si completas todos las tareas pendientes puedes progresar en el juego, pero si fallamos nuestro personaje va retroceder en este juego.\n imagen obtenida de mi perfil de habitica\nDiagramas\nDraw.io\nDraw.io es una aplicación gratuita que permite la creación y edición de diagramas. La misma permite a los usuarios compartir sus diagramas y posee integraciones con Google Drive y Dropbox. Esta aplicación tiene varios templates reutilizables tales como diagramas de Venn, wireframes, network, flowcharts, UML, entre otros.\n Imagen obtenida de mi cuenta de https://www.draw.io/\nMindmup\nMindmup es una aplicación gratuita que permite crear mapas mentales de forma ilimitada y guardarlo en la nube.\n\nEstimación de tiempos\nPlanning poker\nPlanning poker es una técnica que permite realizar la estimación del tiempo de una tarea en un equipo para la planificación del sprint. Esta técnica se realiza utilizando cartas numeradas con las secuencia de Fibonacci. Si quieres desarrollar esta técnica en forma online, puede utilizar la aplicación www.planningpoker.com. En su version gratuita permite hasta 5 usuarios en un juego.\n\nDiseño\nCanva\nCanva es una aplicación online de diseño gráfico simplificado, en el cual puedes crear una pieza de diseño utilizando los cientos de templates tiene disponibles. Puedes utilizar la cuenta gratuita y solo pagas para obtener algunas opciones avanzadas de diseño.\n\nMensajeria\nSlack\nSlack es una herramienta de mensajería en tiempo real que permite gestionar la comunicaciones con los equipos de trabajo o comunidades. Cuando utilizas un espacio en slack puedes generar canales en los cuales se pueden comunicar mensajes basados en algún tópico.\n\nDiscord\nDiscord es otra plataforma para crear grupo de chats, en el cual también puedes organizar las conversaciones en canales por temas \nimagen obtenida en https://discord.com/new\nEstas son las aplicaciones que te recomiendo utilizar para la gestión de tus tareas y proyectos. Recuerda que cualquiera de esta herramientas te puedo ayudar a realizar tus proyectos o gestion de tareas diarias de una maneras más ordenadas. Si tienes alguna otra herramienta que conoces y no esta en este articulo, puedes dejar un comentario en este post.\n\n\n\n",
    "preview": "https://image.freepik.com/free-vector/tiny-people-developers-laptop-customer-requirements-software-requirement-description-user-case-agile-tool-business-analysis-concept_335657-2433.jpg",
    "last_modified": "2021-03-06T16:32:10-03:00",
    "input_file": {}
  },
  {
    "path": "posts/2021-02-21-cheatsheet-sql/",
    "title": "CheatSheet SQL",
    "description": "En el siguiente post puedes encontrar una cheetsheet de SQ, en la cual puedes encontrar un resumen y ejemplos de la sintaxis de SQL.",
    "author": [
      {
        "name": "Romina Mendez",
        "url": {}
      },
      {
        "name": "",
        "url": "https://example.com/norajones"
      }
    ],
    "date": "2021-02-21",
    "categories": [
      "Base de datos",
      "SQL"
    ],
    "contents": "\nLas cheetsheet son un conjunto de notas 🗒 que se utilizan como referencia rápida sobre alguna tematica. También son conocidos como los machetes en los cuales se registraban pequeños conceptos a recordar 😎.\n\n\nEn el siguiente pdf podes encontrar la sintaxis basica para poder realizar consultas en sql\n\n\n\n\n\n",
    "preview": "https://image.freepik.com/free-vector/cloud-hosting-concept-illustration_114360-730.jpg",
    "last_modified": "2021-03-06T16:29:27-03:00",
    "input_file": {}
  },
  {
    "path": "posts/2021-02-21-introduccin-a-visualizaciones-con-python/",
    "title": "Introducción a DataViz con Python",
    "description": "Da tus primeros pasos en el desarrollo de visualizaciones con Python.",
    "author": [
      {
        "name": "Romina Mendez",
        "url": {}
      },
      {
        "name": "",
        "url": "https://example.com/norajones"
      }
    ],
    "date": "2021-02-21",
    "categories": [
      "DataViz",
      "Python",
      "Data",
      "Programacion",
      "Workshop"
    ],
    "contents": "\n\nContents\n¿Que es Python ?\n¿Que es Google Colab ?\nRecursos\n\n\nLa programación es una habilidad que puede ser adquirida de manera autodidacta, pero a veces uno no sabe como empezar. Por lo cual te dejo este curso online realizado en el 2020 📆 en conjunto con EANT, el cual en solo 3 horas ⏱️ podes dar tus primeros pasos en el desarrollo de visualizaciónes con Python🐍.\n¿Que es Python ?\nPython es un lenguaje de programación de código abierto, orientado a objetos, muy simple y fácil de entender. Tiene una sintaxis sencilla que cuenta con una vasta biblioteca de herramientas, que hacen de Python un lenguaje de programación único. La primera publicación de Python se produce hace ya 30 años, ya que en 1989 Guido Van Rossum comenzó el desarrollo de un nuevo lenguaje de programación casi por hobby y tomando su nombre de el grupo humorístico británico Monty Python.\nActualmente es uno de los lenguajes más utilizados para análisis de datos, pero también es considerado un lenguaje multi-proposito debido a gran cantidad de aplicaciónes que se pueden desarrollar con Python.\n\nMás información sobre Python\n¿Que es Google Colab ?\n\nGoogle Colab es una IDE (Entorno de desarrollo integrado) para poder progrmar en Python utilizando google drive.\n Es un marco de desarrollo amigable, el cual permite:\nAutocompletado\nReconocimiento de sintaxis de programación\nDepurador de errores\nTiene librerias preinstaladas\nSe utiliza desde drive lo cual permite versionar tu codigo y trabajar en conjunto con otros colaboradoes.\nPara conocer más sobre Colab puedes copiar esta notebook: Notebook \n\nEn este workshop utilizamos 🐼pandas + 📊 seaborn + 📊 Plotly y podras realizar visualizaciones interactivas como la siguiente…\n\nRecursos\nPresentación:\n\n\n🙀 Github Repo\nAcceso al curso Online: Workshop EANT\n\n\n\n",
    "preview": "https://image.freepik.com/vector-gratis/ilustracion-analisis-mercado-valores_23-2148588123.jpg",
    "last_modified": "2021-09-11T19:21:28-03:00",
    "input_file": {}
  },
  {
    "path": "posts/2021-02-21-introduccin-a-visualizaciones-con-r/",
    "title": "Introducción a Visualizaciones con R",
    "description": "Primeros pasos para comenzar a realizar tus primeras visualizaciones en R.",
    "author": [
      {
        "name": "Romina Mendez",
        "url": {}
      },
      {
        "name": "",
        "url": "https://example.com/norajones"
      }
    ],
    "date": "2021-02-21",
    "categories": [
      "DataViz",
      "R",
      "Data",
      "Programacion",
      "Workshop"
    ],
    "contents": "\n\nContents\n¿Que es ?\n¿Que es Rstudio ?Rstudio Cloud ☁️\n\nTemario¿Estas preparado para comenzar 🏃🏃?\nRecursos\n\n\nLa programación es una habilidad que puede ser adquirida de manera autodidacta, pero a veces uno no sabe como empezar. Por lo cual te dejo este curso online realizado en el 2020 📆 en conjunto con EANT, el cual en solo 3 horas ⏱️ podes dar tus primeros pasos en el desarrollo de visualizaciónes con R.\n¿Que es ?\nR es uno de los lenguajes más populares que se utiliza para el procesamiento y analisis estadístico de datos. Este lenguaje es una reimplementación de otro lenguaje denominado S, aunque tambien tiene bases de lenguajes como C, C++ o Fortran. R es muy popular debido a que actualmente se lo utiliza para el desarrollo de modelos de machine learning, pero tambien con este lenguaje se puede realizar desarrollo de: sitio webs, APIs, procesamiento de datos y hasta puedes desarrollar tu CV.\nMás información sobre R\n¿Que es Rstudio ?\n\n\n\n\n\nRstudio es una IDE (Entorno de desarrollo integrado) para poder progrmar en R, aunque actualmente soporta otros lenguajes tales como Python y Javascript.\n Esta IDE esta en constante evolución y es la más utilizada para desarrollar en R debido que posee una interfaz con ayuda en linea, autocompletado de codigo, la posibilidad de realizar una depuración del codigo de manera sencilla, visualización de directorios, entre otras.\nA continuación puede ver una linea de tiempo con la evolución de esta IDE en los ultimos años.[Un poco de historia sobre rstudio y su evolución. 1 \n\n\nRstudio Cloud ☁️\nRstudio cloud es una version basada en la nube que permite realizar el desarrollo sin necesidad de realizar ninguna instalación utilizando solo un navegador.\nEl plan free te permite:\nGenerar hasta 15 proyectos.\nUn espacio compartido con 5 miembros y 10 proyectos como maximo.\n15 horas de proyectos por mes.\nHasta 1 GB de RAM por proyecto.\nHasta 1 CPU por proyecto\nHasta 1 hora de tiempo en ejecución en segundo plano.\nTemario\nEn este workshop online vas a poder aprender sobre:\n✏️ Qué es Data Analytics y sus etapas de trabajo.\n✏️ El concepto del análisis exploratorio de datos (EDA).\n✏️ Qué es R y por qué es una de las herramientas más utilizadas en los ámbitos de trabajo de Data Science.\n✏️ Utilizar la interfaz de Rstudio.\n✏️ Dar primeros pasos en programación para la manipulación y exploración de Datos.\n✏️ Qué son y cómo utilizar librerías de código para realizar operaciones de análisis.\n✏️ Cómo realizar distintos análisis mediante gráficos y visualizaciones (dataviz).\n✏️ Tips, recomendaciones y recursos útiles para seguir aprendiendo!\n¿Estas preparado para comenzar 🏃🏃?\nA continuación tienes todos los recursos para comenzar y hacer tus primeras visualización con datos 💪.\n\nRecursos\nAcceso al curso Online: Workshop EANT\nPresentación:\n\n\nRstudio TimeLine\n\n↩︎\n",
    "preview": "https://www.binaryfountain.com/wp-content/uploads/2019/12/iStock-1069206352.jpg",
    "last_modified": "2021-03-06T16:20:04-03:00",
    "input_file": {}
  },
  {
    "path": "posts/2021-03-06-dataviz-datos-de-miercoles/",
    "title": "Dataviz: Datos de Miercoles",
    "description": "En este contiene las visualizaciones que realice para Datos de Miercoles.",
    "author": [
      {
        "name": "Romina Mendez",
        "url": {}
      },
      {
        "name": "",
        "url": "https://example.com/norajones"
      }
    ],
    "date": "2021-02-21",
    "categories": [
      "DataViz",
      "R",
      "Data",
      "Programacion",
      "Workshop"
    ],
    "contents": "\n\nContents\n¿Que es datos de Miercoles?\nDATAVIZ 📊Rankings Musicales - SPOTIFY\nCapitulos de RLadies\nPokemon\nDatos de la OMS sobre tuberculosis\nReseñas de Vinos\nGapminder\nComercio Hispanoamérica-Mundo\nDatos sobre el Índice de Libertad\nIMDB- Ranking de películas\n30 días de gráficos\n\n\n¿Que es datos de Miercoles?\nDatos de miércoles es el primo latinoamericano de #tidytuesday, un proyecto semanal de datos organizado por la comunidad de R, que busca que sus participantes desarrollen sus habilidades procesando datos para crear gráficos significativos usando ggplot2, tidyr, dplyr y otras herramientas del tidyverse. El proyecto original surgió en el marco de la comunidad de aprendizaje online R4DS y desde abril de 2019 la comunidad sudamericana de R impulsa una versión local en español. 1\nDATAVIZ 📊\nR es uno de los lenguajes más populares para el desarrollo de visualizaciones y su paquete más popular en los ultimos años es GGPLOT. Para poder aprender a desarrollar visualizaciones comence a practicar en base a los desafios que se publicaban semana a semana en Datos de Miércoles.\nSi quieres dar tus primeros pasos para el desarrollo de visualizaciones en R, te dejo este post que realice con un curso gratis de 3 horas ⌛.\nAlgunas de las visualizaciones que realice para esta comunidad son las siguientes 🎉.\nRankings Musicales - SPOTIFY\n\nCapitulos de RLadies\n\nPokemon\n\nDatos de la OMS sobre tuberculosis\n\nReseñas de Vinos\nDatos sobre reseñas de vinos publicadas en la revista WineEnthusiast 🍷🍷🍷\n\nLos datos de los quesos fueron tomados de los siguientes sitios: * 🍷 Club bonvivir * 🍷 Vix * 🍷 Vinepair\n\nGapminder\n\nComercio Hispanoamérica-Mundo\nAnalisis de exportaciones Argentina del año 2017.\n\nDatos sobre el Índice de Libertad\n\nIMDB- Ranking de películas\n\n30 días de gráficos\nPara esta entrega realice un gif con las cantidad de TvShow por año que se encuentran en las plataformas Disney, Hulu, Prime Video y Netflix Data Source: https://www.kaggle.com/ruchi798/tv-shows-on-netflix-prime-video-hulu-and-disney\n\nGitHub Datos de miercoles\n\n↩︎\n",
    "preview": "https://www.binaryfountain.com/wp-content/uploads/2019/12/iStock-1069206352.jpg",
    "last_modified": "2021-03-06T16:17:30-03:00",
    "input_file": {}
  },
  {
    "path": "posts/2021-03-06-dnde-est-mi-monopatn/",
    "title": "¿Dónde está mi monopatín?🛹",
    "description": "Recursos del evento IWD2020 (International Womens Day) de Women Techmakers, en el cual utilizamos python para encontrar monopatines en la Ciudad Autonoma de Buenos Aires📍.",
    "author": [
      {
        "name": "Romina Mendez",
        "url": {}
      },
      {
        "name": "",
        "url": "https://example.com/norajones"
      }
    ],
    "date": "2021-02-21",
    "categories": [
      "DataViz",
      "Python",
      "Data",
      "Mapas",
      "Programacion",
      "Workshop"
    ],
    "contents": "\n\nContents\nGDG Buenos Aires: Women Techmakers Buenos AiresRecursos\n\n\nGDG Buenos Aires: Women Techmakers Buenos Aires\nWomen Techmakers es el programa global de Google que promueve un espacio de visibilidad, comunidad y recursos para fomentar la diversidad en tecnología.\n\n\n\nEn el encuentro IWD2020 👭 (International Womens Day), realizamos un Hands-on Labs online con Kari Bartolome y Aidin Rodriguez para enseñar a utilizar Google Colab con Python🐍 utilizando datos publicos, el problema resolver es: ¿Dónde está mi monopatín?\n\n\n🔎 Si queres conocer más sobre Google Colab y Python podes ver el siguiente post: “Introducción a visualizaciones con python”\nAPI DE TRANSPORTE\nPara realizar esta actividad es necesario contar con las credenciales de la API de transporte del Gobierno de la Ciudad de Buenos Aires, las mismas se pueden obtener las credenciales se debe ingresar a este link: https://www.buenosaires.gob.ar/form/formulario-de-registro-api-transporte\nUna vez finalizada la carga del formulario, en unos minutos va recibir un correo con sus credenciales (controle si las mismas no llegan a su correo SPAM).\nPara ver la documentación de la API\n\nRecursos\n📺 Video del Workshop:\nEn este 🔗 link puedes encontrar el video con la resolución del taller.\n📝 Aqui puedes encontrar las notebooks: 🔗link\n\n\n\n\n",
    "preview": "https://img.freepik.com/vector-gratis/hombre-montando-patinete-electrico-otono-concepto-transporte-ecologico_254685-275.jpg?size=626&ext=jpg",
    "last_modified": "2021-03-06T16:18:00-03:00",
    "input_file": {}
  },
  {
    "path": "posts/2021-03-06-fundamentos-de-testing/",
    "title": "Fundamentos de Testing",
    "description": "El testing es uno de los procesos de la ingeniería de software que permite identificar defectos en el software\nEn este post podes encontrar los fundamentos para poder realizalo de manera practica en cualquier proyecto de desarrollo.",
    "author": [
      {
        "name": "Romina Mendez",
        "url": {}
      },
      {
        "name": "",
        "url": "https://example.com/norajones"
      }
    ],
    "date": "2021-02-21",
    "categories": [
      "Python",
      "Tesing",
      "Programacion",
      "Workshop"
    ],
    "contents": "\n\nContents\nQue es Testing?\nPor qué el testing es importante…\nQue es la calidad de software?\nError -Defectos - Fallos\nPruebas\n7 principios del proceso de testing\n1️⃣ Las pruebas muestran la presencia de los defectos.\n2️⃣️ No es posible realizar pruebas exhaustiva\n3️⃣ Pruebas temprana\n4️⃣ Agrupamiento de los defectos.\n5️⃣ Paradoja de los pesticidas.\n6️⃣ Las pruebas dependen del contexto.\n7️⃣ La Falacia de la Ausencia de errores.\n\nTesting vs. Debugging\nPruebas Funcionales\nPruebas unitarias:\nPruebas integración:\nPruebas de sistemas:\nPruebas de aceptación:\n\nPruebas No Funcionales\n🏃Performance\n🛡️Seguridad\n👥 Usabilidad\n💻 Compatibilidad\n\nPlan de pruebas\n¿Cuales son los beneficios de realizar un plan de pruebas?\nQue + Como + Cuales\nDatos para registrar en un plan de pruebas\nCasos de prueba\n\nRBT - Pruebas basadas en Riesgos\nTecnicas de testing\nTesting Estatico\nTesting Dinamico\nTesting Funcional\nTesting No Funcional\nTesting estructural\nBasado en la experiencia\nBasado en defectos\nPruebas de regresión\n\nTesting Automation\n¿Qué es Selenium?\nPasos para ejecutar Selenium en python 🐍\nFormas de identificar a un elemento en el DOM\n\n\n\nQue es Testing?\nEl proceso de testing es la realización de pruebas tecnicas con el objetivo de poder conocer cual es la calidad de los artefactos o piezas de software. Estos procesos son una disciplina de la ingenieria de software y nos permiten realizar la validación y verificación de un software.\nLa validación y la verificación muchas veces se lo asocia a terminos similares, pero existen diferencias entre los mismos:\n🔍Validaciòn: ¿estamos construyendo el producto correcto? Esta pregunta la realizamos para conocer si el producto satisface los requerimientos del usuario.\n🔍Verificación: ¿estamos construyendo el producto correctamente? Esta pregunta la realizarmos para conocer si estamos cumpliendo con los requisitos funcionales y no funcionales que se especificaron.\nEs importante destacar que a pesar de ejecutar un plan de testing no es posible demostrar que el software esta libre de defectos. Pero realizando el mismo si podemos asegurar que se van a eliminar gran parte de ellos y mitigar los riesgos que pueden producir los mismos en producción.\nPor qué el testing es importante…\nUn software es un recurso que permite a la industias poder gestionar, controlar y automatizar sus procesos. La industria 4.0 nos impulsa a cambios, en el cual las organizaciones utilizan sistemas para la produccion y la gestión de sus recursos. En los ultimos años los sistemas utilizados se basan en la aplicación de tecnologías y servicios tales como: machine learning, big data, Cloud Computing y IOT.\n1\nActualmente los sistemas estan en cada una de las industrias, como se pueden ver en la siguiente imagen:\n\n\n\nActualmente la mayoria de las industrias utilizan sistemas para su producción, debido a esto la calidad del software en la automatización industrial es un factor clave y el mismo debe ser abordado para evitar tener daños o perdidas economicas para las empresas.\nQue es la calidad de software?\nSegún la definición que se encuentra en el Glosario estándar de terminología de ingeniería de software de IEEE:\n“La calidad del softare es el grado en que un sistema, componente o proceso cumple con los requisitos especificados.”\nError -Defectos - Fallos\nMuchas veces cuando hablamos de calidad de software y testing lo relacionamos con terminos tales como error, defectos y fallos. Aunque dichos terminos nos parecen similares es necesario conocer que cada uno de ellos tiene un significado diferente. Por lo cual podriamos definirlo como:\nUn Error de un desarrollador 👤, causa un Defecto en el software 💻, lo cual provoca un Fallo en el momento en el que la prueba se ejecuta🔀.\n\n\n\nPruebas\nOtro termino que tenemos que definir son las pruebas, y este termino lo podemos definir de la siguiente manera:\nLas pruebas de software son una estrategia de gestión del riesgo, en las mismas se evalúan si se cumplieron los requisitos.\nLas pruebas tambien las podemos definir como un el proceso por el cual se verifica si un componente de software con el fin de detectar la diferencia entre las condiciones existentes y las requeridas.\n7 principios del proceso de testing\nInternational Software Testing Qualifications Board (ISTQB) es el comité Internacional de Certificaciones de Pruebas de Software. Este comite desarrollo los 7 principios básicos de la ingeniería de software, los cuales son:\n🔍Las pruebas muestran la presencia de los defectos.\n❌️No es posible realizar pruebas exhaustiva.\n📅Pruebas tempranas.\n🎛️Agrupamiento de los defectos.\n🐛Paradoja de los pesticidas.\n🏠Las pruebas dependen del contexto.\n❌️La Falacia de la Ausencia de errores.\n1️⃣ Las pruebas muestran la presencia de los defectos.\nLa unica manera de poder demostrar que NO hay defectos en un software es realizando testing. Muchas veces durante el testing descubrimos defectos que nunca pensamos que podrian existir o ya estaban supuestamente resueltos.\n2️⃣️ No es posible realizar pruebas exhaustiva\nEs imposible realizar todas las combinaciónes posibles para hacer pruebas, debido a esto es importante asumir un nivel de riesgo para poder priorizar las pruebas. Este punto es importante evaluarlo cuando se realizar la estrategia del plan de pruebas.\n3️⃣ Pruebas temprana\nEs importante poder detectar las incidencias en las fases más tempranas de desarrollo. “Un defecto es más costoso de arreglar, cuanto más tarde es hallado.”\n\n\nImage: Best Strategies for Managing Bugs and Feature Requests 2\n\n4️⃣ Agrupamiento de los defectos.\nEste principio significa que muchas veces los defectos pueden concentrarse en un determinado modulo del producto.\nEsto nos permite concentrar las pruebas en estos modulos que son claves para el release, por lo cual es importante conocer cual son estos modulos en el momento que se diseña el plan de pruebas.\n5️⃣ Paradoja de los pesticidas.\nSi siempre realizamos los mismos test no vamos a encontrar nuevos defectos, por este motivo es importante realizar una actualización de las pruebas a efectuar.\nEste principio refiere a la importancia de mantener actualizado el plan de pruebas ya que el software siempre esta en constante evolución.\n\n\nImage: QA Automation and the Pesticide Paradox\n\n6️⃣ Las pruebas dependen del contexto.\nSi bien pueden haber software similares, la estrategia de testing se debe adaptar al contexto en el cual ese software se va utilizar.\n7️⃣ La Falacia de la Ausencia de errores.\nSi un conjunto de pruebas tiene ausencia de error no significa que el software no los tenga, sino lo que significa es que esas pruebas en un determinado contexto no los detectaron.\nTesting vs. Debugging\n\n\n\nPruebas Funcionales\nLas pruebas funcionales tienen como objetivo comprobar que los sistemas desarrollados funcionen en base a las especificaciones funcionales y requisitos definidos.\nA continuación se detallan diferentes tipos de pruebas que se pueden realizar.\nPruebas unitarias:\nLa primeras pruebas realizadas son denominadas “pruebas unitarias” en las cuales se realiza la verificación de la funcionalidad de los componentes de software de manera aislada.\nPruebas integración:\nSon las pruebas que deben hacer por medio del testeo de todos los componentes en conjunto, por lo cual a partir de las mimas se pueden conocer cómo se integran los componentes en un sistema.\nExisten diferentes enfoques para las pruebas de integración, tales como:\nTop - Down: Las pruebas se realiza partiendo del componente principal en jerarquia, y posteriormente se van incorporando hacia abajo por la jerarquía de control.\nBottom down: Las pruebas se realiza partiendo primero de los componentes de más bajo nive ly se crean componentes para simular a los componentes que los invocan.\nIntegración Funcional: Las pruebas parten de los componentes necesarios para poder ver el funcionamiento de una función elegida del sistema.\nBig bang: Todos los componentes o sistemas están integrados simultáneamente, teniendo como la principal desventaja: es difícil rastrear la causa de las fallas.\nIncremental: Las pruebas incrementales se realizan teniendo en cuenta que los componentes se prueban uno o algunos a la vez, y se van agregando el restante de los componentes hasta que esten todos integrados y probados.\nPruebas de sistemas:\nEstas pruebas se realiza en función de los riesgos y especificaciones de los requisitos, procesos de negocio, casos de uso, historias de usuarios u otras descripciones realizadas. Las mismas tienen como objetivo probar el sistema en su conjunto y verificar si se cumplen todas las especificaciones funcionales y tecnicos.\nPruebas de aceptación:\nEste es el último nivel, en el cual el cliente valida si el desarrollo realizado cumple con lo solicitado y satisface las necesidades documentadas. Pero existen algunas variantes sobre este tipo de pruebas, tales como:\n✅Aceptación de usuarios: Las realizan los usuarios y gestores del aplicativo. Su objetivo es probar su funcionalidad.\n✅Aceptación operacional: En estas pruebas se comprueba por ejemplo: la facilidad de instalación, la seguridad, la recuperación de fallos, las tareas de mantenimiento y se realiza una comprobación de las vulnerabilidades de seguridad.\n✅Aceptación contractual: Se controla los criterios que se definieron en el contrato, el cumplimiento con estándares legales y de seguridad.\n✅Alpha & beta: Muchas veces las pruebas de aceptación del usuario no son posible ya que un software puede ser desarrollado para su posterior venta. En este caso existen dos tipos de pruebas:\n✔️Alpha: En este tipo de pruebas se realiza con usuarios potenciales y desarrolladores para que prueben el software.\n✔️Beta: El software una vez construido se envia a un conjunto de usuarios a fin de que lo prueben bajo condiciones reales, y en el caso detectar incidencias puedan enviarlas para poder ser corregidas. .Estos usuarios no tienen ningún contacto con los desarrolladores, a diferencia de las “alpha” que son desarrollados con el equipo de desarrollo.\n\nPruebas No Funcionales\n🏃Performance\nSon las pruebas que permiten ver el rendimiento, carga y estrés. Aquí se evalúa como se comporta un sistema bajo una carga creciente y se documenta los tiempo de respuestas. Esta prueba intenta encontrar la falla ante una carga que excede lo permitido por el sistema procesar.\n🛡️Seguridad\nLas pruebas de seguridad evalúan la CIA TRIAD (confidencialidad, integridad y disponibilidad) del software. Se realizan diferentes pruebas para evitar cualquier acceso no autorizado al código del software.\n\n\n\n👥 Usabilidad\nLa parte de prueba de usabilidad de una metodología de prueba analiza el aspecto de usabilidad del software para el usuario final . La facilidad con la que un usuario puede acceder al producto constituye el principal punto de prueba.\nLa usabilidad de se define como la facilidad de las personas a interactuar con un software con el fin de alcanzar un objetivo con el mínimo esfuerzo requerido.\n💻 Compatibilidad\nLa prueba de compatibilidad es una metodología que permite la prueba del software en diferentes sistemas operativos, plataformas de hardware, navegadores web, dispositivos móviles y otros software. Las pruebas deben validar el correcto funcionamiento como se espera en todas las diferentes combinaciones de hardware y software especificadas.\nPlan de pruebas\nUn plan de prueba es un documento detallado que describe la estrategia de prueba, los objetivos, los recursos necesarios, el cronograma y los criterios de éxito una pieza de software específica. El objetivo principal, por supuesto, es descubrir defectos que pueda hacer que el software no actúe como se esperaba o que brinde una mala experiencia a sus usuarios.\n\n\n\n¿Cuales son los beneficios de realizar un plan de pruebas?\n📍 Entender cómo se realizará el proceso de pruebas y cómo se controlan o mitigan los riesgos.\n⌛Permite que el resto del equipo del proyecto pueda conocer cuáles son el alcance de las pruebas y el tiempo que se desarrollaran las mismas.\n👥 Definir cuales son las funciones y responsabilidades de cada miembro del equipo, también proporciona cuales son los requisitos que son esenciales para llevar a cabo el proceso de prueba.\n📆 El plan de prueba permite proporcionar un cronograma para las actividades de prueba, definiendo una estimación aproximada del tiempo.\n📣La planificación permite una mejor comunicación con otros miembros del equipo del proyecto y otras partes interesadas\n✔️Asegurar la calidad del entregable a realizar al cliente.\nQue + Como + Cuales\nEl plan de pruebas debe poder respondernos tres preguntas:\n⚒️¿Que vamos a testear?\nEsta pregunta refiere a definir cual es el objetivo, alcance y el cronograma de las pruebas a realizar.\n🔍¿Como vamos a realizarlo?\nEsta pregunta refiere a explicar cual es la estrategia del plan de pruebas. Algunas preguntas que nos pueden ayudar de guia pueden ser las siguientes:\n¿ Como es el proceso que se va realizar para hacer pruebas ?\n¿ Cuales son las metricas que se van a recopilar y analizar ?\n¿ Cuales son las configuraciones a realizar ?\n¿ Hay requisitos especiales o procedimientos a tener en cuenta ?\n¿ Cuales son los criterios de salida, suspension y reanudación?\n\n💡¿Cuales son los resultados deseados?\nEsta pregunta refiere a conocer cual o cuales son los entregables que se deben generar.\nDatos para registrar en un plan de pruebas\nA continuación se detalla cuales son los conceptos basicos que deberiamos tener para realizar un plan de pruebas y un template que puede ser utilizado para desarrollar un plan de prueba.\nConcepto\nDescripción\n1.\niD Plan de prueba: Identifica de forma única el plan de prueba y puede incluir el número de versión.\n2.\nIntroducción: Establece objetivos, alcance, metas, recursos y restricciones presupuestarias.\n3.\nElementos de prueba: Enumera los sistemas y subsistemas que se van a probar.\n4.\nAlcance: Todas las características y funcionalidades que se probarán se enumeran aquí.\n5.\nFuera del alcance: Enumera cuales son las características que no deben testear.\n6.\nCriterio de aceptación: Ver cual es el criterio de éxito.\n7.\nCalendario: Se enumeran los detalles sobre cuándo se realizarán las actividades de pruebas.\n8.\nCriterio de suspensión: Cuales son los criterios por los que se puede suspender las pruebas.\n9.\nEntregables: Incluye casos de prueba, datos de muestra, informe de prueba, registro de problemas.\n10.\nTarea de pruebas: Describe las dependencias entre las tareas y los recursos necesario.\n11.\nAmbientes: Enumera los requisitos de prueba de software, hardware u otros.\n12.\nResponsabilidades: Enumera las funciones y responsabilidades asignadas al equipo de pruebas.\n13.\nRecursos: Describe las necesidades, dedicación en tiempo y conocimientos necesarios del grupo de testing\n14.\nRiesgos: Se enumeran los riesgos generales del proyecto en lo que respecta a las pruebas.\nCasos de prueba\nLos casos de pruebas o test case es un conjunto de condiciones previas (requisitos previos), procedimientos (entradas/acciones) y condiciones posteriores (resultados esperados) que un evaluador utiliza para determinar si un sistema bajo prueba satisface los requisitos o funciona correctamente.3\nEstos casos deben estar documentados y algunos conceptos que se deberian dejar documentado son los siguientes:\nConcepto\nDescripción\n1.\niD Caso de prueba: Número de identificación de caso de prueba único.\n2.\nRequisito Previo: Condiciones que deben cumplirse antes que pueda ejecutarse el caso de prueba.\n3.\nPasos de prueba: Pasos detallados para la ejecución del caso de prueba, la misma debe contener: acción, resultado esperado y datos de entrada.\n4.\nResultados esperados: Cual es el ouput que debería generarse cuando se ejecuta los pasos de pruebas anteriores.\n5.\nResultados reales: Cual es el output que finalmente se generó después de ejecutar los pasos de pruebas anteriores.\n6.\nResultados Final: Definir si pasa o no pasa.\n7.\nComentarios: Agregar información útil tal como capturas de pantallas y descripciones.\n8.\nPrioridad: Definir una escala de la prioridad que se le asigna a esta prueba (alto, media, baja o no establecida.\n9.\nVencimiento: Fecha límite en la que debe realizarse esta prueba.\n10.\nModulo: Cual es el modulo o componente sobre el que se va realizar la prueba.\n11.\nTipo: Tipo de prueba que se va realizar la misma puede ser por ejemplo: usabilidad, seguridad, funcionalidad, integración, aceptación, performance, exploratorio, etc.\n12.\nResponsable: Persona que realiza la prueba.\nRBT - Pruebas basadas en Riesgos\nRBT o Pruebas basadas en riesgos (Risk-based testing) son evaluaciones que se realizan para planificar todas las pruebas y tienen las siguientes caracteristcas:\nIdentificar los riesgos.\nDeterminar cuál es la probabilidad.\nPriorizar los módulos de software.\nPlanificar, diseñar y ejecutar actividades de prueba de acuerdo con la priorización de los módulos.\nSupervisar y revisar los riesgos\nEste tipo de enfoque establece que el esfuerzo y la priorizacion de las pruebas se va a basar proporcionalmente al nivel de riesgo.\nLos riesgos más importantes se prueban lo más pronto posible teniendo en cuenta de que se pueda realizar y tener todos los componentes entregados para sus pruebas.\nUna de las maneras de poder clasificar los riesgos es utilizando la siguiente matriz.\n\n\n\nTecnicas de testing\n\nEl siguiente grafico define la clasificación de las pruebas de testing y realiza una clasificación en dos grupos denominado estatico y dinamico.\n\n\nTesting Estatico\nEl testing estatico son aquellas técnicas que se utilizan para detectar defectos sin ejecutar código.\nDentro de esta técnica tenemos el examen de artefactos de software para buscar errores tales como características faltantes, requisitos ambiguos o fallas de diseño.\nRealizar estas tecnicas trae como beneficio el ahorro de tiempo en fases posteriores del desarrollo, debido a que permite esto permite disminuir los costos .\nTesting Dinamico\nEl análisis dinámico requiere la ejecución del código y permite observar el funcionamiento del software y comparar los resultados.\nTesting Funcional\nEl testing funcional tambien denominado \"caja negra\" esta dentro del analisis dinamico, y como anteriormente las definicmos son las pruebas que permiten comprobar si los componentes desarrollados cumplen con las funcionalidades documentadas en requisito funcionales.\n\n\n\nTesting No Funcional\nSon las pruebas no funcionales que permiten medir las características de los sistemas, tales como tiempos de respuesta para las pruebas de rendimiento. Estas pruebas nos permiten conocer si existe algún riesgo o acción no esperada en un entorno productivo.\nTesting estructural\nEl testing estructural tambien denominado \"caja blanca\" es la prueba que valida el funcionamiento interno y la estructura de una pieza de software. Este tipo de testing se basa en el diseño interno y la implementación del software.\n\n\n\nBasado en la experiencia\nEl testing basado en la experiencia son pruebas que derivan de las habilidades y conocimiento que posee el tester, este tipo de pruebas permite que bajo la experiencia de la persona se pueda predecir cuales son los errores que pueden encontrarse.\nEl proceso para realizar este tipo de pruebas es poder realizar una lista con los posibles defectos y a partir de los esta lista poder diseñar las pruebas.\nEstas pruebas pueden ser:\n* Pruebas intuitivas: están pruebas estan basadas en solo en la experiencia previa.\n* Pruebas exploratorias: estas pruebas permiten explorar posibles errores basado en el conocimiento previo que tienen con sistemas o funcionalidades similares.\nBasado en defectos\nEsta técnica de prueba es basada en defectos, y los casos de prueba se diseñan a partir de una categoría de defecto específica conocida como taxonomía de defectos.\nLas taxonomías de defectos son listas categorizadas de defectos, las mismas contienen datos sobre tipos de defectos, causas raíz y otros datos relacionados con defectos.\nAlgunos ejemplos pueden ser:\n* 🔍Largo de los input no esta validado\n* 🔍Caracteres especiales no fueron validados\n* 🔍Fechas inválidas no fueron alertadas\n* 🔍URLs invalidas.\nPruebas de regresión\nLas pruebas de regresión o regression testing se utilizan para validar si la aplicación existente todavía funciona como se esperaba después de haber sido actualizada o modificada.\nEstas pruebas son fundamentales cuando se realiza una implementación de nuevas piezas de software y debido a esto es necesario conocer si algo que anteriormente funcionaba, continua funcionando si fallas despues de haber implmentado un nuevo release de la aplicación.\nEste tipo de pruebas se pueden realizar de forma manual siguiendo el caso de prueba, aunque debido a que estas pruebas suelen ser repetitivas puede realizarse la atuomatizacion de las mismas .\nTesting Automation\n\nLa automatización de pruebas consiste en el uso de software para ejecutar pruebas. Por lo cual La automatización de pruebas permite incluir pruebas repetitivas.\n\nLos beneficios de automatizar pruebas son:\n⬇️ Se reduce el trabajo repetitivo\n↘️Ahorro de costos.\n🔄Cada caso de prueba se puede automatizar y posteriormente reutilizar.\n⬆️Con L¡la automatización de pruebas se pueden ejecutar más casos de prueba.\n⏭️Respuesta rápida a los desarrolladores sobre defectos.\n🔀Automatizar un formato de Informe de defectos.\n⤴️Encontrar defectos omitidos por pruebas manuales.\nEstas pruebas se suelen desarrollar en distintos lenguajes de programación como java, c# , PHP o python y se utiliza un framework denominado Selenium.\n¿Qué es Selenium?\nSelenium es un framework de automatización web de codigo abierto que te permite ejecutar test en navegadores web. A continuación se va a desarrollar un ejemplo con Python.\nAlgunas ventajas que tenemos al utilzar Selenium:\nLos script se pueden generar en varios lenguajes de programación como Java, C#, PHP y Python\nEstas pruebas se pueden ejecutar en diferentes navegadores como firefox, chorme, safari y opera.\nPermite ejecutar una prueba en diferentes sistemas operativos como: Windows, Mac o Linux.\nSelenium se puede utilizar para:\nAceptación / pruebas funcionales\nReproducir errores\nPruebas de regresión\n\n\n\n\nPasos para ejecutar Selenium en python 🐍\nVamos a instalar el paquete de Selenium\n!pip install selenium\nPara ejecutar Selenium necesitamos instalar el ejecutable denominado chromedriver, este ejecutable va a variar en base al sistema operativo y la version de chrome que tengamos instalado, en el siguiente link podra encontrar cual es la version para el sistema operativo en el cual va desarrollar el script de python.\nLink: https://chromedriver.chromium.org/downloads\n\nPara ejecutar la prueba es necesario correr el siguiente codigo que va abrir chome y va a navegar a la pagina google, posteriormente es necesario poder identificar los elementos de la pagina que se quieren analizar.\nfrom selenium import webdriver\n\n# Ubicación del ejecutable\ndriver = webdriver.Chrome(\"/chromedriver\")\n\n# Ejecutamos una pagina de inicio\ndriver.get(\"https://google.com\")\nFormas de identificar a un elemento en el DOM\nSelenium Webdriver API admite múltiples formas de identificar elemento\nIdentificación\nSintaxis\nID\ndriver.find_element_by_id()\nnombre\ndriver.find_element_by_name()\nClassName\ndriver.find_element_by_class_name()\nTagName\ndriver.find_element_by_tag_name()\nXPath\ndriver.find_element_by_xpath()\nCSS Selector\ndriver.find_element_by_class_name()\nQué es XPath?\nXPath se define como XML path (Ruta XML). Esta estcutructar permite encontrar un elemento de la pagina web.\nLa sintaxis estándar para crear XPath es:\nXpath=//nombreEtiqueta[@atributo='valor']\n//: Selecciona el nodo actual\nNombre Etiqueta: Nombre de la etiqueta del nodo en particular\n@: Seleccionar atributo.\natributo: nombre de atributo del nodo.\nvalor: valor del atributo.\n\nTipos de path\nXPath absoluto: Ejemplo de xpath absoluto /html/body/div[4]/div/div[3]/article[1]/div[2]/a\nXPath relativo: Ejemplo de xpath absoluto //*[@id=\"1442737\"]/div[2]/a\n\nRealicemos un ejemplo simulando una prueba de sobre un sitio web, para poder simularlo vamos vamos a ingresar al sitio `https://tuquejasuma.com/ que es un sitio popular de reclamos en Argentina.\nEn este sitio vamos a ingresar en el buscador el termino \"banco nacion\" y hagamos click en el boton buscar para retorna todos los reclamos asociados a esta entidad bancaria.\ndriver.get(\"https://tuquejasuma.com/\")\nelement = driver.find_element_by_id(\"searcher\")\nelement.send_keys(\"Banco Nacion\")\ndriver.find_element_by_xpath('//*[@id=\"breadcrum-search\"]/form/button').click()\nEl script completo es el siguiente:\nfrom selenium import webdriver\n\n# Ubicación del ejecutable\ndriver = webdriver.Chrome(\"/chromedriver\")\n\n# Ejecutamos una pagina de inicio\ndriver.get(\"https://google.com\")\n\n# Ingresamos a la pagina tu queja suma\ndriver.get(\"https://tuquejasuma.com/\")\nelement = driver.find_element_by_id(\"searcher\")\nelement.send_keys(\"Banco Nacion\")\ndriver.find_element_by_xpath('//*[@id=\"breadcrum-search\"]/form/button').click()\n\nGitHub Datos de miercoles↩︎\nBest Strategies for Managing Bugs and Feature Requests: https://brainhub.eu/blog/strategies-for-managing-bugs/↩︎\nSoftware testing fundamentals: https://softwaretestingfundamentals.com/test-case/↩︎\n",
    "preview": "https://image.freepik.com/free-vector/tiny-people-testing-quality-assurance-software-isolated-flat-vector-illustration-cartoon-character-fixing-bugs-hardware-device-application-test-it-service-concept_74855-10172.jpg",
    "last_modified": "2021-06-25T01:10:26-03:00",
    "input_file": {}
  }
]
