[
  {
    "path": "posts/2023-11-12-data-quality/",
    "title": "Data Quality",
    "description": "En el siguiente art√≠culo te encontraras la definci√≥n de data quality, cuales son los dominios y como implementar una soluci√≥n rapidamente.",
    "author": [
      {
        "name": "Romina Mendez",
        "url": "https://r0mymendez.github.io/romymendezblog/"
      }
    ],
    "date": "2023-11-12",
    "categories": [
      "Data",
      "Python"
    ],
    "contents": "\n\nContents\nIntroducci√≥n\nQue es Data quality?\nData quality dimensions\nData quality dimensions- caso de uso\nPython Frameworks\nDiferencias entre Licencia Apache 2.0 y MIT\nDataset\nüü¢ Pandera\nInstalar pandera\nEjemplo de implementaci√≥n\n\nüü† Great Expectations\nInstalaci√≥n de great expectation\nEjemplo de implementaci√≥n\n\nSi quieres aprender‚Ä¶\n\n\nIntroducci√≥n\nEn el entorno digital actual, la cantidad de datos disponibles es abrumadora.\nSin embargo, la verdadera piedra angular para tomar decisiones informadas reside en la calidad de estos datos.\nEn este art√≠culo, exploraremos la importancia crucial de la calidad de datos, analizando los desaf√≠os inherentes que enfrentan las organizaciones en la gesti√≥n de la informaci√≥n.\nAunque a menudo pasada por alto, la calidad de datos desempe√±a un papel fundamental en la confiabilidad y utilidad de la informaci√≥n que sustenta nuestras decisiones estrat√©gicas.\nQue es Data quality?\nData quality √≥ calidad de los datos mide qu√© tan bien un conjunto de datos cumple con los criterios de accuracy, completeness, validity, consistency, uniqueness, timeliness y fitness para el prop√≥sito, y es fundamental para todas las iniciativas de gobernanza de datos dentro de una organizaci√≥n.\nLos est√°ndares de calidad de los datos garantizan que las empresas tomen decisiones basadas en datos para alcanzar sus objetivos comerciales.\nsource: IBM\n\nsource: DataCamp cheat sheet\nData quality dimensions\nEn la siguiente tabla destaca los distintos dominios de calidad de datos, desde la precisi√≥n hasta la aptitud, proporcionando una gu√≠a esencial para evaluar y mejorar la robustez de los conjuntos de datos.\nDimensi√≥n\nDescripci√≥n\nüéØ Precisi√≥n (Accuracy)\nExactitud de los datos, es decir, qu√© tan cerca est√°n de la realidad o la verdad. Datos precisos son aquellos que reflejan con precisi√≥n la informaci√≥n que intentan representar.\nüß© Integridad (Completeness)\nMide la totalidad de los datos. Un conjunto de datos completo es aquel que no tiene valores faltantes o huecos significativos. La integridad de los datos es crucial para obtener una visi√≥n completa y precisa.\n‚úÖ Validez (Validity)\nIndica si los datos est√°n en conformidad con las reglas y est√°ndares definidos. Los datos v√°lidos cumplen con las restricciones y criterios establecidos para un conjunto de datos espec√≠fico.\nüîÑ Coherencia (Consistency)\nSe refiere a la uniformidad de los datos a lo largo del tiempo y entre diferentes conjuntos de datos. Datos coherentes no presentan contradicciones o discrepancias cuando se comparan entre s√≠.\nüìá Unicidad (Uniqueness)\nEval√∫a si no hay duplicados en los datos. Los datos √∫nicos garantizan que cada entidad o elemento est√© representado solo una vez en un conjunto de datos.\n‚åõ Oportunidad (Timeliness)\nSe refiere a la actualidad de los datos. La informaci√≥n oportuna es aquella que est√° disponible cuando se necesita, sin demoras innecesarias.\nüèãÔ∏è Aptitud (Fitness)\nEste aspecto eval√∫a la relevancia y utilidad de los datos para el prop√≥sito previsto. Los datos deben ser adecuados y aplicables a los objetivos espec√≠ficos de la organizaci√≥n o del an√°lisis que se est√© llevando a cabo.\nData quality dimensions- caso de uso\nA continuaci√≥n colocamos un ejemplo en el que se puede observar algunos problemas que tiene un caso de uso basado en eccommerce\nID Transacci√≥n\nID Cliente\nProducto\nCantidad\nPrecio Unitario\nTotal\n‚ö™ 1\n10234\nLaptop HP\n1\n$800\n$800\nüü£ 2\n\nAuriculares Inal√°mbricos\n2\n$50\n$100\nüîµ 3\n10235\nTel√©fono Inteligente\n-1\n$1000\n-$1000\nüü¢ 4\n10236\nRat√≥n Inal√°mbrico\n3\n$30\n$90\nüü¢ 4\n10237\nTeclado Inal√°mbrico\n2\n$40\n$80\nüü£ Fila 2 (Completeness): La fila 2 no cumple con la integridad de los datos (Completeness) ya que falta el ID del cliente.\nLa informaci√≥n sobre el cliente est√° incompleta, lo que dificulta el seguimiento de la transacci√≥n hasta un cliente espec√≠fico.\nüîµFila 3 (Accuracy y Consistency): La fila 3 presenta problemas de exactitud (Accuracy) y coherencia (Consistency).\nLa cantidad de productos es negativa, lo cual es inexacto y va en contra de la consistencia esperada en un conjunto de datos de transacciones.\nüü¢Fila 4 (Unicidad): La introducci√≥n de una segunda fila con el mismo ID de transacci√≥n (ID Transacci√≥n = 4) viola el principio de unicidad.\nCada transacci√≥n debe tener un identificador √∫nico, y la presencia de dos filas con el mismo ID Transacci√≥n crea duplicados, afectando la unicidad de las transacciones.\n\nPython Frameworks\nLos siguientes son algunas de las implementaciones realizadas en python para poder realizar validaciones de la calidad de los datos\nFramework\nDescripci√≥n\nGreat Expectations\nGreat Expectations es una biblioteca open-source para la validaci√≥n de datos. Permite definir, documentar y validar expectativas sobre los datos, garantizando la calidad y consistencia en proyectos de ciencia de datos y an√°lisis.\nPandera\nPandera es una biblioteca de validaci√≥n de datos para estructuras de datos en Python, especialmente dise√±ada para trabajar con DataFrames de pandas. Permite definir esquemas y reglas de validaci√≥n para asegurar la conformidad de los datos.\nDora\nDora no es un framework conocido para calidad de datos, y podr√≠a haber un error tipogr√°fico o malentendido. Si tienes m√°s detalles o el nombre correcto, estar√© encantado de proporcionar informaci√≥n precisa.\nAnlicemos algunas de las metricas que se pueden observar en sus repositorios de github, teniendo en cuenta que las metricas fueron obtenidas el 2023-11-12\nMetricas\nGreat Expectations\nPandera\nDora\nüë• Colaboradores\n399\n109\n106\n‚ö†Ô∏è Issues abiertos\n112\n273\n1\nüü¢ Issues Cerrados\n1642\n419\n7\n‚≠ê Stars\n9000\n2700\n623\nüì∫ Watching\n78\n17\n42\nüîé Forks\n1400\n226\n63\nüì¨ Open PR\n43\n19\n0\nüêç Python version\n>=3.8\n>=3.7\nNo especificada\nüìÑ Nro. Versiones\n>=3.8\n76\n3\nüìÑ Ultima Version\n0.18.2\n0.17.2\n0.0.3\nüìÜ Fecha Ultima Version\n9 Nov 2023\n30 sep 2023\n30 jun 2020\nüìÑ Tipo de licencia\nApache-2.0 license\nMIT\nMIT\nüìÑ Languages\nPython 95.1%\nJupyter Notebook 4.3%\nJinja 0.4%\nJavaScript 0.1%\nCSS 0.1%\nHTML 0.0%\n\nPython 99.9%\nMakefile 0.1%\n\nPython100%\n\nDiferencias entre Licencia Apache 2.0 y MIT\nNotificaci√≥n de Cambios:\nApache 2.0: Requiere que se notifiquen los cambios realizados en el c√≥digo fuente cuando se distribuye el software.\nMIT: No requiere notificaci√≥n espec√≠fica de cambios.\n\nCompatibilidad:\nApache 2.0: Es conocida por ser compatible con m√°s licencias en comparaci√≥n con MIT.\nMIT: Tambi√©n es bastante compatible con diversas licencias, pero la Licencia Apache 2.0 a menudo se elige en proyectos que buscan una mayor interoperabilidad con otras licencias.\n\nAtribuci√≥n:\nApache 2.0: Requiere atribuci√≥n y la inclusi√≥n de un aviso de derechos de autor.\nMIT: Requiere atribuci√≥n de la autor√≠a original, pero puede tener requisitos menos estrictos en t√©rminos de c√≥mo se muestra esa atribuci√≥n.\n\n\nTeniendo en cuenta estas metricas actualmente analizadas vamos a realizar un ejemplo de una implementaci√≥n utilizando Pandera y Great expectations\n\nDataset\nPara el desarrollo de este ejemplo utilizaremos el conjunto de datos denominado Tips, el conjunto de datos se puede descargar del siguiente link.\nEl conjunto de datos ‚Äútips‚Äù que contiene informaci√≥n sobre las propinas dadas en un restaurante, junto con detalles sobre la factura total, el sexo de la persona que pag√≥ la factura, si el cliente es fumador, el d√≠a de la semana y la hora de la comida.\nColumna\nDescripci√≥n\ntotal_bill\nEl monto total de la factura (incluida la propina).\ntip\nLa cantidad de propina dada.\nsex\nEl g√©nero del pagador de la factura (hombre o mujer).\nsmoker\nSi el cliente es fumador o no.\nday\nEl d√≠a de la semana en que se realiz√≥ la comida.\ntime\nEl momento del d√≠a (almuerzo o cena).\nsize\nEl tama√±o del grupo que comparti√≥ la comida\nA continuaci√≥n una tabla con las primeras 5 filas del conjunto de datos:\ntotal_bill\ntip\nsex\nsmoker\nday\ntime\nsize\n16.99\n1.01\nFemale\nNo\nSun\nDinner\n2\n10.34\n1.66\nMale\nNo\nSun\nDinner\n3\n21.01\n3.50\nMale\nNo\nSun\nDinner\n3\n23.68\n3.31\nMale\nNo\nSun\nDinner\n2\n24.59\n3.61\nFemale\nNo\nSun\nDinner\n4\nüü¢ Pandera\nA continuci√≥n vamos a realizar un ejemplo de implementaci√≥n de Pandera utilizando el conjunto de datos anteriormente descripto.\nInstalar pandera\npip install pandas pandera \nEjemplo de implementaci√≥n\nImportar pandas y pandera\nimport pandas as pd\nimport pandera as pa\nImportar el archivo del dataframe\npath = 'data/tips.csv'\ndata = pd.read_csv(path)\n\nprint(f\"Numero de columnas: {data.shape[1]}, Numero de filas: {data.shape[0]}\")\nprint(f\"Nombre de columnas: {list(data.columns)}\")\ndata.info()\n<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 244 entries, 0 to 243\nData columns (total 7 columns):\n #   Column      Non-Null Count  Dtype  \n---  ------      --------------  -----  \n 0   total_bill  244 non-null    float64\n 1   tip         244 non-null    float64\n 2   sex         244 non-null    object \n 3   smoker      244 non-null    object \n 4   day         244 non-null    object \n 5   time        244 non-null    object \n 6   size        244 non-null    int64  \ndtypes: float64(2), int64(1), object(4)\nmemory usage: 13.5+ KB\nAhora vamos a crear el objeto schema que tiene todas las validaciones que queremos realizar.\nEn el siguiente link puede encontrar otras validaciones que se pueden realizar https://pandera.readthedocs.io/en/stable/dtype_validation.html\nschema = pa.DataFrameSchema({\n  \"total_bill\": pa.Column(float, checks=pa.Check.le(50)),\n  \"tip\"       : pa.Column(float, checks=pa.Check.between(0,30)),\n  \"sex\"       : pa.Column(str, checks=[pa.Check.isin(['Female','Male'])]),\n  \"smoker\"    : pa.Column(str, checks=[pa.Check.isin(['No','Yes'])]),\n  \"day\"       : pa.Column(str, checks=[pa.Check.isin(['Sun','Sat'])]),\n  \"time\"      : pa.Column(str, checks=[pa.Check.isin(['Dinner','Lunch'])]),\n  \"size\"      : pa.Column(int, checks=[pa.Check.between(1,4)])\n})\nPara poder obtener el error y posteriormente poder utilizar este output para analizarlo es necesario capturar el mismo con un exception.\ntry:\n    schema(data).validate()\nexcept Exception as e:\n    print(e)\n    error = e\nSchema None: A total of 3 schema errors were found.\n\nError Counts\n------------\n- SchemaErrorReason.SCHEMA_COMPONENT_CHECK: 3\n\nSchema Error Summary\n--------------------\nschema_context column     check                     failure_cases  n_failure_cases\n                                                   \nColumn         day        isin(['Sun', 'Sat'])      [Thur, Fri]             2\n               size       in_range(1, 4)              [5, 6]                2\n               total_bill less_than_or_equal_to(50)   [50.81]               1\nA continuaci√≥n tienes una funci√≥n que te permite transformar el output en un diccionario o en un dataframe de pandas.\ndef get_errors(error, dtype_dict=True):\n    response = []\n\n \n    for item in range(len(error.schema_errors)):\n        error_item = error.schema_errors[item]\n        response.append(\n        {\n            'column'     :error_item.schema.name,\n            'check_error':error_item.schema.checks[0].error,\n            'num_cases'  :error_item.failure_cases.index.shape[0],\n            'check_rows' :error_item.failure_cases.to_dict()\n        })\n    \n    if dtype_dict:\n        return response\n    else:\n        return pd.DataFrame(response)\nget_errors(error,dtype_dict=True)\n[{'column': 'total_bill',\n  'check_error': 'less_than_or_equal_to(50)',\n  'num_cases': 1,\n  'check_rows': {'index': {0: 170}, 'failure_case': {0: 50.81}}},\n {'column': 'day',\n  'check_error': \"isin(['Sun', 'Sat'])\",\n  'num_cases': 81,\n  'check_rows': {'index': {0: 77,\n    1: 78,\n    2: 79,\n    3: 80,\n    4: 81,\n    5: 82,\n    6: 83,\n    7: 84,\n...\n    5: 156,\n    6: 185,\n    7: 187,\n    8: 216},\n   'failure_case': {0: 6, 1: 6, 2: 5, 3: 6, 4: 5, 5: 6, 6: 5, 7: 5, 8: 5}}}]\nüü† Great Expectations\nGreat Expectations es una biblioteca de c√≥digo abierto basada en Python para validar, documentar y crear perfiles de sus datos.\nLa cual ayuda a mantener la calidad de los datos y mejorar la comunicaci√≥n sobre los datos entre equipos.\n\nsource : https://docs.greatexpectations.io/docs/\nPor lo cual podemos describir a Great Expectations como una herramienta de c√≥digo abierto dise√±ada para garantizar la calidad y confiabilidad de los datos en diversas fuentes, como bases de datos, tablas, archivos y dataframes.\nSu funcionamiento se basa en la creaci√≥n de grupos de validaciones que especifican las expectativas o reglas que los datos deben cumplir.\nLos siguientes son los pasos que debemos definir cuando utilizamos este framework:\n1.\nDefinici√≥n de Expectativas: Se especifican las expectativas que tienen sobre los datos.\nEstas expectativas pueden incluir restricciones simples, como rangos de valores, o reglas m√°s complejas sobre la coherencia y calidad de los datos.\n2.\nConexi√≥n a Fuentes de Datos: En este paso se debe definir cuales son las conexiones que debemos realizar a las diversas fuentes de datos, como bases de datos, tablas, archivos o dataframes.\n3.\nGeneraci√≥n de Suites de Validaciones: A partir de las expectativas definidas, Great Expectations genera suites de validaciones que son conjuntos organizados de reglas que se aplicar√°n a los datos.\n4.\nEjecuci√≥n de Validaciones: Las suites de validaciones se aplican a los datos, verificando si cumplen con las expectativas definidas.\nEsto puede realizarse autom√°ticamente en un flujo de trabajo programado o de forma interactiva seg√∫n sea necesario.\n5.\nGeneraci√≥n de An√°lisis y Reportes: Great Expectations proporciona capacidades avanzadas de an√°lisis y generaci√≥n de informes.\nEsto incluye perfiles detallados de la calidad de los datos y reportes que resumen la salud general de los datos en funci√≥n de las expectativas.\n6.\nAlertas y Notificaciones: En caso de que los datos no cumplan con las expectativas definidas, Great Expectations puede generar alertas o notificaciones, permitiendo a los usuarios tomar medidas inmediatas para abordar problemas de calidad de datos.\nEn conjunto, Great Expectations ofrece una soluci√≥n integral para garantizar la calidad de los datos a lo largo del tiempo, facilitando la detecci√≥n temprana de problemas y brindando confianza en la integridad y utilidad de los datos utilizados en an√°lisis y toma de decisiones.\nInstalaci√≥n de great expectation\n!pip install great_expectations==0.17.22 seaborn matplotlib numpy pandas\nEjemplo de implementaci√≥n\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport os\nimport re \n\nimport great_expectations as gx\nfrom ruamel.yaml import YAML\nfrom great_expectations.cli.datasource import sanitize_yaml_and_save_datasource\nfrom great_expectations.core.expectation_configuration import ExpectationConfiguration\n\nprint(f\"* great expectations version:{gx.__version__}\")\nprint(f\"* seaborn version:{sns.__version__}\")\nprint(f\"* numpy version:{np.__version__}\")\nprint(f\"* pandas:{pd.__version__}\")\n* great expectations version:0.17.22\n* seaborn version:0.13.0\n* numpy version:1.26.1\n* pandas:2.1.3\nImportar dataset utilizando great expectation\npath = 'data/tips.csv'\ndata_gx = gx.read_csv(path)\nListar todas las expectation disponibles por tipo\nlist_expectations = pd.DataFrame([item for item in dir(data_gx) if item.find('expect_')==0],columns=['expectation'])\nlist_expectations['expectation_type'] = np.select( [\n        list_expectations.expectation.str.find('_table_')>0, \n        list_expectations.expectation.str.find('_column_')>0,  \n        list_expectations.expectation.str.find('_multicolumn_')>0,\n    ],['table','column','multicolumn'],\n    default='other'\n)\n\nplt.figure(figsize=(20,6))\nsns.countplot(x=list_expectations.expectation_type)\nplt.show()\n\n\nEn la imagen se observa que las expectations disponibles son principalmente aplicadas a columnas (como por ejemplo: expect_column_max_to_be_between ) y a tablas (como por ejemplo: expect_table_columns_to_match_set) , aunque tambien se pueden aplicar una expectation basada en los valores de varias columnas (como por ejemplo:expect_multicolumn_values_to_be_unique).\n\nExpectations: Tables\n# La siguiente lista contiene las colmnas que debe tener el dataframe\ncolumns = ['total_bill', 'tip', 'sex', 'smoker', 'day', 'time', 'size']\ndata_gx.expect_table_columns_to_match_set(column_set = columns)\n{\n  \"success\": true,\n  \"result\": {\n    \"observed_value\": [\n      \"total_bill\",\n      \"tip\",\n      \"sex\",\n      \"smoker\",\n      \"day\",\n      \"time\",\n      \"size\"\n    ]\n  },\n  \"meta\": {},\n  \"exception_info\": {\n    \"raised_exception\": false,\n    \"exception_traceback\": null,\n    \"exception_message\": null\n  }\n}\n# Ahora borramos dos columnas que son \"time\" y \"size\" para validar cual es el resultado.\n\ncolumns = = ['total_bill', 'tip', 'sex', 'smoker', 'day']\ndata_gx.expect_table_columns_to_match_set(column_set = columns)\n\nSi observamos el resultado es False y en details nos detallan cuales son las columnas que el dataframe tiene adicionales a las que se esperaban.\n\n{\n  \"success\": false,\n  \"result\": {\n    \"observed_value\": [\n      \"day\",\n      \"sex\",\n      \"size\",\n      \"smoker\",\n      \"time\",\n      \"tip\",\n      \"total_bill\"\n    ],\n    \"details\": {\n      \"mismatched\": {\n        \"unexpected\": [\n          \"size\",\n          \"time\"\n        ]\n      }\n    }\n  },\n  \"meta\": {},\n  \"exception_info\": {\n    \"raised_exception\": false,\n    \"exception_traceback\": null,\n    \"exception_message\": null\n  }\n}\nExpectations: Columns\nValidemos que existe un valor categorico dentro de una columna\ndata_gx['total_bill_group'] = pd.cut(data_gx['total_bill'],\n                              bins=[0,10,20,30,40,50,float('inf')], \n                              labels=['0-10', '10-20', '20-30', '30-40', '40-50', '>50'],\n                              right=False, \n                              include_lowest=True)\n\n# Ahora validamos si 3 categorias existen dentro del conjunto de datos\n\ndata_gx.expect_column_distinct_values_to_contain_set(column='total_bill_group',\n                                                      value_set=['0-10','10-20', '20-30'],\n                                                      result_format='BASIC') \n{\n  \"success\": true,\n  \"result\": {\n    \"observed_value\": [\n      \"0-10\",\n      \"10-20\",\n      \"20-30\",\n      \"30-40\",\n      \"40-50\",\n      \">50\"\n    ],\n    \"element_count\": 244,\n    \"missing_count\": null,\n    \"missing_percent\": null\n  },\n  \"meta\": {},\n  \"exception_info\": {\n    \"raised_exception\": false,\n    \"exception_traceback\": null,\n    \"exception_message\": null\n  }\n}\nValidemos que la columna no tiene valor nulos\ndata_gx.expect_column_values_to_not_be_null('sex')\n{\n  \"success\": true,\n  \"result\": {\n    \"element_count\": 244,\n    \"unexpected_count\": 0,\n    \"unexpected_percent\": 0.0,\n    \"unexpected_percent_total\": 0.0,\n    \"partial_unexpected_list\": []\n  },\n  \"meta\": {},\n  \"exception_info\": {\n    \"raised_exception\": false,\n    \"exception_traceback\": null,\n    \"exception_message\": null\n  }\n}\nGreat Expectation Project\nAhora vamos a genera un proyecto de great expectation para poder ejecutar un grupo de validaciones basados en uno o varios conjuntos de datos.\nInicializar el proyecto de great expectation\n !yes Y | great_expectations init\n  ___              _     ___                  _        _   _\n / __|_ _ ___ __ _| |_  | __|_ ___ __  ___ __| |_ __ _| |_(_)___ _ _  ___\n| (_ | '_/ -_) _` |  _| | _|\\ \\ / '_ \\/ -_) _|  _/ _` |  _| / _ \\ ' \\(_-<\n \\___|_| \\___\\__,_|\\__| |___/_\\_\\ .__/\\___\\__|\\__\\__,_|\\__|_\\___/_||_/__/\n                                |_|\n             ~ Always know what to expect from your data ~\n\nLet's create a new Data Context to hold your project configuration.\n\nGreat Expectations will create a new directory with the following structure:\n\n    great_expectations\n    |-- great_expectations.yml\n    |-- expectations\n    |-- checkpoints\n    |-- plugins\n    |-- .gitignore\n    |-- uncommitted\n        |-- config_variables.yml\n        |-- data_docs\n        |-- validations\n\nOK to proceed? [Y/n]: \n================================================================================\n\nCongratulations! You are now ready to customize your Great Expectations configuration.\n\nYou can customize your configuration in many ways. Here are some examples:\n\n  Use the CLI to:\n    - Run `great_expectations datasource new` to connect to your data.\n    - Run `great_expectations checkpoint new <checkpoint_name>` to bundle data with Expectation Suite(s) in a Checkpoint for later re-validation.\n    - Run `great_expectations suite --help` to create, edit, list, profile Expectation Suites.\n    - Run `great_expectations docs --help` to build and manage Data Docs sites.\n\n  Edit your configuration in great_expectations.yml to:\n    - Move Stores to the cloud\n    - Add Slack notifications, PagerDuty alerts, etc.\n    - Customize your Data Docs\n\nPlease see our documentation for more configuration options!\nCopiar datos dentro de la carpeta de ‚Äúgx‚Äù generada a partir de la inicializaci√≥n del proyecto\n!cp -r data gx\n# vamos a imprimir el contenido de la carpeta\n\ndef print_directory_structure(directory_path, indent=0):\n    current_dir = os.path.basename(directory_path)\n    print(\"    |\" + \"    \" * indent + f\"-- {current_dir}\")\n    indent += 1\n    with os.scandir(directory_path) as entries:\n        for entry in entries:\n            if entry.is_dir():\n                print_directory_structure(entry.path, indent)\n            else:\n                print(\"    |\" + \"    \" * indent + f\"-- {entry.name}\")\n\n\nprint_directory_structure('gx')\n    |-- gx\n    |    -- great_expectations.yml\n    |    -- plugins\n    |        -- custom_data_docs\n    |            -- renderers\n    |            -- styles\n    |                -- data_docs_custom_styles.css\n    |            -- views\n    |    -- checkpoints\n    |    -- expectations\n    |        -- .ge_store_backend_id\n    |    -- profilers\n    |    -- .gitignore\n    |    -- data\n    |        -- tips.csv\n    |    -- uncommitted\n    |        -- data_docs\n    |        -- config_variables.yml\n    |        -- validations\n    |            -- .ge_store_backend_id\nAlgunas aclaraciones sobre los archivos y carpetas que se generan en esta carpeta:\nArchivos/Carpetas\nDescripci√≥n\nüìÑ great_expectations.yml\nEste archivo contiene la configuraci√≥n principal del proyecto. Aqu√≠ se especifican detalles como las ubicaciones de almacenamiento y otros par√°metros de configuraci√≥n.\nüìÇ plugins\ncustom_data_docs:\nüìÑrenderers: Contiene renderizadores personalizados para documentos de datos.\nüìÑ styles: Incluye estilos personalizados para los documentos de datos, como hojas de estilo CSS (data_docs_custom_styles.css).\nüìÑ views: Puede contener vistas personalizadas para los documentos de datos.\n\nüìÇ checkpoints\nEsta carpeta podr√≠a contener definiciones de checkpoints, que son puntos en el flujo de datos donde se pueden realizar validaciones espec√≠ficas.\nüìÇ expectations\nAqu√≠ se almacenan las expectativas definidas para los datos. Este directorio puede contener varias subcarpetas y archivos, dependiendo de la organizaci√≥n del proyecto.\nüìÇ profilers\nPuede contener configuraciones para perfiles de datos, que son an√°lisis detallados de las estad√≠sticas de los datos.\nüìÑ .gitignore\nEs un archivo de configuraci√≥n para Git que especifica archivos y carpetas que deben ignorarse al realizar operaciones de seguimiento y compromiso (commit)\nüìÇ data\nContiene los datos utilizados en el proyecto, en este caso, el archivo tips.csv.\nüìÇ uncommitted\nüìÇdata_docs: Carpeta donde se generan documentos de datos.\nüìÑconfig_variables.yml: Archivo de configuraci√≥n que puede contener variables espec√≠ficas del proyecto.\nüìÇvalidations: Puede contener resultados de validaciones realizadas en los datos.\n\nConfiguraci√≥n de datasource y data conectors\n\nDataSource: Es el origen de datos utilizado (puede ser un archivo, API, base de datos, entre otros.\nData Connectors: Son los conectores que facilitan la conexion a la fuentes de datos y donde se deben definir las credenciales de acceso, ubicaci√≥n, entre otros.\n\ndatasource_name_file = 'tips.csv'\ndatasource_name = 'datasource_tips'\ndataconnector_name = 'connector_tips'\n# Creamos la configuraci√≥n del datasource\n\ncontext = gx.data_context.DataContext()\nmy_datasource_config = f\"\"\"\n    name: {datasource_name}\n    class_name: Datasource\n    execution_engine:\n      class_name: PandasExecutionEngine\n    data_connectors:\n      {dataconnector_name}:\n        class_name: InferredAssetFilesystemDataConnector\n        base_directory: data\n        default_regex:\n          group_names:\n            - data_asset_name\n          pattern: (.*)\n      default_runtime_data_connector_name:\n        class_name: RuntimeDataConnector\n        assets:\n          my_runtime_asset_name:\n            batch_identifiers:\n              - runtime_batch_identifier_name\n\"\"\"\n\nyaml = YAML()\ncontext.add_datasource(**yaml.load(my_datasource_config))\nsanitize_yaml_and_save_datasource(context, my_datasource_config, overwrite_existing=True)\nConfiguraci√≥n de las expectations\n\nEn el siguiente fragmento de c√≥digo, se presenta la configuraci√≥n de tres expectativas (expectations).\nEn particular, la √∫ltima de ellas incluye un par√°metro denominado \"mostly\" con un valor de 0.75.\nEste par√°metro indica que la expectativa puede fallar en hasta un 25% de los casos, ya que, por defecto, se espera un cumplimiento del 100% a menos que se especifique lo contrario.\nAdicionalmente se puede especificar un mensaje de error en formato markdown, tal como se visualiza en la ultima expectation.\n\nexpectation_configuration_table =  ExpectationConfiguration(\n   expectation_type=\"expect_table_columns_to_match_set\",\n      kwargs= {\n        \"column_set\": ['total_bill', 'tip', 'sex', 'smoker', 'day', 'time', 'size']\n      },\n      meta= {}\n)\n\nexpectation_configuration_total_bill = ExpectationConfiguration(\n      expectation_type= \"expect_column_values_to_be_between\",\n      kwargs= {\n        \"column\": \"total_bill\",\n        \"min_value\": 0,\n        \"max_value\": 100\n      },\n      meta= {}\n)\n\n\nexpectation_configuration_size = ExpectationConfiguration(\n   expectation_type=\"expect_column_values_to_not_be_null\",\n   kwargs={\n      \"column\": \"size\",\n      \"mostly\": 0.75,\n   },\n   meta={\n      \"notes\": {\n         \"format\": \"markdown\",\n         \"content\": \"Expectation to validate column `size` does not have null values.\"\n      }\n   }\n)\nCreaci√≥n de la suite expectation\nexpectation_suite_name = \"tips_expectation_suite\"\nexpectation_suite = context.create_expectation_suite(\n    expectation_suite_name=expectation_suite_name, \n    overwrite_existing=True\n)\n\n# Add expectations\nexpectation_suite.add_expectation(expectation_configuration=expectation_configuration_table)\nexpectation_suite.add_expectation(expectation_configuration=expectation_configuration_total_bill)\nexpectation_suite.add_expectation(expectation_configuration=expectation_configuration_size)\n\n# save expectation_suite\ncontext.save_expectation_suite(expectation_suite=expectation_suite, \n                               expectation_suite_name=expectation_suite_name)\ndata-quality/gx/expectations/tips_expectation_suite.json\n\nDentro de la carpeta expectations se crea un archivo json con todas las expectations generadas anteriormente.\n\nConfiguraci√≥n de los checkpoints\ncheckpoint_name ='tips_checkpoint'\n\nconfig_checkpoint = f\"\"\"\n    name: {checkpoint_name}\n    config_version: 1\n    class_name: SimpleCheckpoint\n    expectation_suite_name: {expectation_suite_name}\n    validations:\n      - batch_request:\n          datasource_name: {datasource_name}\n          data_connector_name: {dataconnector_name}\n          data_asset_name: {datasource_name_file}\n          batch_spec_passthrough:\n            reader_method: read_csv\n            reader_options: \n              sep: \",\"\n          data_connector_query:\n            index: -1\n        expectation_suite_name: {expectation_suite_name}\n\"\"\"\n\n# Validar si la estructura del yaml es correcta\ncontext.test_yaml_config(config_checkpoint)\n\n# Agregar el checkpoint al contexto generado\ncontext.add_checkpoint(**yaml.load(config_checkpoint)) \nEjecutar el checkpoint para validar todas las expectations configuradas sobre el conjunto de datos\nresponse = context.run_checkpoint(checkpoint_name=checkpoint_name)\nPara observar el resultado obtenido de las validaciones se puede convertir a json\n response.to_json_dict()\n{'run_id': {'run_name': None, 'run_time': '2023-11-12T20:39:23.346946+01:00'},\n 'run_results': {'ValidationResultIdentifier::tips_expectation_suite/__none__/20231112T193923.346946Z/722b2e93e32fd7222c8ad9339f3e0e1d': {'validation_result': {'success': True,\n    'results': [{'success': True,\n      'expectation_config': {'expectation_type': 'expect_table_columns_to_match_set',\n       'kwargs': {'column_set': ['total_bill',\n         'tip',\n         'sex',\n         'smoker',\n         'day',\n         'time',\n         'size'],\n        'batch_id': '722b2e93e32fd7222c8ad9339f3e0e1d'},\n       'meta': {}},\n      'result': {'observed_value': ['total_bill',\n        'tip',\n        'sex',\n        'smoker',\n        'day',\n        'time',\n        'size']},\n      'meta': {},\n      'exception_info': {'raised_exception': False,\n       'exception_traceback': None,\n       'exception_message': None}},\n     {'success': True,\n...\n  'notify_on': None,\n  'default_validation_id': None,\n  'site_names': None,\n  'profilers': []},\n 'success': True}\nObtener los resultados\n context.open_data_docs()\n\nAl ejecutar este chunck de codigo se va abrir un archivo html con el resultado de las validaciones que esta en gx/uncommitted/data_docs/local_site/validations/tips_expectation_suite/__none__/20231112T192529.002401Z/722b2e93e32fd7222c8ad9339f3e0e1d.html\n\n\n\n\nSi quieres aprender‚Ä¶\nPandera Documentaci√≥n Oficial\nPandera: Statistical Data Validation of Pandas Dataframes - Researchgate\nGreat Expectation Documentaci√≥n Oficial\nData Quality Fundamentals Book O‚Äôrelly\nGreat Expectation Yoututbe Channel\n\n\n\n",
    "preview": "https://img.freepik.com/free-vector/statistics-concept-illustration_114360-4254.jpg",
    "last_modified": "2023-11-13T00:07:24+01:00",
    "input_file": {}
  },
  {
    "path": "posts/2022-10-06-aws-copilot/",
    "title": "AWS Copilot",
    "description": "En el siguiente art√≠culo te cuento que es AWS Copilot, como se utiliza este proyecto y la facilidad de implementarlo.",
    "author": [
      {
        "name": "Romina Mendez",
        "url": "https://r0mymendez.github.io/romymendezblog/"
      }
    ],
    "date": "2022-10-06",
    "categories": [
      "Cloud Computing"
    ],
    "contents": "\n\nContents\nIntroducci√≥n\nüí°AWS ECS (Elastic Container Services)\n‚öíÔ∏è ECS con instancias EC2\n‚öíÔ∏è ECS con AWS Fargate (Serverless)\n\nüí°AWS Copilot\nüîé Comparativa de tareas a realizar¬†\nüß© Componentes\n‚öíÔ∏è Instalaci√≥n y utilizaci√≥n¬†\nüîé Logs\nüìâ Tr√°fico a producci√≥n\nüß™Testing\nüí∞Costos del servicio\n\nüéØConclusiones Finales\nüìöBibliograf√≠a\n\nIntroducci√≥n\nEn el presente articulo te explico el uso del servicio AWS Copilot, pero para poder realizarlo es necesario que comencemos analizando que es y como funciona el servicio de ECS (AWS Elastic Container Service) y sus formas de implementaci√≥n.\nEsto es necesario debido a que AWS copilot realiza la implementaci√≥n y despliegue de una aplicaci√≥n utilizando ECS.\nüí°AWS ECS (Elastic Container Services)\nElastic Container Service (ECS) es una plataforma de orquestaci√≥n de contenedores escalable propietaria de AWS y la misma fue dise√±ada para ejecutar, detener y administrar contenedores en un cl√∫ster.\nPor lo cual podemos definir que ECS es el servicio de contenedores de AWS Docker que maneja la orquestaci√≥n y el aprovisionamiento de contenedores de Docker.\nEste servicio contiene los siguientes conceptos:\n‚òÅÔ∏è Definici√≥n de tarea: Describe c√≥mo se debe iniciar un contenedor docker.\n‚òÅÔ∏è Tarea: este es un contenedor en ejecuci√≥n con la configuraci√≥n definida en la definici√≥n de tarea.\n‚òÅÔ∏è Servicio: define tareas de ejecuci√≥n prolongada de la misma definici√≥n de tarea.\n‚òÅÔ∏è Cl√∫ster: un grupo l√≥gico de instancias EC2.\n‚òÅÔ∏è Instancia de contenedor: est√° es solo una instancia de EC2 que forma parte de un cl√∫ster de ECS y tiene docker.\n‚öíÔ∏è ECS con instancias EC2\nEn este modelo, los contenedores se implementan en instancias EC2 (VM) creadas para el cl√∫ster.\nECS los administra junto con las tareas que forman parte de la definici√≥n de la tarea.\n‚úÖ Ventajas\n‚ùå Desventajas\nTiene control total sobre el tipo de instancia EC2 utilizada.\n\nAl trabajar con EC2 es necesario que todas las actualizaciones de seguridad de las instancias, como su escalamiento debe ser realizado por el administrador de esta arquitectura.\n\nPermite poder utilizar instancias que pueden estar optimizadas dependiendo lo que se desee ejecutar.\n\nCosto es en base al tipo de instancia EC2 que se ejecuta dentro del cl√∫ster y redes de VPC.\n\n‚öíÔ∏è ECS con AWS Fargate (Serverless)\nEn esta variante ya no se utilizan instancias o servidores EC2.\nSimplemente es necesario seleccionar la combinaci√≥n de CPU y memoria que necesita.\n‚úÖ Ventajas\n‚ùå Desventajas\nNo hay servidores para administrar.\n\nECS + Fargate admite solo un modo de red y esto¬† limita su control sobre la capa de red\n\nAWS est√° a cargo de la disponibilidad y escalabilidad de los contenedores.\n\nCosto es en funci√≥n de la CPU y la memoria que seleccione. La cantidad de n√∫cleos de CPU y GB determina el costo de ejecutar el cl√∫ster.\n\nFargate Spot, es¬† una nueva capacidad que puede ejecutar tareas de ECS tolerantes a interrupciones con hasta un 70 % de descuento sobre el precio de Fargate.\n\n\nüí°AWS Copilot\nAWS Copilot es una herramienta que se utiliza por la l√≠nea de comando de AWS y permite la simplificaci√≥n de la creaci√≥n, despliegue, control y operaci√≥n de contenedores en ECS utilizando un entorno de desarrollo local.¬†\nEsta herramienta administra los componentes que son necesarios para el despliegue y el funcionamiento de una aplicaci√≥n tales como VPC, balanceadores de carga, flujos de implementaci√≥n y almacenamiento.\nPor lo cual solo es necesario proporcionar un contenedor de la aplicaci√≥n y m√≠nimas configuraciones necesarias, dando como resultado una implementaci√≥n m√°s r√°pida y haciendo foco en el desarrollo de aplicaci√≥n.\nüîé Comparativa de tareas a realizar¬†\nVer como los servicios se van a comunicar entre s√≠, por lo cual hay que tener en cuenta los siguientes escenarios:\nActividades\nSIN AWS-copilot\nCON AWS-copilot\nDesarrollo de la aplicaci√≥n\nEquipo de desarrollo\nEquipo de desarrollo\nGeneraci√≥n del contenedor\nEquipo de desarrollo\nEquipo de desarrollo\nSubredes de Virtual Private Cloud (VPC)\nEquipo de desarrollo\nAWS-Copilot\nBalanceadores de carga\nEquipo de desarrollo\nAWS-Copilot\nFlujos de implementaci√≥n (ci/cd)\nEquipo de desarrollo\nAWS-Copilot\nAlmacenamiento persistente de su aplicaci√≥n.\nEquipo de desarrollo\nAWS-Copilot\nSincronizar el despliegue en ambientes\nEquipo de desarrollo\nAWS-Copilot\nüß© Componentes\nLa siguiente tabla contiene los componentes que se configuran al utilizar el servicio de aws copilot.\nComponente\nDescripci√≥n\nAplicaci√≥n\n| Una aplicaci√≥n es un mecanismo de agrupaci√≥n de las piezas de su sistema.¬†\nAmbiente\nUn ambiente es una etapa del despliegue de una aplicaci√≥n.¬†\nServicio\nUn servicio es un proceso √∫nico de c√≥digo de larga ejecuci√≥n dentro de un contenedor.¬†¬†\n‚öíÔ∏è Instalaci√≥n y utilizaci√≥n¬†\nEn solo 5 pasos podemos implementar una aplicaci√≥n utilizando aws-copilot, como lo muestra la imagen siguiente.\nEsto permite que el equipo de desarrollo solo haga foco en el desarrollo y no tanto en el despliegue de la infraestructura.\nLa primera aplicaci√≥n que se implemente en copilot realizar√° una configuraci√≥n predeterminada y la misma ser√° con un¬† contenedor serverless en fargate.\nComo se observa en la siguiente imagen con solo 5 pasos ya podemos hacer un despliegue de una aplicaci√≥n.\n\nLos pasos como se ven en el flujo son los siguientes:\nInstalamos AWS copilot que va necesitar las credenciales del cliente de aws\nCreamos el Dockerfile de nuesta aplicaci√≥n\nEjecutamos en una terminal copilot init para inicializar.\nAl ejecutar el init posteriormente van aparecer algunas preguntas para responder tales como: el nombre de la aplicaci√≥n , tipo de servicio , nombre del servicio y la ubicaci√≥n del dockerfile\nEn este ultimo paso se va a retorna una URL para poder acceder a la aplicaci√≥n.\nüîé Logs\nPara obtener los logs de los contenedores desplegados, es necesario ejecutar el siguiente comando:\n$ copilot svc logs- follow\nüìâ Tr√°fico a producci√≥n\nPara hacer el despliegue en producci√≥n es necesario poder generar diferentes ambientes, por lo cual para generarlos es necesario ejecutar el siguiente comando.\n$ copilot env init\nPosteriormente es importante poder modificar el archivo de manifiesto que contiene todas las configuraciones de la aplicaci√≥n y el mismo se encuentra en ¬†nombredeaplicacion/manifest.yml\nUna vez finalizada la configuraci√≥n del ambiente es necesario hacer el despliegue en producci√≥n (u otro ambiente, pero el siguiente ejemplo es en producci√≥n).\n$ copilot svc deploy ‚Äîenv production\nüß™Testing\nPara poder hacer pruebas de la aplicaci√≥n desplegada, se puede utilizar apachebench el cual permite generar tr√°fico a la aplicaci√≥n web.\nPara esto es necesario poder ejecutar el siguiente comando en el cual se desea generar un n√∫mero de 5000 transacciones a mi servicio con una concurrencia de 25 solicitudes a la vez.\nab -n 5000 -c 25<http://app12345.us-east-1.elb.amazonaws.com>\nEn el caso de no tener la respuesta esperada puedo modificar mi archivo de manifiesto y escalar horizontalmente la aplicaci√≥n en base a los diferentes ambientes.¬†\nüí∞Costos del servicio\nEsta es una herramienta distribuida por Amazon bajo una licencia apache 2.0, por lo cual esto significa que es una aplicaci√≥n open source.\nAl ser una aplicaci√≥n open source no tiene costos adicionales, el precio est√° dado por el uso de los servicios configurados.\nüéØConclusiones Finales\n\nRealizando un breve resumen de AWS copilot podemos destacar las siguientes caracter√≠sticas:\nAWS Copilot es una herramienta open source de AWS que permite implementar un contenedor listo para producci√≥n en solo 5 pasos, permitiendo que el foco est√© en el desarrollo de la aplicaci√≥n y no tanto en la infraestructura.\nEs simple de configurar , ya que solo es necesario la ejecuci√≥n de algunos comandos y modificar el archivo de manifiesto en base a los recursos que nuestra aplicaci√≥n necesita .\nEn el caso que se requiera un crecimiento horizontal solo se debe modificar el archivo de manifiesto y posteriormente se debe realizar el despliegue de la aplicaci√≥n.\nAWS copilot permite configurar un pipeline de CI/CD para poder hacer despliegues entre ambientes de forma autom√°tica.\nLa generaci√≥n de KPI , alarmas y m√©tricas de la aplicaci√≥n se pueden obtener con pocos comandos utilizando el servicio de AWS-Copilot.\nüìöBibliograf√≠a\nüìöT√≠tulo: Presentamos AWS Copilot, Sitio: Blog de Amazon Web Services (AWS), Autor: Nathan Peck,Gabriel Gasca Torres y Jos√© Lorenzo Cu√©ncar, url: https://aws.amazon.com/es/blogs/aws-spanish/presentamos-aws-copilot/, Fecha de consulta:2022-09-17\nüìöTitulo: Introducci√≥n a Amazon ECS mediante AWS Copilot, Sitio: Documentaci√≥n oficical de AWS, Autor: AWS, url: https://docs.aws.amazon.com/es_es/AmazonECS/latest/userguide/getting-started-aws-copilot-cli.html, Fecha de consulta: 2022-09-17\nüìöTitulo: AWS Copilot, Sitio: AWS, Autor: AWS, url: https://aws.amazon.com/es/containers/copilot/, Fecha de consulta: 2022-09-17\nüìöTitulo: Gentle Introduction to How AWS ECS Works with Example Tutorial, Sitio: Medium, Autor: Tung Nguyen , Url: https://medium.com/boltops/gentle-introduction-to-how-aws-ecs-works-with-example-tutorial-cea3d27ce63d, Fecha de consulta: 2022-09-17\n\n\n\n",
    "preview": "https://img.freepik.com/free-vector/two-users-searchig-big-data-cloud-computing-storage-technology-large-database-data-analysis-digital-information-concept-vector-isolated-illustration_335657-2200.jpg",
    "last_modified": "2023-11-12T23:46:23+01:00",
    "input_file": {}
  },
  {
    "path": "posts/2022-07-23-aprender-git/",
    "title": "10 sitios para aprender [gratis] Git!",
    "description": "Si quieres aprender Git aqu√≠ te dejo recursos para poder lograr este objetivo.",
    "author": [
      {
        "name": "Romina Mendez",
        "url": "https://r0mymendez.github.io/romymendezblog/"
      }
    ],
    "date": "2022-07-23",
    "categories": [
      "Metodologias"
    ],
    "contents": "\n\nContents\n10 sitios para aprender [gratis] Git!\n¬øQue es Git?\nControl de versiones\n\nComo aprender Git\n1. Codeacademy\n2. Git Documentation\n3. Oh my git\n4. Git cheat sheet\n5. Atlassian Tutorial\n6. Rstudio Git\n7. Happy git with r\n8. Learn Git Branching\n9. Git Tower Book\n10. W3shcools\nOtras referencias:\n\n\n\n10 sitios para aprender [gratis] Git!\nSi quieres aprender Git aqu√≠ te dejo recursos para poder lograr este objetivo.\n¬øQue es Git?\nGit es un sistema de control de versiones de c√≥digo abierto que permite manejar y realizar control de versiones en proyectos de desarrollo de software.\nFue desarrollado en 2005 por Linus Torvalds, el creador de del kernel de sistema operativo de Linux.\n\nControl de versiones\nEn la siguiente imagen se puede ver un simple ejemplo de un documento que fue modificado varias veces y cada version nueva tiene una nueva denominaci√≥n.\nEste mismo ejemplo se puede reproducir en un equipo, donde varios desarrolladores modifican un mismo documento.\nEsto trae como consecuencia la dificultad de gestionar los cambios y problemas para documentar el porque de las modificaciones.\nDebido a esto Git es una herramienta que nos permite trabajar de forma ordenada, con un equipo de desarrollo y sin preocuparnos de tener multiples versiones del mismo documento.\nPhdcomics.com: https://twitter.com/phdcomics/status/1306536945980383232Como aprender Git\nA continuaci√≥n te dejo 10 sitios para poder aprender Git de manera gratuita.\n1. Codeacademy\nCodeacademy es una plataforma de cursos de desarrollo y uno de ellos permite aprender git con una consola online y contiene 12 cap√≠tulos con ejercicios para realizar.\n\n2. Git Documentation\nEn el sitio web oficial de git existe la documentaci√≥n disponible con video y tutoriales para poder aprender f√°cilmente.\n3. Oh my git\nEs un juego interactivo, el cual es un desarrollo de c√≥digo abierto y tiene como objetivo realizar diferentes desafios y aprender como trabajar con git.\nhttps://ohmygit.org/4. Git cheat sheet\nEsta es una cheet sheet en pdf que te permite recordar los comando b√°sicos y una breve explicaci√≥n de como utilizarlos .\nEste documento lo puedes descargar en varios idiomas incluyendo espa√±ol e ingles.\n\n5. Atlassian Tutorial\nAtlassian tiene varios libros online en ingles y espa√±ol que permite aprender git y como implementarlo utilizando bitbucket cloud.\n6. Rstudio Git\nRstudio que es una IDE que permite el desarrollo principalmente en lenguaje R, aunque actualmente soporta varios lenguajes adicionales tales como python, permite versionar codigo con git.\n\n7. Happy git with r\nPara desarrolladores de R tambi√©n tenemos este sitio con m√°s de 40 cap√≠tulos en cual muestra como implementar git en un proyecto de R.\n8. Learn Git Branching\nEsta aplicaci√≥n te permite aprender de manera interactiva a trabajar con ramas en git\n\n9. Git Tower Book\nEs un libro online con varios cap√≠tulos desde los introductorios hasta los m√°s avanzados para aprender como implementar la git en un proyecto de desarrollo.\nhttps://www.git-tower.com/learn/git/ebook/en/desktop-gui/basics/what-is-version-control10. W3shcools\nEs una plataforma para aprender a programar en varios lenguajes, pero tambi√©n posee ejercicios que se pueden resolver desde una consola desde la misma web y aprender de forma interactiva.\nAdicionalmente posee un examen para con varias preguntas para evaluar tu conocimiento sobre Git.\nOtras referencias:\nGIT: https://git-scm.com/\nWhat is GIT?:\nhttps://www.atlassian.com/es/git/tutorials/what-is-git\n\n\n\n\n",
    "preview": "https://img.freepik.com/free-vector/team-programmers-working-program-code-with-laptops-teamwork-male-female-professional-testers-coders-flat-vector-illustration-software-development-programming-lesson-concept_74855-22051.jpg",
    "last_modified": "2023-11-12T23:47:26+01:00",
    "input_file": {}
  },
  {
    "path": "posts/2022-07-17-adalab-workshop-python/",
    "title": "Convi√©rtete en una data analyst de pel√≠cula",
    "description": "Este es el workshop de python en el cual analizamos un conjunto de datos de Neflix  y el mismo fue realizado de forma online para la comunidad de Adalab",
    "author": [
      {
        "name": "Romina Mendez",
        "url": "https://r0mymendez.github.io/romymendezblog/"
      }
    ],
    "date": "2022-07-17",
    "categories": [
      "DataViz",
      "Python",
      "Data"
    ],
    "contents": "\n\nContents\nAdalab\nWorkshop\nComunicaci√≥n\nConvi√©rtete en una data analyst de pel√≠cula\nRecursos\n\n\nLa programaci√≥n es una habilidad que puede ser adquirida de manera autodidacta, pero a veces uno no sabe como empezar. Por lo cual realice un workshop de Pythonüêç para la comunidad de Adalab y el mismo fue realizado üìÜ26 de mayo de 2022 de forma online.\nAdalab\nAdalab es una escuela especializada en formaci√≥n tecnol√≥gica para mujeres, en formato online y en directo. Su objetivo es trabajar para formar y acompa√±ar a mujeres que buscan un giro profesional adaptado a las nuevas necesidades de las empresas. F√≥rmate desde cero en una profesi√≥n con futuro e inicia una carrera en el sector tech con nuestros bootcamps de 12 semanas de Programaci√≥n Web o Data Analytics.\nWorkshop\nEl workshop fue realizado utilizando un conjunto de datos de Netflix, el cual el mismo fue descargado de Kaggle\n\nKaggle, una subsidiaria de Google LLC, es una comunidad en l√≠nea de cient√≠ficos de datos y profesionales del aprendizaje autom√°tico. Kaggle permite a los usuarios encontrar y publicar conjuntos de datos, explorar y crear modelos en un entorno de ciencia de datos basado en la web; trabajar con otros cient√≠ficos de datos e ingenieros de aprendizaje autom√°tico y participar en concursos para resolver desaf√≠os de ciencia de datos.\nRef: wikipedia\n\nEl objetivo principal fue realizar una serie de ejercicio utilizando las librerias m√°s populares de python tales como: üêºpandas + üìä seaborn + üìä Plotly. De forma tal de poder realizar una introducci√≥n por medio de la resoluci√≥n de un analisis de un caso relacionado a contenidos publicados en Netflix.\nSi quieres conocer m√°s acerca de python, puedes leer el siguiente post.\nComunicaci√≥n\nConvi√©rtete en una data analyst de pel√≠cula\nAlguna vez te has preguntado en qu√© consiste ser data analyst? ¬øTe gustar√≠a probarlo pero no te atreves o no lo tienes claro? ¬°No te montes pel√≠culas y aprende an√°lisis de datos!\nCon este taller online de 2hs te iniciar√°s en los misterios del an√°lisis de datos y descubrir√°s que no se trata de ciencia ficci√≥n ni de misterio. Aprender√°s a extraer y visualizar datos sobre las pel√≠culas m√°s vistas de Netflix como una profesional.\n¬øTe atreves a probar?\nEl taller tendr√° lugar el jueves 26 de mayo de 2022 a las 17:30 h.\nLa duraci√≥n ser√° de aproximadamente 2 hs.\nNo necesitas ning√∫n programa espec√≠fico en tu ordenador ni configuraci√≥n previa. ¬°As√≠ de f√°cil!\nimgRecursos\nüôÄ Github Repo\n\n\n\n",
    "preview": "https://img.freepik.com/free-vector/people-watching-movie-home_23-2148568229.jpg",
    "last_modified": "2023-11-12T23:49:22+01:00",
    "input_file": {}
  },
  {
    "path": "posts/2022-07-17-agile-inception/",
    "title": "Agile inception",
    "description": "En el siguiente art√≠culo te cuento sobre un conjunto de actividades que te permiten reducir la incertidumbre y alinear a todas las personas de un equipo de producto para que puedan tener objetivos comunes.",
    "author": [
      {
        "name": "Romina Mendez",
        "url": "https://r0mymendez.github.io/romymendezblog/"
      }
    ],
    "date": "2022-07-17",
    "categories": [
      "Metodologias"
    ],
    "contents": "\n\nContents\nAgile inception\n¬øQue es agile inception?\nDin√°micas\n¬øPorque implementar agile inception?\n¬ø Cu√°les son los beneficios de Agile inception?\n1. Para que estamos aqu√≠\n2. Elevator Pitch\n3. Lista de lo que no es\n4. Product Box o Visual Box\n5. Conoce a tus vecinos\n6. Muestra la soluci√≥n\n7. ¬øQu√© te quita el sue√±o?\n8. Estimar tama√±os\n8.1. Planning poker\n9. Restricciones\n10. ¬øCu√°nto cuesta?\n\n\n\nAgile inception\n¬øQue es agile inception?\nSe denomina ‚Äúagile inception‚Äù a un conjunto de actividades que permite alinear a todas las personas de un equipo de producto para que se puedan tener objetivos comunes.\nEste concepto fue introducido por Jonathan Rasmusson en el libro ‚ÄúThe Agile Samurai‚Äù y el conjunto de din√°micas permiten reducir la incertidumbre y los riesgos que pueden existir en un proyecto.\nLas aplicaci√≥n de estas t√©cnicas permiten poner objetivos comunes, mejorar la comunicaci√≥n y eliminar miedos que pueden existir en los integrantes del equipo\nHay que tener en cuenta que no es necesario realizar todas las din√°micas, sino llevar a cabo las necesarias que permitan reducir la incertidumbre que puede existir en el proyecto.\nMuchas veces se piensa que la incertidumbre es al inicio del proyecto, pero como se puede visualizar en la siguiente imagen del libro ‚ÄúThe Agile Samurai‚Äù durante varias etapas del proyecto pueden aparecer los cambios y esto significa que se requieran din√°micas que permitan que el equipo puedan llegar a tener objetivos comunes y lograr acuerdos.\nSource image: The agile samuraiDin√°micas\nComo comentamos anteriormente ‚Äúagile inception‚Äù tiene un conjunto de 10 din√°micas que permiten disminuir la incertidumbre, mitigar riesgos y generar objetivos comunes en el equipo de desarrollo de producto.\n¬øPorque implementar agile inception?\nAl inicio de un proyecto es necesario tomar decisiones en la incertidumbre y para poder realizarlo es necesario:\n‚úèÔ∏è Definir y comunicar objetivos, visi√≥n y contexto del proyecto del equipo.\n‚úèÔ∏è Divulgar a las partes interesadas la informaci√≥n que necesitan para ayudar a tomar decisiones de c√≥mo proceder en el proyecto.\nEstas tareas son necesarias realizarlas de forma ordenada y lograr que todos los integrantes est√©n de acuerdo con el prop√≥sito del proyecto, como se va ejecutar y cuales son los resultados esperados.\n¬ø Cu√°les son los beneficios de Agile inception?\nüìå Unificar la visi√≥n y definir el alcance\nüìå Poner de acuerdo a todos los interesados (stakeholders) en la visi√≥n conjunta del proyecto\nüìå Reducir la incertidumbre\nüìå Entender cu√°les son los riesgos existen que puedan poner en peligro el proyecto.\nA continuaci√≥n se van a detallar cu√°l es el objetivo de las 10 din√°micas y como llevar a cabo las mismas.\n\n1. Para que estamos aqu√≠\nEsta actividad tiene como objetivo realizar un recordatorio r√°pido de por qu√© estamos aqu√≠, qui√©nes son nuestros clientes, y por qu√© decidimos hacer este proyecto.\nUna t√©cnica que podemos utilizar es ‚Äúel c√≠rculo dorado de Simon Sinek‚Äù que permite conocer que objetivos tiene y c√≥mo hacerlo.\n\nEstas preguntas a realizar son:\n‚úèÔ∏è ¬øPor qu√©?\nSon los motivos o el prop√≥sito por el que estamos realizando este proyecto.\n‚úèÔ∏è ¬øC√≥mo?\nEs el proceso o los procesos que son necesarios tener para poder realizar el prop√≥sito del proyecto.\n‚úèÔ∏è ¬øQu√©?\nEs el resultado que queremos generar, puede ser el producto o el servicio a desarrollar.\n2. Elevator Pitch\nEsta t√©cnica permite poder conseguir el inter√©s de un inversor para un proyecto, para lo cual es necesario poder contar sobre el objetivo del mismo en aproximadamente‚åõ 30 segundos.\nLa t√©cnica se asimila a un viaje en un ascensor que llega al √∫ltimo piso de un edificio demorando aproximadamente 30 segundos.\nEn el siguiente video realizado por eduCaixa puedes ver una representaci√≥n de que hay que tener en cuenta para realizar un elevator pitch,\n\n\nElementos:\nElementos\nPreguntas\nNecesidad\n¬øQu√© problem√°tica resuelves?\nSoluci√≥n\n¬øC√≥mo lo resuelves? Breve descripci√≥n.\nMercado\n¬øCu√°l es el mercado al que est√° destinado?\nEquipo\n¬øCual es tu equipo?\nCall to action\n¬øQue le pides al inversor?\nAlgunas caracter√≠sticas:\n‚è≥ Tiempo de 30 a 90 segundos.\nüí¨ Explicar tu proyecto en una frase\n‚ö†Ô∏è No utilizar muchos detalles\n‚ö†Ô∏è No utilizar vocabulario t√©cnico, el inversor debe entender f√°cilmente tu proyecto.\n‚ú®Debe impactar al receptor con detalles que realicen √©nfasis en el mercado o la soluci√≥n.\nüí• Lograr que el receptor del mensaje quiera conocer m√°s de la soluci√≥n.\n3. Lista de lo que no es\nEst√° centrado en definir los alcances de nuestro proyecto, la cual consiste en realizar un detalle de las limitaciones que tiene el proyecto.\nPuede ser todo lo que se desea pero por ahora es inviable debido al tiempo, costo √≥ el alcance definido.\n4. Product Box o Visual Box\nSi tu producto o servicio deber√≠a estar empaquetado podr√≠as definir qu√© im√°genes, mensajes o detalles deber√≠a tener.\nEs una tarea que debe realizarse en equipo y algunas preguntas que se deber√≠an realizar es:\nüí¨¬øC√≥mo construir un slogan para mi producto o servicio?\nüí¨ ¬øCuales son las principales razones por la que un cliente quiere comprar mi producto?\n5. Conoce a tus vecinos\nEsta din√°mica tiene como objetivo poder identificar a cu√°ntas y cu√°les son las personas necesitamos para que nuestro proyecto sea exitoso.\nEsto significa poder conocer a los actores claves que necesitamos para nuestro proyecto.\nAl conocer quienes son estos vecinos, podemos construir relaciones y generar confianza para el √©xito del proyecto.\nPara implementar este punto sugiero hacer una matriz de stakeholders que permita conocer anticipadamente quienes son los key player con los cuales necesito generar v√≠nculos para el √©xito del proyecto.\nmatizSource image:https://www.stakeholdermap.com/stakeholder-matrix.html\n\n6. Muestra la soluci√≥n\nEn esta actividad debemos realizar los diagramas de arquitectura para asegurarnos que todos estamos pensando y conceptualizando la misma soluci√≥n.\nEs ideal conocer las herramientas y la arquitectura para poder entender si los integrantes del equipo de desarrollo tienen los skills necesarios para poder desarrollar la soluci√≥n.\nPara implementar esta din√°mica es necesario saber cual es el MVP (Producto m√≠nimo viable) que se puede desarrollar para poder mostrar cual es la soluci√≥n y entender si la misma es factible y si es de inter√©s para los usuarios finales del producto.\n7. ¬øQu√© te quita el sue√±o?\nEl objetivo es identificar los riesgos y poder resolverlos.\nUn ejemplo puede ser el siguiente:\n\nProblem√°tica: Necesitamos trabajar en un proyecto que se desarrolle en GO, pero no hay desarrolladores que conozcan c√≥mo programar en este lenguaje.\nSoluci√≥n: Planificar capacitaciones para mitigar el riesgo.\n\nAlgunas problem√°ticas no podr√°n ser resueltas tan f√°cilmente ya que pueden ser restricciones regulatorias de alguna industria, por lo cual es necesario que las mismas sean informadas al equipo y ver que acciones tomar.\n8. Estimar tama√±os\nNecesitamos poder estimar a alto nivel cu√°l es la duraci√≥n del proyecto y el esfuerzo que puede tener.\nEs dif√≠cil poder estimar fechas exactas, m√°s a√∫n cuando estamos en el inicio del proyecto.\nUna de las din√°micas que se puede aplicar es realizar un planning poker\n8.1. Planning poker\n¬øQue es el planning poker?\nEl Planning Poker es una t√©cnica para la estimaci√≥n de tareas y fue utilizado por James Grenning en un equipo √°gil utilizando XP en 2002.\nCartas de planning poker\n\nEl sistema utiliza un rango de valores basado en la secuencia Fibonacci, pero tambi√©n existen las cartas 0 (tarea ya realizada), ¬Ω (tarea sencilla), ?\n(se requiere mayor informaci√≥n para poder estimar) , infinito (tarea muy grande y requiere separarse en tareas m√°s peque√±as) y un caf√© (el equipo requiere un break) como se visualizan en la imagen.\n¬øC√≥mo se realiza la estimaci√≥n?\nCada miembro del equipo de desarrollo selecciona una carta.\nUna vez que todos tengan seleccionada una carta, se ponen boca arriba todas a la vez.\nPosteriormente nos quedamos con la estimaci√≥n media m√°s elegida, o se debate hasta conseguir la unanimidad.\nEsto se repite con cada historia de usuario que haya que estimar.\nAlgunas paginas para poder realizar esta din√°mica de forma online:\nPlanning poker agile App: Esta aplicaci√≥n es open source y permite estimar las historias de usuarios.\nPlanning-poker: Es una aplicaci√≥n que permite tambi√©n hacer partidas pero en su plan free es solo para cinco usuarios.\n9. Restricciones\nLos proyectos tienen factores clave de ejecuci√≥n tales como : ‚åõtiempo, üîç alcance, üí∞costes y, por supuesto, üëècalidad.\nEs fundamental saber cu√°les de estos factores son inamovibles y en cu√°les hay flexibilidad.\nOtros factores que tambi√©n se pueden tener en cuenta son:\nüîç Facilidad de uso\nüîç Seguridad\nüîç Velocidad\nüîç Time to market, entre otras.\n10. ¬øCu√°nto cuesta?\nAqu√≠ definimos cu√°l es el entregable a realizar en el roadmap y cuales son los costos asociados.\nPara la estimaci√≥n es necesario tener en cuenta los siguientes puntos:\nEstimar el equipo de proyecto.\nTiempo de duraci√≥n\nPresupuesto.\nReferencias:\nJames Grenning (2002). Planning Poker or How to avoid analysis paralysis while release planning, Link: https://wingman-sw.com/papers/PlanningPoker-v1.1.pdf\nElleithy, S. & Sidky, A. (2014). The mindset behind estimating and planning for agile. Paper presented at PMI¬Æ Global Congress 2014 ‚Äî North America, Phoenix, AZ. Newtown Square, PA: Project Management Institute, Link: https://www.pmi.org/learning/library/mindset-estimating-planning-agile-9340\nAmit Maimon ( 2017).How Self-Managed Teams Can Resolve Conflict. Link: https://hbr.org/2017/04/how-self-managed-teams-can-resolve-conflict 4.Jonathan Rasmusson (2010). The Agile Samurai. How Agile Masters Deliver Great Software.\n\n\n\n",
    "preview": "https://img.freepik.com/free-vector/happy-united-business-team_74855-6520.jpg?",
    "last_modified": "2023-11-12T23:48:23+01:00",
    "input_file": {}
  },
  {
    "path": "posts/2021-09-22-notas-en-medios/",
    "title": "Notas en Medios",
    "description": "Este post contiene algunas de las notas que pude realizar en algunos portales de noticias en Argentina",
    "author": [
      {
        "name": "Romina Mendez",
        "url": "https://example.com/norajones"
      }
    ],
    "date": "2021-09-22",
    "categories": [
      "Data"
    ],
    "contents": "\n\nContents\nEl rol del Data Scientist\nHistorias con datos\nEl an√°lisis de datos es uno de los trabajos del futuro (y necesita m√°s mujeres)\n\nEl rol del Data Scientist\nsource('Blog de Uala - üìÖ Julio 2020')\n‚ÄúAnte el avance tecnol√≥gico que estamos viviendo, los datos son uno de los activos m√°s valiosos para cualquier organizaci√≥n.‚Äù\n\nHistorias con datos\nsource('Infografia - üìÖ Octubre 2019')\n‚ÄúAn√°lisis sobre las diferentes denuncias realizadas durante 2018 utilizando datos abiertos que aporta SUACI.‚Äù\nLink Infografia\n\nEl an√°lisis de datos es uno de los trabajos del futuro (y necesita m√°s mujeres)\nsource('Revista Parati - üìÖ Octubre 2020')\n‚ÄúEn el mundo digital el Data Science es clave, y para leer mejor todo lo que pasa en las redes, en la web y en todo el universo virtual, es necesario una mirada diversa y con m√°s presencia femenina. El an√°lisis de una especialista.‚Äù\n\n\n\n\n",
    "preview": "https://img.freepik.com/vector-gratis/concepto-landing-page-noticias_52683-20522.jpg?size=626&ext=jpg",
    "last_modified": "2021-09-23T03:36:45+02:00",
    "input_file": {}
  },
  {
    "path": "posts/2021-09-10-rabbitmq-pika/",
    "title": "RabbitMQ-Pika",
    "description": "RabbitMQ permite gestionar colas de mensajes entre emisores y destinatarios, en el siguiente post vamos a utilizar en python **Pika** para su implementaci√≥n.",
    "author": [
      {
        "name": "Romina Mendez",
        "url": "https://example.com/norajones"
      }
    ],
    "date": "2021-09-10",
    "categories": [
      "Python"
    ],
    "contents": "\n\nContents\nIntroducci√≥n: ¬øQue es RabbitMQ?\nImplementaci√≥n\nMongodb + Pika\n\n\nIntroducci√≥n: ¬øQue es RabbitMQ?\nRabbitMQ es un intermediario que envia mensajes üì© entre un productor y un consumidor por medio de la utilizaci√≥n de una cola.\nLos principales conceptos que se deben tener en cuenta son:\nProductor: Es el que env√≠a mensajes.\nCola: Es el buffer en donde se almacenan los mensajes.\nConsumidor: El que recibe los mensajes.\n\nImplementaci√≥n\nPara la implementaci√≥n en `Python üêç utilizaremos pika y vamos a desarrollar dos programas: productor y consumidor.\nPika tiene un set de objetos para la comunicaci√≥n con RabbitMQ.\nEn nuestro ejemplo vamos a imaginar que un productor es un app que tiene como objetivo tomar pedidos de delivery üõµde comida, la misma necesita enviar multiples mensajesüìù relacionados a los pedidos que realizar usuarios üì±.\nPor lo cual vamos a realizar los siguientes pasos:\nInstalar pika\n!pip install pika\nGenerar el script send.py üìÑ\nimport pika\nfrom datetime import datetime\n\nconnection = pika.BlockingConnection(\n    pika.ConnectionParameters(host='localhost'))\nchannel = connection.channel()\n\nchannel.queue_declare(queue='delivery')\n\npedidos=['üçïüçïüçï','üçîüçîüçî','üç∞üç∞üç∞','üç∫üç∫üç∫']\n\nfor i in pedidos:\n    channel.basic_publish(exchange='', routing_key='delivery', body=i)\n    print(\" [x] Se envia pedido!'\"+ i)\n\nconnection.close()\nGenerar el script receive.py üìÑ\nimport pika, sys, os\nfrom datetime import datetime\n\n\ndef main(queue='delivery'):\n    connection = pika.BlockingConnection(pika.ConnectionParameters(host='localhost'))\n    channel = connection.channel()\n    channel.queue_declare(queue=queue)\n\n    def callback(ch, method, properties, body):\n        print(\" [x] Received %r\" % body.decode())\n\n    channel.basic_consume(queue='delivery', on_message_callback=callback, auto_ack=True)\n\n    print(' [*] Waiting for messages. To exit press CTRL+C')\n    channel.start_consuming()\n\nif __name__ == '__main__':\n    try:\n        main(queue=queue)\n    except KeyboardInterrupt:\n        print('Interrupted')\n        try:\n            sys.exit(0)\n        except SystemExit:\n            os._exit(0)\nResultados:\n [x] Received 'üçïüçïüçï'\n [x] Received 'üçïüçïüçï'\n [x] Received '‚òï‚òï‚òï'\n [x] Received 'üç∞üç∞üç∞'\n [x] Received 'üç∫üç∫üç∫'\n [x] Received 'üçïüçïüçï'\n [x] Received 'üçîüçîüçî'\n [x] Received 'üç∞üç∞üç∞'\n [x] Received 'üç∫üç∫üç∫'\nMongodb + Pika\nA continuaci√≥n vamos a modificar el script para que pueda conectarse a un mongodb atlas y realice el insert de los mensajes recibidos.\nimport pymongo\nimport pika, sys, os\nfrom datetime import datetime\n\n# Crear una conexion con MongoClient\nclient = pymongo.MongoClient(\"mongodb+srv://NombreUser:PasswordUser@clusterName.moczg.mongodb.net/rabbit?retryWrites=true&w=majority\")\n\n# Database\ndb = client[\"rabbit\"]\n\n# Collection\ncollection= db[\"mensajes\"]\n\ndef main(queue='delivery'):\n    connection = pika.BlockingConnection(pika.ConnectionParameters(host='localhost'))\n    channel = connection.channel()\n    channel.queue_declare(queue=queue)\n\n    def callback(ch, method, properties, body):\n        print(\" [x] Received %r\" % body.decode())\n        body_indsert={'fecha':datetime.now(),'queue':queue,'message':body.decode()}\n        db[\"mensajes\"].insert_one(body_indsert)\n\n    channel.basic_consume(queue='hello', on_message_callback=callback, auto_ack=True)\n\n    print(' [*] Waiting for messages. To exit press CTRL+C')\n    channel.start_consuming()\n\nif __name__ == '__main__':\n    try:\n        main(queue=queue)\n    except KeyboardInterrupt:\n        print('Interrupted')\n        try:\n            sys.exit(0)\n        except SystemExit:\n            os._exit(0)\nPara conocer m√°s de Rabbitmq puedes ver los siguientes sitios:\nüìÑ Documentacion Oficial con el Tutorial\nüêç Pika\n\n\n\n",
    "preview": "https://image.freepik.com/free-vector/landing-page-send-message-illustration_126608-31.jpg",
    "last_modified": "2023-11-12T23:50:35+01:00",
    "input_file": {}
  },
  {
    "path": "posts/2021-02-21-apps-gratuitas-para-proyectos/",
    "title": "14 Apps Gratuitas para Proyectos",
    "description": "En el siguiente articulo te cuento sobre algunas aplicaciones free para utilizar en tus proyectos.",
    "author": [
      {
        "name": "Romina Mendez",
        "url": {}
      },
      {
        "name": "",
        "url": "https://example.com/norajones"
      }
    ],
    "date": "2021-02-21",
    "categories": [
      "Metodologias"
    ],
    "contents": "\n\nContents\nMetodolog√≠as\nTrello\nMiro\nQuire\nAsana\nClikup\nScrumblr\nGitmind\nHabitica\n\nDiagramas\nDraw.io\nMindmup\n\nEstimaci√≥n de tiempos\nPlanning poker\n\nDise√±o\nCanva\n\nMensajeria\nSlack\nDiscord\n\n\nLa pandemia de coronavirus impulso el home office y muchos empleados se vieron obligados a transformar su forma de trabajar. Este contexto genero un cambio en la forma en la que nos relacionamos y desempe√±amos nuestras tareas diarias.\n\nA continuaci√≥n te recopilo un listado de herramientas y recursos que puedes utilizar para poder desarrollar tu tareas y gestionar tus proyectos.\nMetodolog√≠as\nTrello\nTrello es una aplicaci√≥n basada en la metodolog√≠a Kanban y permite gestionar tu trabajo de forma colaborativa. Su version gratuita tiene tableros personales ilimitados, tarjetas ilimitadas al igual que listas y hasta 10MB por archivo adjunto. \nMiro\nMiro es una aplicaci√≥n que te permite tener pizarras, en las cuales los integrantes de los equipos puedan colaborar y modificarlas en tiempo real. Asimismo posee m√∫ltiples plantillas que pueden ser utilizadas para realizar la planificaci√≥n de un proyecto. En su version gratuita permite principalmente tener: 3 tableros editables, espectadores an√≥nimos y plantillas.\n\nQuire\nQuire es una aplicaci√≥n que implementa el tablero Kanban, en su sitio web mencionan que hasta la primera mitad del 2020 no tiene precios definidos y que puedes tener una cuenta gratuita con hasta 35 organizaciones, 80 proyectos y 30 miembros.\n source image : imagen obtenida en https://quire.io/\nAsana\nAsana es una aplicaci√≥n que permite organizar proyectos utilizando tableros Kanban en linea. En su version free permite hasta 15 miembros y vistas de calendarios, asignaci√≥n de responsables y fechas de entregas.\n imagen obtenida en https://asana.com/es\nClikup\nClikup es una aplicaci√≥n para gestionar tus proyectos, la cual permite generar documentos, notificaciones y administrar tu bandeja de entrada. Adicionalmente permite realizar dashboard para ver el avance de los proyectos. Lo m√°s importante es que su version free tiene 100MB Storage e ilimitadas tareas y usuarios.\n imagen obtenida en https://clickup.com/welcome\nScrumblr\nScrumblr es una aplicaci√≥n que permite generar un tablero de Kanban y su colaboraci√≥n en tiempo real. Lo m√°s destacable de esta aplicaci√≥n es que no necesitas generar un usuario, ya que el √∫nico dato que solicita es el nombre de tu tablero.\n\nGitmind\nGitmind es una herramienta para realizar diagramas de mapas mentales y la misma es gratuita \nimagen obtenida en gitmind\nHabitica\nHabitica es una aplicaci√≥n para gestionar proyectos de manera m√°s divertida, ya que puedes administrar tus tareas por medio de un juego de rol. Si completas todos las tareas pendientes puedes progresar en el juego, pero si fallamos nuestro personaje va retroceder en este juego.\n imagen obtenida de mi perfil de habitica\nDiagramas\nDraw.io\nDraw.io es una aplicaci√≥n gratuita que permite la creaci√≥n y edici√≥n de diagramas. La misma permite a los usuarios compartir sus diagramas y posee integraciones con Google Drive y Dropbox. Esta aplicaci√≥n tiene varios templates reutilizables tales como diagramas de Venn, wireframes, network, flowcharts, UML, entre otros.\n Imagen obtenida de mi cuenta de https://www.draw.io/\nMindmup\nMindmup es una aplicaci√≥n gratuita que permite crear mapas mentales de forma ilimitada y guardarlo en la nube.\n\nEstimaci√≥n de tiempos\nPlanning poker\nPlanning poker es una t√©cnica que permite realizar la estimaci√≥n del tiempo de una tarea en un equipo para la planificaci√≥n del sprint. Esta t√©cnica se realiza utilizando cartas numeradas con las secuencia de Fibonacci. Si quieres desarrollar esta t√©cnica en forma online, puede utilizar la aplicaci√≥n www.planningpoker.com. En su version gratuita permite hasta 5 usuarios en un juego.\n\nDise√±o\nCanva\nCanva es una aplicaci√≥n online de dise√±o gr√°fico simplificado, en el cual puedes crear una pieza de dise√±o utilizando los cientos de templates tiene disponibles. Puedes utilizar la cuenta gratuita y solo pagas para obtener algunas opciones avanzadas de dise√±o.\n\nMensajeria\nSlack\nSlack es una herramienta de mensajer√≠a en tiempo real que permite gestionar la comunicaciones con los equipos de trabajo o comunidades. Cuando utilizas un espacio en slack puedes generar canales en los cuales se pueden comunicar mensajes basados en alg√∫n t√≥pico.\n\nDiscord\nDiscord es otra plataforma para crear grupo de chats, en el cual tambi√©n puedes organizar las conversaciones en canales por temas \nimagen obtenida en https://discord.com/new\nEstas son las aplicaciones que te recomiendo utilizar para la gesti√≥n de tus tareas y proyectos. Recuerda que cualquiera de esta herramientas te puedo ayudar a realizar tus proyectos o gestion de tareas diarias de una maneras m√°s ordenadas. Si tienes alguna otra herramienta que conoces y no esta en este articulo, puedes dejar un comentario en este post.\n\n\n\n",
    "preview": "https://image.freepik.com/free-vector/tiny-people-developers-laptop-customer-requirements-software-requirement-description-user-case-agile-tool-business-analysis-concept_335657-2433.jpg",
    "last_modified": "2023-11-13T00:01:35+01:00",
    "input_file": {}
  },
  {
    "path": "posts/2021-02-21-cheatsheet-sql/",
    "title": "CheatSheet SQL",
    "description": "En el siguiente post puedes encontrar una cheetsheet de SQ, en la cual puedes encontrar un resumen y ejemplos de la sintaxis de SQL.",
    "author": [
      {
        "name": "Romina Mendez",
        "url": {}
      },
      {
        "name": "",
        "url": "https://example.com/norajones"
      }
    ],
    "date": "2021-02-21",
    "categories": [
      "Base de datos",
      "SQL"
    ],
    "contents": "\nLas cheetsheet son un conjunto de notas üóí que se utilizan como referencia r√°pida sobre alguna tematica. Tambi√©n son conocidos como los machetes en los cuales se registraban peque√±os conceptos a recordar üòé.\n\n\nEn el siguiente pdf podes encontrar la sintaxis basica para poder realizar consultas en sql\n\n\n\n\n\n",
    "preview": "https://image.freepik.com/free-vector/cloud-hosting-concept-illustration_114360-730.jpg",
    "last_modified": "2021-03-06T20:29:27+01:00",
    "input_file": {}
  },
  {
    "path": "posts/2021-02-21-introduccin-a-visualizaciones-con-python/",
    "title": "Introducci√≥n a DataViz con Python",
    "description": "Da tus primeros pasos en el desarrollo de visualizaciones con Python.",
    "author": [
      {
        "name": "Romina Mendez",
        "url": {}
      },
      {
        "name": "",
        "url": "https://example.com/norajones"
      }
    ],
    "date": "2021-02-21",
    "categories": [
      "DataViz",
      "Python",
      "Data"
    ],
    "contents": "\n\nContents\n¬øQue es Python ?\n¬øQue es Google Colab ?\nRecursos\n\n\nLa programaci√≥n es una habilidad que puede ser adquirida de manera autodidacta, pero a veces uno no sabe como empezar. Por lo cual te dejo este curso online realizado en el 2020 üìÜ en conjunto con EANT, el cual en solo 3 horas ‚è±Ô∏è podes dar tus primeros pasos en el desarrollo de visualizaci√≥nes con Pythonüêç.\n¬øQue es Python ?\nPython es un lenguaje de programaci√≥n de c√≥digo abierto, orientado a objetos, muy simple y f√°cil de entender. Tiene una sintaxis sencilla que cuenta con una vasta biblioteca de herramientas, que hacen de Python un lenguaje de programaci√≥n √∫nico. La primera publicaci√≥n de Python se produce hace ya 30 a√±os, ya que en 1989 Guido Van Rossum comenz√≥ el desarrollo de un nuevo lenguaje de programaci√≥n casi por hobby y tomando su nombre de el grupo humor√≠stico brit√°nico Monty Python.\nActualmente es uno de los lenguajes m√°s utilizados para an√°lisis de datos, pero tambi√©n es considerado un lenguaje multi-proposito debido a gran cantidad de aplicaci√≥nes que se pueden desarrollar con Python.\n\nM√°s informaci√≥n sobre Python\n¬øQue es Google Colab ?\n\nGoogle Colab es una IDE (Entorno de desarrollo integrado) para poder progrmar en Python utilizando google drive.\n Es un marco de desarrollo amigable, el cual permite:\nAutocompletado\nReconocimiento de sintaxis de programaci√≥n\nDepurador de errores\nTiene librerias preinstaladas\nSe utiliza desde drive lo cual permite versionar tu codigo y trabajar en conjunto con otros colaboradoes.\nPara conocer m√°s sobre Colab puedes copiar esta notebook: Notebook \n\nEn este workshop utilizamos üêºpandas + üìä seaborn + üìä Plotly y podras realizar visualizaciones interactivas como la siguiente‚Ä¶\n\nRecursos\n‚úèÔ∏è Presentaci√≥n\nüôÄ Github Repo\nüîó Acceso al curso Online: Workshop EANT\n\n\n\n",
    "preview": "https://image.freepik.com/vector-gratis/ilustracion-analisis-mercado-valores_23-2148588123.jpg",
    "last_modified": "2023-11-13T00:00:28+01:00",
    "input_file": {}
  },
  {
    "path": "posts/2021-02-21-introduccin-a-visualizaciones-con-r/",
    "title": "Introducci√≥n a Visualizaciones con R",
    "description": "Primeros pasos para comenzar a realizar tus primeras visualizaciones en R.",
    "author": [
      {
        "name": "Romina Mendez",
        "url": {}
      },
      {
        "name": "",
        "url": "https://example.com/norajones"
      }
    ],
    "date": "2021-02-21",
    "categories": [
      "DataViz",
      "R",
      "Data"
    ],
    "contents": "\n\nContents\n¬øQue es ?\n¬øQue es Rstudio ?\nRstudio Cloud ‚òÅÔ∏è\n\nTemario\n¬øEstas preparado para comenzar üèÉüèÉ?\nRecursos\n\n\nLa programaci√≥n es una habilidad que puede ser adquirida de manera autodidacta, pero a veces uno no sabe como empezar.\nPor lo cual te dejo este curso online realizado en el 2020 üìÜ en conjunto con EANT, el cual en solo 3 horas ‚è±Ô∏è podes dar tus primeros pasos en el desarrollo de visualizaci√≥nes con R.\n¬øQue es ?\nR es uno de los lenguajes m√°s populares que se utiliza para el procesamiento y analisis estad√≠stico de datos.\nEste lenguaje es una reimplementaci√≥n de otro lenguaje denominado S, aunque tambien tiene bases de lenguajes como C, C++ o Fortran.\nR es muy popular debido a que actualmente se lo utiliza para el desarrollo de modelos de machine learning, pero tambien con este lenguaje se puede realizar desarrollo de: sitio webs, APIs, procesamiento de datos y hasta puedes desarrollar tu CV.\nM√°s informaci√≥n sobre R\n¬øQue es Rstudio ?\n\n\n\n\n\nRstudio es una IDE (Entorno de desarrollo integrado) para poder progrmar en R, aunque actualmente soporta otros lenguajes tales como Python y Javascript.\n\nEsta IDE esta en constante evoluci√≥n y es la m√°s utilizada para desarrollar en R debido que posee una interfaz con ayuda en linea, autocompletado de codigo, la posibilidad de realizar una depuraci√≥n del codigo de manera sencilla, visualizaci√≥n de directorios, entre otras.\nA continuaci√≥n puede ver una linea de tiempo con la evoluci√≥n de esta IDE en los ultimos a√±os.[Un poco de historia sobre rstudio y su evoluci√≥n. 1\n\n\n\nRstudio Cloud ‚òÅÔ∏è\nRstudio cloud es una version basada en la nube que permite realizar el desarrollo sin necesidad de realizar ninguna instalaci√≥n utilizando solo un navegador.\nEl plan free te permite:\nGenerar hasta 15 proyectos.\nUn espacio compartido con 5 miembros y 10 proyectos como maximo.\n15 horas de proyectos por mes.\nHasta 1 GB de RAM por proyecto.\nHasta 1 CPU por proyecto\nHasta 1 hora de tiempo en ejecuci√≥n en segundo plano.\nTemario\nEn este workshop online vas a poder aprender sobre:\n‚úèÔ∏è Qu√© es Data Analytics y sus etapas de trabajo.\n‚úèÔ∏è El concepto del an√°lisis exploratorio de datos (EDA).\n‚úèÔ∏è Qu√© es R y por qu√© es una de las herramientas m√°s utilizadas en los √°mbitos de trabajo de Data Science.\n‚úèÔ∏è Utilizar la interfaz de Rstudio.\n‚úèÔ∏è Dar primeros pasos en programaci√≥n para la manipulaci√≥n y exploraci√≥n de Datos.\n‚úèÔ∏è Qu√© son y c√≥mo utilizar librer√≠as de c√≥digo para realizar operaciones de an√°lisis.\n‚úèÔ∏è C√≥mo realizar distintos an√°lisis mediante gr√°ficos y visualizaciones (dataviz).\n‚úèÔ∏è Tips, recomendaciones y recursos √∫tiles para seguir aprendiendo!\n¬øEstas preparado para comenzar üèÉüèÉ?\nA continuaci√≥n tienes todos los recursos para comenzar y hacer tus primeras visualizaci√≥n con datos üí™.\n\nRecursos\nAcceso al curso Online: Workshop EANT\nPresentaci√≥n:\n\n\nRstudio TimeLine\n\n‚Ü©Ô∏é\n",
    "preview": "https://i.ibb.co/v1FjcLs/6151069.jpg",
    "last_modified": "2023-11-12T23:59:19+01:00",
    "input_file": {}
  },
  {
    "path": "posts/2021-03-06-dataviz-datos-de-miercoles/",
    "title": "Dataviz: Datos de Miercoles",
    "description": "En este contiene las visualizaciones que realice para Datos de Miercoles.",
    "author": [
      {
        "name": "Romina Mendez",
        "url": {}
      },
      {
        "name": "",
        "url": "https://example.com/norajones"
      }
    ],
    "date": "2021-02-21",
    "categories": [
      "DataViz",
      "R",
      "Data"
    ],
    "contents": "\n\nContents\n¬øQue es datos de Miercoles?\nDATAVIZ üìä\nRankings Musicales - SPOTIFY\nCapitulos de RLadies\nPokemon\nDatos de la OMS sobre tuberculosis\nRese√±as de Vinos\nGapminder\nComercio Hispanoam√©rica-Mundo\nDatos sobre el √çndice de Libertad\nIMDB- Ranking de pel√≠culas\n30 d√≠as de gr√°ficos\n\n\n¬øQue es datos de Miercoles?\nDatos de mi√©rcoles es el primo latinoamericano de #tidytuesday, un proyecto semanal de datos organizado por la comunidad de R, que busca que sus participantes desarrollen sus habilidades procesando datos para crear gr√°ficos significativos usando ggplot2, tidyr, dplyr y otras herramientas del tidyverse. El proyecto original surgi√≥ en el marco de la comunidad de aprendizaje online R4DS y desde abril de 2019 la comunidad sudamericana de R impulsa una versi√≥n local en espa√±ol. 1\nDATAVIZ üìä\nR es uno de los lenguajes m√°s populares para el desarrollo de visualizaciones y su paquete m√°s popular en los ultimos a√±os es GGPLOT.\nPara poder aprender a desarrollar visualizaciones comence a practicar en base a los desafios que se publicaban semana a semana en Datos de Mi√©rcoles.\nSi quieres dar tus primeros pasos para el desarrollo de visualizaciones en R, te dejo este post que realice con un curso gratis de 3 horas ‚åõ.\nAlgunas de las visualizaciones que realice para esta comunidad son las siguientes üéâ.\nRankings Musicales - SPOTIFY\n\nCapitulos de RLadies\n\nPokemon\n\nDatos de la OMS sobre tuberculosis\n\nRese√±as de Vinos\nDatos sobre rese√±as de vinos publicadas en la revista WineEnthusiast üç∑üç∑üç∑\n\nLos datos de los quesos fueron tomados de los siguientes sitios:\n* üç∑ Club bonvivir\n* üç∑ Vix\n* üç∑ Vinepair\n\nGapminder\n\nComercio Hispanoam√©rica-Mundo\nAnalisis de exportaciones Argentina del a√±o 2017.\n\nDatos sobre el √çndice de Libertad\n\nIMDB- Ranking de pel√≠culas\n\n30 d√≠as de gr√°ficos\nPara esta entrega realice un gif con las cantidad de TvShow por a√±o que se encuentran en las plataformas Disney, Hulu, Prime Video y Netflix Data Source: https://www.kaggle.com/ruchi798/tv-shows-on-netflix-prime-video-hulu-and-disney\n\nGitHub Datos de miercoles\n\n‚Ü©Ô∏é\n",
    "preview": "https://i.ibb.co/TtmWkhn/3156627.jpg",
    "last_modified": "2023-11-12T23:56:55+01:00",
    "input_file": {}
  },
  {
    "path": "posts/2021-03-06-dnde-est-mi-monopatn/",
    "title": "¬øD√≥nde est√° mi monopat√≠n?üõπ",
    "description": "Recursos del evento IWD2020 (International Womens Day) de Women Techmakers, en el cual utilizamos python para encontrar monopatines en la Ciudad Autonoma de Buenos Airesüìç.",
    "author": [
      {
        "name": "Romina Mendez",
        "url": {}
      },
      {
        "name": "",
        "url": "https://example.com/norajones"
      }
    ],
    "date": "2021-02-21",
    "categories": [
      "DataViz",
      "Python",
      "Data"
    ],
    "contents": "\n\nContents\nGDG Buenos Aires: Women Techmakers Buenos Aires\nRecursos\n\n\nGDG Buenos Aires: Women Techmakers Buenos Aires\nWomen Techmakers es el programa global de Google que promueve un espacio de visibilidad, comunidad y recursos para fomentar la diversidad en tecnolog√≠a.\n\n\n\nEn el encuentro IWD2020 üë≠ (International Womens Day), realizamos un Hands-on Labs online con Kari Bartolome y Aidin Rodriguez para ense√±ar a utilizar Google Colab con Pythonüêç utilizando datos publicos, el problema resolver es: ¬øD√≥nde est√° mi monopat√≠n?\n\n\nüîé Si queres conocer m√°s sobre Google Colab y Python podes ver el siguiente post:\n‚ÄúIntroducci√≥n a visualizaciones con python‚Äù\nAPI DE TRANSPORTE\nPara realizar esta actividad es necesario contar con las credenciales de la API de transporte del Gobierno de la Ciudad de Buenos Aires, las mismas se pueden obtener las credenciales se debe ingresar a este link:\nhttps://www.buenosaires.gob.ar/form/formulario-de-registro-api-transporte\nUna vez finalizada la carga del formulario, en unos minutos va recibir un correo con sus credenciales (controle si las mismas no llegan a su correo SPAM).\nPara ver la documentaci√≥n de la API\n\nRecursos\nüì∫ Video del Workshop:\nEn este üîó link puedes encontrar el video con la resoluci√≥n del taller.\nüìù Aqui puedes encontrar las notebooks: üîólink\n\n\n\n\n",
    "preview": "https://img.freepik.com/vector-gratis/hombre-montando-patinete-electrico-otono-concepto-transporte-ecologico_254685-275.jpg?size=626&ext=jpg",
    "last_modified": "2023-11-12T23:52:53+01:00",
    "input_file": {}
  },
  {
    "path": "posts/2021-03-06-fundamentos-de-testing/",
    "title": "Fundamentos de Testing",
    "description": "El testing es uno de los procesos de la ingenier√≠a de software que permite identificar defectos en el software\nEn este post podes encontrar los fundamentos para poder realizalo de manera practica en cualquier proyecto de desarrollo.",
    "author": [
      {
        "name": "Romina Mendez",
        "url": {}
      },
      {
        "name": "",
        "url": "https://example.com/norajones"
      }
    ],
    "date": "2021-02-21",
    "categories": [
      "Python",
      "Tesing"
    ],
    "contents": "\n\nContents\nQue es Testing?\nPor qu√© el testing es importante‚Ä¶\nQue es la calidad de software?\nError -Defectos - Fallos\nPruebas\n7 principios del proceso de testing\n1Ô∏è‚É£ Las pruebas muestran la presencia de los defectos.\n2Ô∏è‚É£Ô∏è No es posible realizar pruebas exhaustiva\n3Ô∏è‚É£ Pruebas temprana\n4Ô∏è‚É£ Agrupamiento de los defectos.\n5Ô∏è‚É£ Paradoja de los pesticidas.\n6Ô∏è‚É£ Las pruebas dependen del contexto.\n7Ô∏è‚É£ La Falacia de la Ausencia de errores.\n\nTesting vs.¬†Debugging\nPruebas Funcionales\nPruebas unitarias:\nPruebas integraci√≥n:\nPruebas de sistemas:\nPruebas de aceptaci√≥n:\n\nPruebas No Funcionales\nüèÉPerformance\nüõ°Ô∏èSeguridad\nüë• Usabilidad\nüíª Compatibilidad\n\nPlan de pruebas\n¬øCuales son los beneficios de realizar un plan de pruebas?\nQue + Como + Cuales\nDatos para registrar en un plan de pruebas\nCasos de prueba\n\nRBT - Pruebas basadas en Riesgos\nTecnicas de testing\nTesting Estatico\nTesting Dinamico\nTesting Funcional\nTesting No Funcional\nTesting estructural\nBasado en la experiencia\nBasado en defectos\nPruebas de regresi√≥n\n\nTesting Automation\n¬øQu√© es Selenium?\nPasos para ejecutar Selenium en python üêç\nFormas de identificar a un elemento en el DOM\n\n\n\nQue es Testing?\nEl proceso de testing es la realizaci√≥n de pruebas tecnicas con el objetivo de poder conocer cual es la calidad de los artefactos o piezas de software.\nEstos procesos son una disciplina de la ingenieria de software y nos permiten realizar la validaci√≥n y verificaci√≥n de un software.\nLa validaci√≥n y la verificaci√≥n muchas veces se lo asocia a terminos similares, pero existen diferencias entre los mismos:\nüîçValidaci√≤n: ¬øestamos construyendo el producto correcto?\nEsta pregunta la realizamos para conocer si el producto satisface los requerimientos del usuario.\nüîçVerificaci√≥n: ¬øestamos construyendo el producto correctamente?\nEsta pregunta la realizarmos para conocer si estamos cumpliendo con los requisitos funcionales y no funcionales que se especificaron.\nEs importante destacar que a pesar de ejecutar un plan de testing no es posible demostrar que el software esta libre de defectos.\nPero realizando el mismo si podemos asegurar que se van a eliminar gran parte de ellos y mitigar los riesgos que pueden producir los mismos en producci√≥n.\nPor qu√© el testing es importante‚Ä¶\nUn software es un recurso que permite a la industias poder gestionar, controlar y automatizar sus procesos.\nLa industria 4.0 nos impulsa a cambios, en el cual las organizaciones utilizan sistemas para la produccion y la gesti√≥n de sus recursos.\nEn los ultimos a√±os los sistemas utilizados se basan en la aplicaci√≥n de tecnolog√≠as y servicios tales como: machine learning, big data, Cloud Computing y IOT.\n1\nActualmente los sistemas estan en cada una de las industrias, como se pueden ver en la siguiente imagen:\n\n\n\nActualmente la mayoria de las industrias utilizan sistemas para su producci√≥n, debido a esto la calidad del software en la automatizaci√≥n industrial es un factor clave y el mismo debe ser abordado para evitar tener da√±os o perdidas economicas para las empresas.\nQue es la calidad de software?\nSeg√∫n la definici√≥n que se encuentra en el Glosario est√°ndar de terminolog√≠a de ingenier√≠a de software de IEEE:\n‚ÄúLa calidad del softare es el grado en que un sistema, componente o proceso cumple con los requisitos especificados.‚Äù\nError -Defectos - Fallos\nMuchas veces cuando hablamos de calidad de software y testing lo relacionamos con terminos tales como error, defectos y fallos.\nAunque dichos terminos nos parecen similares es necesario conocer que cada uno de ellos tiene un significado diferente.\nPor lo cual podriamos definirlo como:\nUn Error de un desarrollador üë§, causa un Defecto en el software üíª, lo cual provoca un Fallo en el momento en el que la prueba se ejecutaüîÄ.\n\n\n\nPruebas\nOtro termino que tenemos que definir son las pruebas, y este termino lo podemos definir de la siguiente manera:\nLas pruebas de software son una estrategia de gesti√≥n del riesgo, en las mismas se eval√∫an si se cumplieron los requisitos.\nLas pruebas tambien las podemos definir como un el proceso por el cual se verifica si un componente de software con el fin de detectar la diferencia entre las condiciones existentes y las requeridas.\n7 principios del proceso de testing\nInternational Software Testing Qualifications Board (ISTQB) es el comit√© Internacional de Certificaciones de Pruebas de Software.\nEste comite desarrollo los 7 principios b√°sicos de la ingenier√≠a de software, los cuales son:\nüîçLas pruebas muestran la presencia de los defectos.\n‚ùåÔ∏èNo es posible realizar pruebas exhaustiva.\nüìÖPruebas tempranas.\nüéõÔ∏èAgrupamiento de los defectos.\nüêõParadoja de los pesticidas.\nüè†Las pruebas dependen del contexto.\n‚ùåÔ∏èLa Falacia de la Ausencia de errores.\n1Ô∏è‚É£ Las pruebas muestran la presencia de los defectos.\nLa unica manera de poder demostrar que NO hay defectos en un software es realizando testing.\nMuchas veces durante el testing descubrimos defectos que nunca pensamos que podrian existir o ya estaban supuestamente resueltos.\n2Ô∏è‚É£Ô∏è No es posible realizar pruebas exhaustiva\nEs imposible realizar todas las combinaci√≥nes posibles para hacer pruebas, debido a esto es importante asumir un nivel de riesgo para poder priorizar las pruebas.\nEste punto es importante evaluarlo cuando se realizar la estrategia del plan de pruebas.\n3Ô∏è‚É£ Pruebas temprana\nEs importante poder detectar las incidencias en las fases m√°s tempranas de desarrollo.\n‚ÄúUn defecto es m√°s costoso de arreglar, cuanto m√°s tarde es hallado.‚Äù\n\n\nImage: Best Strategies for Managing Bugs and Feature Requests 2\n\n4Ô∏è‚É£ Agrupamiento de los defectos.\nEste principio significa que muchas veces los defectos pueden concentrarse en un determinado modulo del producto.\nEsto nos permite concentrar las pruebas en estos modulos que son claves para el release, por lo cual es importante conocer cual son estos modulos en el momento que se dise√±a el plan de pruebas.\n5Ô∏è‚É£ Paradoja de los pesticidas.\nSi siempre realizamos los mismos test no vamos a encontrar nuevos defectos, por este motivo es importante realizar una actualizaci√≥n de las pruebas a efectuar.\nEste principio refiere a la importancia de mantener actualizado el plan de pruebas ya que el software siempre esta en constante evoluci√≥n.\n\n\nImage: QA Automation and the Pesticide Paradox\n\n6Ô∏è‚É£ Las pruebas dependen del contexto.\nSi bien pueden haber software similares, la estrategia de testing se debe adaptar al contexto en el cual ese software se va utilizar.\n7Ô∏è‚É£ La Falacia de la Ausencia de errores.\nSi un conjunto de pruebas tiene ausencia de error no significa que el software no los tenga, sino lo que significa es que esas pruebas en un determinado contexto no los detectaron.\nTesting vs.¬†Debugging\n\n\n\nPruebas Funcionales\nLas pruebas funcionales tienen como objetivo comprobar que los sistemas desarrollados funcionen en base a las especificaciones funcionales y requisitos definidos.\nA continuaci√≥n se detallan diferentes tipos de pruebas que se pueden realizar.\nPruebas unitarias:\nLa primeras pruebas realizadas son denominadas ‚Äúpruebas unitarias‚Äù en las cuales se realiza la verificaci√≥n de la funcionalidad de los componentes de software de manera aislada.\nPruebas integraci√≥n:\nSon las pruebas que deben hacer por medio del testeo de todos los componentes en conjunto, por lo cual a partir de las mimas se pueden conocer c√≥mo se integran los componentes en un sistema.\nExisten diferentes enfoques para las pruebas de integraci√≥n, tales como:\nTop - Down: Las pruebas se realiza partiendo del componente principal en jerarquia, y posteriormente se van incorporando hacia abajo por la jerarqu√≠a de control.\nBottom down: Las pruebas se realiza partiendo primero de los componentes de maÃÅs bajo nive ly se crean componentes para simular a los componentes que los invocan.\nIntegraci√≥n Funcional: Las pruebas parten de los componentes necesarios para poder ver el funcionamiento de una funci√≥n elegida del sistema.\nBig bang: Todos los componentes o sistemas est√°n integrados simult√°neamente, teniendo como la principal desventaja: es dif√≠cil rastrear la causa de las fallas.\nIncremental: Las pruebas incrementales se realizan teniendo en cuenta que los componentes se prueban uno o algunos a la vez, y se van agregando el restante de los componentes hasta que esten todos integrados y probados.\nPruebas de sistemas:\nEstas pruebas se realiza en funci√≥n de los riesgos y especificaciones de los requisitos, procesos de negocio, casos de uso, historias de usuarios u otras descripciones realizadas.\nLas mismas tienen como objetivo probar el sistema en su conjunto y verificar si se cumplen todas las especificaciones funcionales y tecnicos.\nPruebas de aceptaci√≥n:\nEste es el √∫ltimo nivel, en el cual el cliente valida si el desarrollo realizado cumple con lo solicitado y satisface las necesidades documentadas.\nPero existen algunas variantes sobre este tipo de pruebas, tales como:\n‚úÖAceptaci√≥n de usuarios: Las realizan los usuarios y gestores del aplicativo.\nSu objetivo es probar su funcionalidad.\n‚úÖAceptaci√≥n operacional: En estas pruebas se comprueba por ejemplo: la facilidad de instalaci√≥n, la seguridad, la recuperaci√≥n de fallos, las tareas de mantenimiento y se realiza una comprobaci√≥n de las vulnerabilidades de seguridad.\n‚úÖAceptaci√≥n contractual: Se controla los criterios que se definieron en el contrato, el cumplimiento con est√°ndares legales y de seguridad.\n‚úÖAlpha & beta: Muchas veces las pruebas de aceptaci√≥n del usuario no son posible ya que un software puede ser desarrollado para su posterior venta.\nEn este caso existen dos tipos de pruebas:\n‚úîÔ∏èAlpha: En este tipo de pruebas se realiza con usuarios potenciales y desarrolladores para que prueben el software.\n‚úîÔ∏èBeta: El software una vez construido se envia a un conjunto de usuarios a fin de que lo prueben bajo condiciones reales, y en el caso detectar incidencias puedan enviarlas para poder ser corregidas. .Estos usuarios no tienen ning√∫n contacto con los desarrolladores, a diferencia de las ‚Äúalpha‚Äù que son desarrollados con el equipo de desarrollo.\n\nPruebas No Funcionales\nüèÉPerformance\nSon las pruebas que permiten ver el rendimiento, carga y estr√©s.\nAqu√≠ se eval√∫a como se comporta un sistema bajo una carga creciente y se documenta los tiempo de respuestas.\nEsta prueba intenta encontrar la falla ante una carga que excede lo permitido por el sistema procesar.\nüõ°Ô∏èSeguridad\nLas pruebas de seguridad eval√∫an la CIA TRIAD (confidencialidad, integridad y disponibilidad) del software.\nSe realizan diferentes pruebas para evitar cualquier acceso no autorizado al c√≥digo del software.\n\n\n\nüë• Usabilidad\nLa parte de prueba de usabilidad de una metodolog√≠a de prueba analiza el aspecto de usabilidad del software para el usuario final .\nLa facilidad con la que un usuario puede acceder al producto constituye el principal punto de prueba.\nLa usabilidad de se define como la facilidad de las personas a interactuar con un software con el fin de alcanzar un objetivo con el m√≠nimo esfuerzo requerido.\nüíª Compatibilidad\nLa prueba de compatibilidad es una metodolog√≠a que permite la prueba del software en diferentes sistemas operativos, plataformas de hardware, navegadores web, dispositivos m√≥viles y otros software.\nLas pruebas deben validar el correcto funcionamiento como se espera en todas las diferentes combinaciones de hardware y software especificadas.\nPlan de pruebas\nUn plan de prueba es un documento detallado que describe la estrategia de prueba, los objetivos, los recursos necesarios, el cronograma y los criterios de √©xito una pieza de software espec√≠fica.\nEl objetivo principal, por supuesto, es descubrir defectos que pueda hacer que el software no act√∫e como se esperaba o que brinde una mala experiencia a sus usuarios.\n\n\n\n¬øCuales son los beneficios de realizar un plan de pruebas?\nüìç Entender c√≥mo se realizar√° el proceso de pruebas y c√≥mo se controlan o mitigan los riesgos.\n‚åõPermite que el resto del equipo del proyecto pueda conocer cu√°les son el alcance de las pruebas y el tiempo que se desarrollaran las mismas.\nüë• Definir cuales son las funciones y responsabilidades de cada miembro del equipo, tambi√©n proporciona cuales son los requisitos que son esenciales para llevar a cabo el proceso de prueba.\nüìÜ El plan de prueba permite proporcionar un cronograma para las actividades de prueba, definiendo una estimaci√≥n aproximada del tiempo.\nüì£La planificaci√≥n permite una mejor comunicaci√≥n con otros miembros del equipo del proyecto y otras partes interesadas\n‚úîÔ∏èAsegurar la calidad del entregable a realizar al cliente.\nQue + Como + Cuales\nEl plan de pruebas debe poder respondernos tres preguntas:\n‚öíÔ∏è¬øQue vamos a testear?\nEsta pregunta refiere a definir cual es el objetivo, alcance y el cronograma de las pruebas a realizar.\nüîç¬øComo vamos a realizarlo?\nEsta pregunta refiere a explicar cual es la estrategia del plan de pruebas.\nAlgunas preguntas que nos pueden ayudar de guia pueden ser las siguientes:\n¬ø Como es el proceso que se va realizar para hacer pruebas ?\n¬ø Cuales son las metricas que se van a recopilar y analizar ?\n¬ø Cuales son las configuraciones a realizar ?\n¬ø Hay requisitos especiales o procedimientos a tener en cuenta ?\n¬ø Cuales son los criterios de salida, suspension y reanudaci√≥n?\n\nüí°¬øCuales son los resultados deseados?\nEsta pregunta refiere a conocer cual o cuales son los entregables que se deben generar.\nDatos para registrar en un plan de pruebas\nA continuaci√≥n se detalla cuales son los conceptos basicos que deberiamos tener para realizar un plan de pruebas y un template que puede ser utilizado para desarrollar un plan de prueba.\nConcepto\nDescripci√≥n\n1.\niD Plan de prueba: Identifica de forma √∫nica el plan de prueba y puede incluir el n√∫mero de versi√≥n.\n2.\nIntroducci√≥n: Establece objetivos, alcance, metas, recursos y restricciones presupuestarias.\n3.\nElementos de prueba: Enumera los sistemas y subsistemas que se van a probar.\n4.\nAlcance: Todas las caracter√≠sticas y funcionalidades que se probar√°n se enumeran aqu√≠.\n5.\nFuera del alcance: Enumera cuales son las caracter√≠sticas que no deben testear.\n6.\nCriterio de aceptaci√≥n: Ver cual es el criterio de √©xito.\n7.\nCalendario: Se enumeran los detalles sobre cu√°ndo se realizar√°n las actividades de pruebas.\n8.\nCriterio de suspensi√≥n: Cuales son los criterios por los que se puede suspender las pruebas.\n9.\nEntregables: Incluye casos de prueba, datos de muestra, informe de prueba, registro de problemas.\n10.\nTarea de pruebas: Describe las dependencias entre las tareas y los recursos necesario.\n11.\nAmbientes: Enumera los requisitos de prueba de software, hardware u otros.\n12.\nResponsabilidades: Enumera las funciones y responsabilidades asignadas al equipo de pruebas.\n13.\nRecursos: Describe las necesidades, dedicaci√≥n en tiempo y conocimientos necesarios del grupo de testing\n14.\nRiesgos: Se enumeran los riesgos generales del proyecto en lo que respecta a las pruebas.\nCasos de prueba\nLos casos de pruebas o test case es un conjunto de condiciones previas (requisitos previos), procedimientos (entradas/acciones) y condiciones posteriores (resultados esperados) que un evaluador utiliza para determinar si un sistema bajo prueba satisface los requisitos o funciona correctamente.3\nEstos casos deben estar documentados y algunos conceptos que se deberian dejar documentado son los siguientes:\nConcepto\nDescripci√≥n\n1.\niD Caso de prueba: N√∫mero de identificaci√≥n de caso de prueba √∫nico.\n2.\nRequisito Previo: Condiciones que deben cumplirse antes que pueda ejecutarse el caso de prueba.\n3.\nPasos de prueba: Pasos detallados para la ejecuci√≥n del caso de prueba, la misma debe contener: acci√≥n, resultado esperado y datos de entrada.\n4.\nResultados esperados: Cual es el ouput que deber√≠a generarse cuando se ejecuta los pasos de pruebas anteriores.\n5.\nResultados reales: Cual es el output que finalmente se gener√≥ despu√©s de ejecutar los pasos de pruebas anteriores.\n6.\nResultados Final: Definir si pasa o no pasa.\n7.\nComentarios: Agregar informaci√≥n √∫til tal como capturas de pantallas y descripciones.\n8.\nPrioridad: Definir una escala de la prioridad que se le asigna a esta prueba (alto, media, baja o no establecida.\n9.\nVencimiento: Fecha l√≠mite en la que debe realizarse esta prueba.\n10.\nModulo: Cual es el modulo o componente sobre el que se va realizar la prueba.\n11.\nTipo: Tipo de prueba que se va realizar la misma puede ser por ejemplo: usabilidad, seguridad, funcionalidad, integraci√≥n, aceptaci√≥n, performance, exploratorio, etc.\n12.\nResponsable: Persona que realiza la prueba.\nRBT - Pruebas basadas en Riesgos\nRBT o Pruebas basadas en riesgos (Risk-based testing) son evaluaciones que se realizan para planificar todas las pruebas y tienen las siguientes caracteristcas:\nIdentificar los riesgos.\nDeterminar cu√°l es la probabilidad.\nPriorizar los m√≥dulos de software.\nPlanificar, dise√±ar y ejecutar actividades de prueba de acuerdo con la priorizaci√≥n de los m√≥dulos.\nSupervisar y revisar los riesgos\nEste tipo de enfoque establece que el esfuerzo y la priorizacion de las pruebas se va a basar proporcionalmente al nivel de riesgo.\nLos riesgos m√°s importantes se prueban lo m√°s pronto posible teniendo en cuenta de que se pueda realizar y tener todos los componentes entregados para sus pruebas.\nUna de las maneras de poder clasificar los riesgos es utilizando la siguiente matriz.\n\n\n\nTecnicas de testing\n\nEl siguiente grafico define la clasificaci√≥n de las pruebas de testing y realiza una clasificaci√≥n en dos grupos denominado estatico y dinamico.\n\n\nTesting Estatico\nEl testing estatico son aquellas t√©cnicas que se utilizan para detectar defectos sin ejecutar c√≥digo.\nDentro de esta t√©cnica tenemos el examen de artefactos de software para buscar errores tales como caracter√≠sticas faltantes, requisitos ambiguos o fallas de dise√±o.\nRealizar estas tecnicas trae como beneficio el ahorro de tiempo en fases posteriores del desarrollo, debido a que permite esto permite disminuir los costos .\nTesting Dinamico\nEl an√°lisis din√°mico requiere la ejecuci√≥n del c√≥digo y permite observar el funcionamiento del software y comparar los resultados.\nTesting Funcional\nEl testing funcional tambien denominado \"caja negra\" esta dentro del analisis dinamico, y como anteriormente las definicmos son las pruebas que permiten comprobar si los componentes desarrollados cumplen con las funcionalidades documentadas en requisito funcionales.\n\n\n\nTesting No Funcional\nSon las pruebas no funcionales que permiten medir las caracter√≠sticas de los sistemas, tales como tiempos de respuesta para las pruebas de rendimiento.\nEstas pruebas nos permiten conocer si existe alg√∫n riesgo o acci√≥n no esperada en un entorno productivo.\nTesting estructural\nEl testing estructural tambien denominado \"caja blanca\" es la prueba que valida el funcionamiento interno y la estructura de una pieza de software.\nEste tipo de testing se basa en el dise√±o interno y la implementaci√≥n del software.\n\n\n\nBasado en la experiencia\nEl testing basado en la experiencia son pruebas que derivan de las habilidades y conocimiento que posee el tester, este tipo de pruebas permite que bajo la experiencia de la persona se pueda predecir cuales son los errores que pueden encontrarse.\nEl proceso para realizar este tipo de pruebas es poder realizar una lista con los posibles defectos y a partir de los esta lista poder dise√±ar las pruebas.\nEstas pruebas pueden ser:\n* Pruebas intuitivas: est√°n pruebas estan basadas en solo en la experiencia previa.\n* Pruebas exploratorias: estas pruebas permiten explorar posibles errores basado en el conocimiento previo que tienen con sistemas o funcionalidades similares.\nBasado en defectos\nEsta t√©cnica de prueba es basada en defectos, y los casos de prueba se dise√±an a partir de una categor√≠a de defecto espec√≠fica conocida como taxonom√≠a de defectos.\nLas taxonom√≠as de defectos son listas categorizadas de defectos, las mismas contienen datos sobre tipos de defectos, causas ra√≠z y otros datos relacionados con defectos.\nAlgunos ejemplos pueden ser:\n* üîçLargo de los input no esta validado\n* üîçCaracteres especiales no fueron validados\n* üîçFechas inv√°lidas no fueron alertadas\n* üîçURLs invalidas.\nPruebas de regresi√≥n\nLas pruebas de regresi√≥n o regression testing se utilizan para validar si la aplicaci√≥n existente todav√≠a funciona como se esperaba despu√©s de haber sido actualizada o modificada.\nEstas pruebas son fundamentales cuando se realiza una implementaci√≥n de nuevas piezas de software y debido a esto es necesario conocer si algo que anteriormente funcionaba, continua funcionando si fallas despues de haber implmentado un nuevo release de la aplicaci√≥n.\nEste tipo de pruebas se pueden realizar de forma manual siguiendo el caso de prueba, aunque debido a que estas pruebas suelen ser repetitivas puede realizarse la atuomatizacion de las mismas .\nTesting Automation\n\nLa automatizaci√≥n de pruebas consiste en el uso de software para ejecutar pruebas.\nPor lo cual La automatizaci√≥n de pruebas permite incluir pruebas repetitivas.\n\nLos beneficios de automatizar pruebas son:\n‚¨áÔ∏è Se reduce el trabajo repetitivo\n‚ÜòÔ∏èAhorro de costos.\nüîÑCada caso de prueba se puede automatizar y posteriormente reutilizar.\n‚¨ÜÔ∏èCon L¬°la automatizaci√≥n de pruebas se pueden ejecutar m√°s casos de prueba.\n‚è≠Ô∏èRespuesta r√°pida a los desarrolladores sobre defectos.\nüîÄAutomatizar un formato de Informe de defectos.\n‚§¥Ô∏èEncontrar defectos omitidos por pruebas manuales.\nEstas pruebas se suelen desarrollar en distintos lenguajes de programaci√≥n como java, c# , PHP o python y se utiliza un framework denominado Selenium.\n¬øQu√© es Selenium?\nSelenium es un framework de automatizaci√≥n web de codigo abierto que te permite ejecutar test en navegadores web.\nA continuaci√≥n se va a desarrollar un ejemplo con Python.\nAlgunas ventajas que tenemos al utilzar Selenium:\nLos script se pueden generar en varios lenguajes de programaci√≥n como Java, C#, PHP y Python\nEstas pruebas se pueden ejecutar en diferentes navegadores como firefox, chorme, safari y opera.\nPermite ejecutar una prueba en diferentes sistemas operativos como: Windows, Mac o Linux.\nSelenium se puede utilizar para:\nAceptaci√≥n / pruebas funcionales\nReproducir errores\nPruebas de regresi√≥n\n\n\n\n\nPasos para ejecutar Selenium en python üêç\nVamos a instalar el paquete de Selenium\n!pip install selenium\nPara ejecutar Selenium necesitamos instalar el ejecutable denominado chromedriver, este ejecutable va a variar en base al sistema operativo y la version de chrome que tengamos instalado, en el siguiente link podra encontrar cual es la version para el sistema operativo en el cual va desarrollar el script de python.\nLink: https://chromedriver.chromium.org/downloads\n\nPara ejecutar la prueba es necesario correr el siguiente codigo que va abrir chome y va a navegar a la pagina google, posteriormente es necesario poder identificar los elementos de la pagina que se quieren analizar.\nfrom selenium import webdriver\n\n# Ubicaci√≥n del ejecutable\ndriver = webdriver.Chrome(\"/chromedriver\")\n\n# Ejecutamos una pagina de inicio\ndriver.get(\"https://google.com\")\nFormas de identificar a un elemento en el DOM\nSelenium Webdriver API admite m√∫ltiples formas de identificar elemento\nIdentificaci√≥n\nSintaxis\nID\ndriver.find_element_by_id()\nnombre\ndriver.find_element_by_name()\nClassName\ndriver.find_element_by_class_name()\nTagName\ndriver.find_element_by_tag_name()\nXPath\ndriver.find_element_by_xpath()\nCSS Selector\ndriver.find_element_by_class_name()\nQu√© es XPath?\nXPath se define como XML path (Ruta XML).\nEsta estcutructar permite encontrar un elemento de la pagina web.\nLa sintaxis est√°ndar para crear XPath es:\nXpath=//nombreEtiqueta[@atributo='valor']\n//: Selecciona el nodo actual\nNombre Etiqueta: Nombre de la etiqueta del nodo en particular\n@: Seleccionar atributo.\natributo: nombre de atributo del nodo.\nvalor: valor del atributo.\n\nTipos de path\nXPath absoluto: Ejemplo de xpath absoluto /html/body/div[4]/div/div[3]/article[1]/div[2]/a\nXPath relativo: Ejemplo de xpath absoluto //*[@id=\"1442737\"]/div[2]/a\n\nRealicemos un ejemplo simulando una prueba de sobre un sitio web, para poder simularlo vamos vamos a ingresar al sitio `https://tuquejasuma.com/ que es un sitio popular de reclamos en Argentina.\nEn este sitio vamos a ingresar en el buscador el termino \"banco nacion\" y hagamos click en el boton buscar para retorna todos los reclamos asociados a esta entidad bancaria.\ndriver.get(\"https://tuquejasuma.com/\")\nelement = driver.find_element_by_id(\"searcher\")\nelement.send_keys(\"Banco Nacion\")\ndriver.find_element_by_xpath('//*[@id=\"breadcrum-search\"]/form/button').click()\nEl script completo es el siguiente:\nfrom selenium import webdriver\n\n# Ubicaci√≥n del ejecutable\ndriver = webdriver.Chrome(\"/chromedriver\")\n\n# Ejecutamos una pagina de inicio\ndriver.get(\"https://google.com\")\n\n# Ingresamos a la pagina tu queja suma\ndriver.get(\"https://tuquejasuma.com/\")\nelement = driver.find_element_by_id(\"searcher\")\nelement.send_keys(\"Banco Nacion\")\ndriver.find_element_by_xpath('//*[@id=\"breadcrum-search\"]/form/button').click()\n\nGitHub Datos de miercoles‚Ü©Ô∏é\nBest Strategies for Managing Bugs and Feature Requests: https://brainhub.eu/blog/strategies-for-managing-bugs/‚Ü©Ô∏é\nSoftware testing fundamentals: https://softwaretestingfundamentals.com/test-case/‚Ü©Ô∏é\n",
    "preview": "https://image.freepik.com/free-vector/tiny-people-testing-quality-assurance-software-isolated-flat-vector-illustration-cartoon-character-fixing-bugs-hardware-device-application-test-it-service-concept_74855-10172.jpg",
    "last_modified": "2023-11-12T23:51:34+01:00",
    "input_file": {}
  }
]
