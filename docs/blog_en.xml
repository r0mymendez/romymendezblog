<?xml version="1.0" encoding="UTF-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:media="http://search.yahoo.com/mrss/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:distill="https://distill.pub/journal/" version="2.0">
  <channel>
    <title>Romina Mendez</title>
    <link>https://r0mymendez.github.io/</link>
    <atom:link href="https://r0mymendez.github.io/blog_en.xml" rel="self" type="application/rss+xml"/>
    <description>Romina Mendez's personal blog/ site. Some  posts
on software, agile methodologies , data science and the professor life.
</description>
    <image>
      <title>Romina Mendez</title>
      <url>https://r0mymendez.github.io/image/favicon.ico</url>
      <link>https://r0mymendez.github.io/</link>
    </image>
    <generator>Distill</generator>
    <lastBuildDate>Sat, 11 Jan 2025 00:00:00 +0000</lastBuildDate>
    <item>
      <title>22 Resources for Developers: Boost Your Productivity, Creativity, and Code</title>
      <dc:creator>Romina Mendez</dc:creator>
      <link>https://r0mymendez.github.io/posts_en/2025-01-11-22-resources-for-developers-boost-your-productivity-creativity-and-code</link>
      <description>


&lt;p&gt;In this article, I‚Äôm sharing 22 essential tools that I‚Äôve incorporated into my daily routine as a developer. These tools cover everything from organization üìÖ and documentation üìÑ to design üñåÔ∏è, productivity üöÄ, and programming üíª. I‚Äôve organized them into 8 categories so you can easily find the ones that best suit your needs.&lt;/p&gt;
&lt;p&gt;&lt;img src="https://r0mymendez.github.io//posts_en/2025-01-11-22-resources-for-developers-boost-your-productivity-creativity-and-code/preview.png" /&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;h1 id="documentation-and-organization"&gt;üìÑ Documentation and Organization&lt;/h1&gt;
&lt;h3 id="notion"&gt;&lt;a href="https://www.notion.so/"&gt;Notion&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Notion is a widely known tool, yet surprisingly, there are still people who haven‚Äôt tried it. It‚Äôs excellent for creating technical documentation üìÑ, managing publishing calendars, and organizing tasks. Additionally, it has an active community that shares reusable templates like Kanban boards and üìÜ calendars, making it even more user-friendly.&lt;br /&gt;
- &lt;strong&gt;Why use it&lt;/strong&gt;: It centralizes all your information in one place and offers the flexibility to customize it according to your specific needs.&lt;/p&gt;
&lt;p&gt;&lt;img src="https://r0mymendez.github.io//posts_en/2025-01-11-22-resources-for-developers-boost-your-productivity-creativity-and-code/img/img-1.png" alt="Image description" /&gt; üñºÔ∏è Image source: &lt;a href="https://www.notion.com/es-es/help/notion-for-desktop" class="uri"&gt;https://www.notion.com/es-es/help/notion-for-desktop&lt;/a&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;h3 id="miro"&gt;&lt;a href="https://miro.com/es/"&gt;Miro&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Miro is a virtual whiteboard designed for creating mind maps, diagrams, and workflows collaboratively.&lt;br /&gt;
- &lt;strong&gt;Why use it&lt;/strong&gt;: It‚Äôs an ideal tool for team sessions such as brainstorming, design thinking, or agile planning. Its real-time collaboration feature makes it perfect for dynamic projects involving multiple team members.&lt;/p&gt;
&lt;p&gt;&lt;img src="https://r0mymendez.github.io//posts_en/2025-01-11-22-resources-for-developers-boost-your-productivity-creativity-and-code/img/img-2.png" alt="Image description" /&gt; üñºÔ∏è Image source: &lt;a href="https://miro.com/es/lluvia-de-ideas/" class="uri"&gt;https://miro.com/es/lluvia-de-ideas/&lt;/a&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;h1 id="drawings-diagrams"&gt;‚úèÔ∏è Drawings &amp;amp; Diagrams&lt;/h1&gt;
&lt;h3 id="excalidraw"&gt;&lt;a href="https://excalidraw.com/"&gt;Excalidraw&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Excalidraw is an excellent alternative to tools like draw.io, offering attractive graphics with a minimalist design. It provides a user-friendly interface and libraries with icons for ‚òÅÔ∏ècloud services, programming languages, and more, allowing you to create blueprints effortlessly.&lt;br /&gt;
- &lt;strong&gt;Why use it&lt;/strong&gt;: Easy to use with a visually appealing style, Excalidraw adds a personal touch to your diagrams, and its libraries make creating detailed blueprints faster and simpler.&lt;/p&gt;
&lt;p&gt;&lt;img src="https://r0mymendez.github.io//posts_en/2025-01-11-22-resources-for-developers-boost-your-productivity-creativity-and-code/img/img-3.png" alt="Image description" /&gt; üñºÔ∏è Image source: &lt;a href="https://github.com/excalidraw/excalidraw" class="uri"&gt;https://github.com/excalidraw/excalidraw&lt;/a&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;h3 id="draw.io"&gt;&lt;a href="https://app.diagrams.net/"&gt;Draw.io&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Draw.io is a popular tool for creating UML diagrams, process flows, and more. It integrates seamlessly with Google Drive, allowing you to work directly within your account or offline.&lt;br /&gt;
- &lt;strong&gt;Why use it&lt;/strong&gt;: It offers advanced options for creating detailed diagrams and is easily accessible through Google Drive or as a desktop version.&lt;/p&gt;
&lt;hr /&gt;
&lt;h3 id="wireflow"&gt;&lt;a href="https://app.wireflow.co/"&gt;Wireflow&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Wireflow lets you create flowcharts with illustrative icons, offering modern and easy-to-use graphics that make designing detailed flow diagrams a breeze.&lt;br /&gt;
&amp;gt; The Wireflow concept is a popular UX and UI design method that combines the best aspects of wireframes and user flows to document user interactions in apps or websites.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Why use it&lt;/strong&gt;: Its intuitive and visually appealing design is perfect for presenting workflows to clients or teams, providing a user-friendly interface and stunning visuals.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="figure"&gt;
&lt;img src="https://r0mymendez.github.io//posts_en/2025-01-11-22-resources-for-developers-boost-your-productivity-creativity-and-code/img/img-4.png" alt="" /&gt;
&lt;p class="caption"&gt;Image description&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;üñºÔ∏è Image source: &lt;a href="https://wireflow.co/" class="uri"&gt;https://wireflow.co/&lt;/a&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;h3 id="lorem-ipsum-generator"&gt;&lt;a href="https://loremipsum.io/es"&gt;Lorem Ipsum Generator&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Lorem Ipsum Generator creates placeholder text used in graphic design, typography demos, and design drafts. It allows you to visualize the layout before inserting final content.&lt;br /&gt;
- &lt;strong&gt;Why use it&lt;/strong&gt;: It saves time by generating temporary content, a must-have when designing in tools like Figma, and is helpful for quickly filling in text blocks during mockups.&lt;/p&gt;
&lt;p&gt;&lt;img src="https://r0mymendez.github.io//posts_en/2025-01-11-22-resources-for-developers-boost-your-productivity-creativity-and-code/img/img-5.png" alt="Image description" /&gt; üñºÔ∏è Image source: &lt;a href="https://loremipsum.io/es" class="uri"&gt;https://loremipsum.io/es&lt;/a&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;h1 id="api-queries"&gt;üõ† API Queries&lt;/h1&gt;
&lt;h3 id="postman"&gt;&lt;a href="https://web.postman.co/"&gt;Postman&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Postman is one of the most complete and advanced tools for testing and developing APIs. It offers features such as automated testing, response simulation, and the ability to share test collections among teams, making it ideal for collaborative and complex projects.&lt;br /&gt;
- &lt;strong&gt;Why use it&lt;/strong&gt;: Perfect for complex scenarios and team collaboration, Postman allows you to design, test, and monitor APIs efficiently, with powerful features for automation, monitoring, and documentation.&lt;/p&gt;
&lt;hr /&gt;
&lt;h3 id="hoppscotch"&gt;&lt;a href="https://hoppscotch.io/"&gt;Hoppscotch&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Hoppscotch is a lightweight, online alternative to Postman for quickly testing and querying APIs. While it doesn‚Äôt offer all the advanced features of Postman, it excels in simplicity and ease of use, particularly for quick API testing on the go.&lt;br /&gt;
- &lt;strong&gt;Why use it&lt;/strong&gt;: Hoppscotch provides a clean and intuitive interface directly in your browser, making it an excellent choice for developers who need a fast, no-frills tool for testing APIs without the need for installation or complex setup.&lt;/p&gt;
&lt;hr /&gt;
&lt;h1 id="regular-expressions"&gt;üîç Regular Expressions&lt;/h1&gt;
&lt;h3 id="regex101"&gt;&lt;a href="https://regex101.com/"&gt;Regex101&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Regex101 simplifies the creation and &lt;strong&gt;testing of regular expressions&lt;/strong&gt; across multiple programming languages. It offers a detailed explanation of each regex component, making it easier to understand how your expressions work.&lt;br /&gt;
- &lt;strong&gt;Why use it&lt;/strong&gt;: Save time by validating and tweaking your regular expressions without the need to run them in a development environment. You can also share your regex tests with others, making it a great tool for collaboration.&lt;/p&gt;
&lt;hr /&gt;
&lt;h3 id="regexr"&gt;&lt;a href="https://regexr.com/"&gt;Regexr&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Regexr is another option for &lt;strong&gt;learning&lt;/strong&gt;, &lt;strong&gt;creating&lt;/strong&gt;, and &lt;strong&gt;testing regular expressions&lt;/strong&gt; with real-time examples. It provides helpful syntax highlighting and a community-driven library of regular expressions.&lt;br /&gt;
- &lt;strong&gt;Why use it&lt;/strong&gt;: Its interactive and beginner-friendly interface makes it ideal for those starting to learn regular expressions, offering instant feedback and useful regex examples.&lt;/p&gt;
&lt;hr /&gt;
&lt;h1 id="languages-databases-sql"&gt;üóÑÔ∏è Languages &amp;amp; Databases &amp;amp; SQL&lt;/h1&gt;
&lt;h3 id="onecompiler"&gt;&lt;a href="https://onecompiler.com/postgresql"&gt;OneCompiler&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;OneCompiler allows you to &lt;strong&gt;test code&lt;/strong&gt; without the need for installation, offering an easy way to run examples. It supports over 60 programming languages, including PostgreSQL.&lt;br /&gt;
- &lt;strong&gt;Why use it&lt;/strong&gt;: It‚Äôs perfect for practicing or verifying SQL queries without having to set up a local development environment.&lt;/p&gt;
&lt;hr /&gt;
&lt;h3 id="explain-dalibo"&gt;&lt;a href="https://explain.dalibo.com/"&gt;Explain Dalibo&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Sometimes, it‚Äôs unclear why certain SQL queries in &lt;strong&gt;postgres&lt;/strong&gt; take a long time to execute or consume too many resources. This tool helps visualize and analyze &lt;strong&gt;SQL execution plans&lt;/strong&gt; interactively.&lt;br /&gt;
- &lt;strong&gt;Why use it&lt;/strong&gt;: It‚Äôs useful for optimizing your database performance by providing insights into query execution plans.&lt;/p&gt;
&lt;p&gt;Here‚Äôs a quick example of how to use it:&lt;/p&gt;
&lt;ol style="list-style-type: decimal"&gt;
&lt;li&gt;Suppose you have a query that‚Äôs taking a long time to execute and you want to analyze it.&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class="sql"&gt;&lt;code&gt;SELECT 
    e.name AS employee_name,
    d.name AS department_name,
    AVG(s.amount) AS avg_salary
FROM 
    employees e
JOIN  departments d ON e.department_id = d.id
JOIN  salaries s ON e.id = s.employee_id
WHERE 
    d.budget &amp;gt; 1000000
    AND s.amount &amp;gt; (s.amount * 0.10 + LAG(s.amount) OVER (PARTITION BY e.id ORDER BY s.date))
GROUP BY 
    e.name, d.name
ORDER BY 
    avg_salary DESC;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can add the &lt;code&gt;EXPLAIN&lt;/code&gt; keyword at the beginning of your query:&lt;/p&gt;
&lt;pre class="sql"&gt;&lt;code&gt;EXPLAIN
   SELECT .../* Here goes the rest of your query */
;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This will return an execution plan like the following:&lt;/p&gt;
&lt;pre class="bash"&gt;&lt;code&gt;Sort  (cost=50233.24..50233.75 rows=204 width=96)
  Sort Key: (avg(s.amount)) DESC
  -&amp;gt;  HashAggregate  (cost=50230.40..50231.40 rows=204 width=96)
        Group Key: e.name, d.name
        -&amp;gt;  WindowAgg  (cost=40230.00..40230.40 rows=50000 width=64)
              -&amp;gt;  Hash Join  (cost=20000.00..30000.00 rows=50000 width=64)
                    Hash Cond: (s.employee_id = e.id)
                    -&amp;gt;  Seq Scan on salaries s  (cost=0.00..8000.00 rows=50000 width=32)
                    -&amp;gt;  Hash  (cost=10000.00..10000.00 rows=10000 width=64)
                          -&amp;gt;  Hash Join  (cost=5000.00..10000.00 rows=10000 width=64)
                                Hash Cond: (e.department_id = d.id)
                                -&amp;gt;  Seq Scan on employees e  (cost=0.00..4000.00 rows=10000 width=32)
                                -&amp;gt;  Hash  (cost=3000.00..3000.00 rows=1000 width=32)
                                      -&amp;gt;  Seq Scan on departments d  (cost=0.00..3000.00 rows=1000 width=32)
                                            Filter: (budget &amp;gt; 1000000)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Once you have this output, you can paste it into &lt;a href="https://explain.dalibo.com/"&gt;Explain Dalibo&lt;/a&gt;, submit it, and the tool will display the execution analysis in a graphical format, making it easier to identify performance issues.&lt;/p&gt;
&lt;div class="figure"&gt;
&lt;img src="https://r0mymendez.github.io//posts_en/2025-01-11-22-resources-for-developers-boost-your-productivity-creativity-and-code/img/img-6.png" alt="" /&gt;
&lt;p class="caption"&gt;Execution Plan Example&lt;/p&gt;
&lt;/div&gt;
&lt;div class="figure"&gt;
&lt;img src="https://r0mymendez.github.io//posts_en/2025-01-11-22-resources-for-developers-boost-your-productivity-creativity-and-code/img/img-7.png" alt="" /&gt;
&lt;p class="caption"&gt;Execution Plan Graph&lt;/p&gt;
&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;As with any data shared online, always check retention policies and security measures. Be sure not to upload any sensitive or confidential data.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;If you‚Äôre not familiar with the execution plan output, here‚Äôs a helpful guide to understand it: &lt;a href="http://tatiyants.com/postgres-query-plan-visualization/"&gt;Postgres Query Plan Visualization&lt;/a&gt;.&lt;/p&gt;
&lt;hr /&gt;
&lt;h3 id="sqliteonline"&gt;&lt;a href="https://sqliteonline.com/"&gt;SQLiteOnline&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;If you want to quickly run &lt;strong&gt;SQL queries examples&lt;/strong&gt;, validate or practice exercises from a tutorial, this is a great solution for development.&lt;br /&gt;
- &lt;strong&gt;Why use it&lt;/strong&gt;: It offers convenience and speed without the need to install any software.&lt;/p&gt;
&lt;hr /&gt;
&lt;h1 id="productivity-and-personal-organization"&gt;‚è∞ Productivity and Personal Organization&lt;/h1&gt;
&lt;p&gt;Sometimes we focus solely on tools that improve our coding efficiency, but it‚Äôs equally important to have tools that &lt;code&gt;help optimize our time&lt;/code&gt;, &lt;code&gt;enhance our professional presence&lt;/code&gt;, or &lt;code&gt;simply allow us to unwind&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id="pomofocus"&gt;&lt;a href="https://pomofocus.io/"&gt;Pomofocus&lt;/a&gt;&lt;/h3&gt;
&lt;div class="figure"&gt;
&lt;img src="https://r0mymendez.github.io//posts_en/2025-01-11-22-resources-for-developers-boost-your-productivity-creativity-and-code/img/img-8.png" alt="" /&gt;
&lt;p class="caption"&gt;Pomofocus Screenshot&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;If you struggle to concentrate and complete tasks, this tool is a great way to adopt the &lt;code&gt;Pomodoro technique&lt;/code&gt;. It encourages focus by working in &lt;strong&gt;‚è≥ 25-minute intervals&lt;/strong&gt; followed by short breaks. This web-based timer helps schedule these cycles, making it easier to stay productive and focused.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Why use it&lt;/strong&gt;: Perfect for boosting productivity and maintaining focus by breaking work into manageable intervals.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h3 id="mynoise"&gt;&lt;a href="https://mynoise.net/"&gt;MyNoise&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;A customizable generator of relaxing üéß sounds with a wide variety of ambient noise options to choose from.&lt;br /&gt;
- &lt;strong&gt;Why use it&lt;/strong&gt;: Helps maintain focus and concentration, even in noisy environments.&lt;/p&gt;
&lt;hr /&gt;
&lt;h3 id="github-profile-readme-generator"&gt;&lt;a href="https://rahuldkjain.github.io/gh-profile-readme-generator/"&gt;GitHub Profile Readme Generator&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;GitHub has become our professional üìÅ portfolio, so having an updated and appealing profile is essential. This tool helps you generate a personalized README file for your GitHub profile.&lt;br /&gt;
- &lt;strong&gt;Why use it&lt;/strong&gt;: Adds a professional and unique touch to your GitHub profile.&lt;/p&gt;
&lt;div class="figure"&gt;
&lt;img src="https://r0mymendez.github.io//posts_en/2025-01-11-22-resources-for-developers-boost-your-productivity-creativity-and-code/img/img-9.png" alt="" /&gt;
&lt;p class="caption"&gt;GitHub Profile Screenshot&lt;/p&gt;
&lt;/div&gt;
&lt;hr /&gt;
&lt;h1 id="design-and-visualization"&gt;‚úèÔ∏è Design and Visualization&lt;/h1&gt;
&lt;h3 id="coolors"&gt;&lt;a href="https://coolors.co/"&gt;Coolors&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Generate color üé® palettes for design projects. It‚Äôs similar to Adobe Colors, another tool I often use to explore palettes created by the community.&lt;br /&gt;
- &lt;strong&gt;Why use it&lt;/strong&gt;: Simplifies the process of selecting harmonious and visually appealing color schemes.&lt;/p&gt;
&lt;hr /&gt;
&lt;h3 id="carbon"&gt;&lt;a href="https://carbon.now.sh/"&gt;Carbon&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Create beautifully styled screenshots of code snippets.&lt;br /&gt;
- &lt;strong&gt;Why use it&lt;/strong&gt;: Ideal for sharing code snippets on social media, documentation, or presentations.&lt;/p&gt;
&lt;div class="figure"&gt;
&lt;img src="https://r0mymendez.github.io//posts_en/2025-01-11-22-resources-for-developers-boost-your-productivity-creativity-and-code/img/img-10.png" alt="" /&gt;
&lt;p class="caption"&gt;Carbon Screenshot&lt;/p&gt;
&lt;/div&gt;
&lt;hr /&gt;
&lt;h3 id="remove.bg"&gt;&lt;a href="https://www.remove.bg/es/upload"&gt;Remove.bg&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;This tool automatically removes backgrounds from üñºÔ∏è images, perfect for when you need a clean image for presentations or design work.&lt;br /&gt;
- &lt;strong&gt;Why use it&lt;/strong&gt;: Saves time on quick design tasks.&lt;/p&gt;
&lt;hr /&gt;
&lt;h1 id="icons-and-visual-resources"&gt;üé® Icons and Visual Resources&lt;/h1&gt;
&lt;h3 id="svgrepo"&gt;&lt;a href="https://www.svgrepo.com/"&gt;SVGRepo&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;If you‚Äôre looking for icons to use in your diagrams, presentations, or websites, SVGRepo is a fantastic tool. This site offers hundreds of free SVG icons, many of which can be customized to fit your needs. - &lt;strong&gt;Why use it&lt;/strong&gt;: Provides quick access to high-quality, customizable icons for your web and graphic design projects.&lt;/p&gt;
&lt;p&gt;&lt;img src="https://r0mymendez.github.io//posts_en/2025-01-11-22-resources-for-developers-boost-your-productivity-creativity-and-code/img/img-11.png" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="https://r0mymendez.github.io//posts_en/2025-01-11-22-resources-for-developers-boost-your-productivity-creativity-and-code/img/img-12.png" /&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;h3 id="google-fonts-icons"&gt;&lt;a href="https://fonts.google.com/icons"&gt;Google Fonts Icons&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;A comprehensive catalog of icons that integrate seamlessly with the Google Fonts ecosystem. These material design icons are modern, user-friendly, and versatile, created following Google‚Äôs design guidelines.&lt;br /&gt;
- &lt;strong&gt;Why use it&lt;/strong&gt;: Compatibility with Google Fonts and ease of use for web integration.&lt;/p&gt;
&lt;hr /&gt;
&lt;h3 id="feather-icons"&gt;&lt;a href="https://feathericons.com/"&gt;Feather Icons&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Another excellent tool featuring minimalist icons that can be customized freely to suit your design needs.&lt;br /&gt;
- &lt;strong&gt;Why use it&lt;/strong&gt;: Ideal for creating sleek, modern interfaces with customizable visuals.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;img src="https://r0mymendez.github.io//posts_en/2025-01-11-22-resources-for-developers-boost-your-productivity-creativity-and-code/img/img-13.png" /&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;If you know of other tools, feel free to share them in the üí¨comments to foster community collaboration.&lt;/p&gt;
&lt;pre class="r distill-force-highlighting-css"&gt;&lt;code&gt;&lt;/code&gt;&lt;/pre&gt;</description>
      <distill:md5>1145ff34f2729c13bdf22d8a7d8c642e</distill:md5>
      <category>Agile</category>
      <category>Tools</category>
      <category>Cloud Computing</category>
      <category>Methodology</category>
      <guid>https://r0mymendez.github.io/posts_en/2025-01-11-22-resources-for-developers-boost-your-productivity-creativity-and-code</guid>
      <pubDate>Sat, 11 Jan 2025 00:00:00 +0000</pubDate>
      <media:content url="https://r0mymendez.github.io/posts_en/2025-01-11-22-resources-for-developers-boost-your-productivity-creativity-and-code/preview.png" medium="image" type="image/png" width="800" height="449"/>
    </item>
    <item>
      <title>INSIDE LVMH Certification: A Journey through UX, Technology, Innovation, and Supply Chain in Luxury</title>
      <dc:creator>Romina Mendez</dc:creator>
      <link>https://r0mymendez.github.io/posts_en/2025-01-11-inside-lvmh-certification-a-journey-through-ux-technology-innovation-and-supply-chain-in-luxury</link>
      <description>


&lt;h1 id="what-is-lvmh"&gt;What is LVMH?&lt;/h1&gt;
&lt;p&gt;LVMH (Louis Vuitton Mo√´t Hennessy) is the global leader in luxury products and services. Formed in 1987 after the merger of two major names, the fashion house Louis Vuitton and the wines and spirits house Mo√´t Hennessy, this conglomerate has become a symbol of excellence and sophistication. With more than 75 iconic brands under its umbrella, LVMH spans diverse sectors, including fashion, perfumes, jewelry, wines, hospitality, and art.&lt;/p&gt;
&lt;div class="figure"&gt;
&lt;img src="https://r0mymendez.github.io//posts_en/2025-01-11-inside-lvmh-certification-a-journey-through-ux-technology-innovation-and-supply-chain-in-luxury/preview.png" alt="" /&gt;
&lt;p class="caption"&gt;Image description&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;‚ú® Among the most recognized brands are:&lt;/strong&gt; * üíº &lt;strong&gt;Fashion and leather goods:&lt;/strong&gt; Louis Vuitton, Dior, Fendi, Celine, and Loewe. * üíÑ &lt;strong&gt;Perfumes and cosmetics:&lt;/strong&gt; Guerlain, Fenty Beauty, Acqua di Parma. * ‚åö &lt;strong&gt;Watches and jewelry:&lt;/strong&gt; Bulgari, Tag Heuer, Tiffany &amp;amp; Co.¬†* üçá &lt;strong&gt;Wines and spirits:&lt;/strong&gt; Mo√´t &amp;amp; Chandon, Dom P√©rignon, Hennessy. * üè® &lt;strong&gt;Hotels and cultural experiences:&lt;/strong&gt; Cheval Blanc, Bulgari Hotels, Fondation Louis Vuitton.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The concept of luxury not only offers exceptional products but also creates unique experiences that combine tradition and modernity. Its commitment to innovation, sustainability, and cultural heritage has allowed LVMH to maintain its position as a global benchmark.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;h1 id="the-inside-lvmh-certification"&gt;The INSIDE LVMH Certification&lt;/h1&gt;
&lt;p&gt;The &lt;strong&gt;INSIDE LVMH certification&lt;/strong&gt; is a &lt;strong&gt;free and exclusive&lt;/strong&gt; educational program offering an immersion into the luxury industry. Designed in collaboration with renowned institutions such as &lt;code&gt;HEC Paris&lt;/code&gt;, &lt;code&gt;Central Saint Martins&lt;/code&gt;, &lt;code&gt;Universit√† Bocconi&lt;/code&gt;, and &lt;code&gt;Harvard&lt;/code&gt;, this course explores the &lt;code&gt;LVMH ecosystem&lt;/code&gt; through four modules.&lt;/p&gt;
&lt;p&gt;&lt;img src="https://r0mymendez.github.io//posts_en/2025-01-11-inside-lvmh-certification-a-journey-through-ux-technology-innovation-and-supply-chain-in-luxury/img/img-1.png" /&gt;&lt;/p&gt;
&lt;h1 id="certification-modules"&gt;Certification Modules&lt;/h1&gt;
&lt;h2 id="lvmh-the-luxury-industry"&gt;üìö 1- LVMH &amp;amp; The Luxury Industry&lt;/h2&gt;
&lt;p&gt;This module provides a comprehensive overview of LVMH‚Äôs history, its business sectors, and iconic Maisons. It also analyzes the ongoing evolution of the luxury industry, highlighting key trends such as sustainability, digital transformation, and the growing relevance of the Asian market.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Topics covered include:&lt;/strong&gt; * üéØ Current market trends. * üîç Digital transformation and personalization.&lt;/p&gt;
&lt;hr /&gt;
&lt;h2 id="luxury-society"&gt;üå± 2- Luxury &amp;amp; Society&lt;/h2&gt;
&lt;p&gt;This module focuses on LVMH‚Äôs commitment to environmental and social sustainability. Strategies for minimizing environmental impact and fostering positive social impact are explored, demonstrating how sustainability is deeply integrated into luxury brands.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Topics covered include:&lt;/strong&gt; * üåê The relationship between luxury and society. * üå≥ Environmental policies implemented for over 30 years. * ü§ù Positive social impact through inclusion and corporate responsibility. (Personally, I found this topic fascinating in how they classify and address inclusion within the group‚Äôs companies.)&lt;/p&gt;
&lt;hr /&gt;
&lt;h2 id="creation-branding"&gt;üé® 3- Creation &amp;amp; Branding&lt;/h2&gt;
&lt;p&gt;This module delves into the creative process behind luxury products and the strategic management of brands. Professors and LVMH talents shared insights on how iconic brands like Bulgari, Dior, and Tiffany &amp;amp; Co.¬†leverage their DNA and heritage to design timeless products and exceptional experiences. &lt;strong&gt;Topics covered include:&lt;/strong&gt; * üß¨ Brand DNA and codes. * ü§ù Strategies for collaborations and creating experiences. * üåü Practical examples of brand management in Bulgari, Dior, and Tiffany &amp;amp; Co.&lt;/p&gt;
&lt;hr /&gt;
&lt;h2 id="retail-customer-experience"&gt;üõçÔ∏è 4- Retail &amp;amp; Customer Experience&lt;/h2&gt;
&lt;p&gt;This final module explores the role of retail in the luxury industry and how LVMH Maisons create immersive experiences for customers through omnichannel strategies and personalized relationships.&lt;/p&gt;
&lt;p&gt;It also examines how these brands integrate data and innovative technologies, such as blockchain and NFTs, to deliver seamless experiences, ensure product traceability, and enhance excellence. &lt;strong&gt;Topics covered include:&lt;/strong&gt; * üîó Omnichannel strategies and data use. * üí° Integration of advanced technologies like blockchain and machine learning.&lt;/p&gt;
&lt;hr /&gt;
&lt;h2 id="extra-m√≥dulo-operations-supply-chain"&gt;üöö 5- Extra M√≥dulo: Operations &amp;amp; Supply Chain&lt;/h2&gt;
&lt;p&gt;While the original certification consists of four modules, I decided to take this additional fifth module on the supply chain (‚öñSupply Chain) in the üíéluxury industry, and I honestly think it was the most impactful. This module explained in detail what Supply Chain means within luxury brands and how this process varies depending on the types of products offered. From production and logistics to distribution, the module showed how these brands orchestrate each stage to meet the expectations of the most demanding clients. &lt;strong&gt;Topics covered include:&lt;/strong&gt; * üß© Definition and scope of operations in luxury: A 360¬∞ view of key processes, from manufacturing to distribution. * üìà Performance indicators (KPIs): Methods to measure and improve supply chain efficiency, with practical examples and formulas. * üå± Sustainability in the Supply Chain: How luxury brands integrate sustainable practices at all stages, from sourcing to transportation.&lt;/p&gt;
&lt;p&gt;This module allowed me to understand how luxury brands manage complex systems of &lt;code&gt;production&lt;/code&gt; and &lt;code&gt;distribution&lt;/code&gt; while maintaining quality standards. The most interesting part was learning about the differentiation of processes &lt;code&gt;according to the products&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Additionally, it addressed product traceability from &lt;strong&gt;material sourcing&lt;/strong&gt; to &lt;strong&gt;final delivery&lt;/strong&gt;, demonstrating an integral, sustainable, and client-focused approach&lt;/p&gt;
&lt;hr /&gt;
&lt;h1 id="my-experience-and-learnings"&gt;My Experience and Learnings&lt;/h1&gt;
&lt;p&gt;Currently, I work on Big Data and Advanced Analytics projects, and this certification allowed me to develop a broader perspective on key aspects that connect technology and innovation in the luxury industry:&lt;/p&gt;
&lt;h3 id="technological-strategies-and-traceability"&gt;üß© Technological strategies and traceability&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Advanced technologies such as blockchain and predictive analytics models are essential for supply chain traceability.&lt;/li&gt;
&lt;li&gt;These tools not only strengthen operations but also build consumer trust and optimize logistics processes.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="creative-process-and-innovation"&gt;üé® Creative process and innovation&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Although I work on IT and consultancy projects, I found parallels with the creation of luxury collections: from service personalization to designing scalable architectures.&lt;/li&gt;
&lt;li&gt;This creative process requires prototypes, iterations, approvals, and regulations, reflecting the importance of continuously documenting and adjusting to align with client needs.&lt;/li&gt;
&lt;li&gt;Learning from processes in other industries broadens the ability to innovate and personalize solutions in the technological field.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="understanding-the-client-360-client-centric"&gt;üë• Understanding the client (360 client-centric)&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The importance of metrics and models to measure customer satisfaction is a cornerstone in personalization.&lt;/li&gt;
&lt;li&gt;This industry stands out for its focus on creating unique experiences, requiring data-driven strategies that segment audiences and predict behaviors.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="culture-and-tradition"&gt;üèõÔ∏è Culture and tradition&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Inspiration from brands like Louis Vuitton, founded in 1854, which balance artisanal practices with technological advances.&lt;/li&gt;
&lt;li&gt;Technology is a key bridge to integrate into creative, operational, logistical, and post-sale processes, but it must maintain a balance that preserves the identity and personalization of brands while evolving alongside modern market demands.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h3 id="personal-reflections"&gt;&lt;strong&gt;Personal Reflections&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;The &lt;strong&gt;INSIDE LVMH certification&lt;/strong&gt; is an opportunity to learn about the luxury industry and understand how brands in this sector operate.&lt;/p&gt;
&lt;p&gt;In my case, it allowed me to reflect on the &lt;strong&gt;creative process&lt;/strong&gt; and how to identify the tools designers and artists need to bring their ideas to life. As software developers, we often forget that our solutions are created for end users who, in turn, serve other potential clients seeking &lt;strong&gt;unique experiences&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;This learning reinforces the importance of designing with personalization in mind and maintaining a balance between innovation and brand identity.&lt;/p&gt;
&lt;hr /&gt;
&lt;h1 id="take-advantage-of-the-opportunity"&gt;Take Advantage of the Opportunity&lt;/h1&gt;
&lt;p&gt;I highly recommend taking the &lt;strong&gt;INSIDE LVMH certification&lt;/strong&gt;, which is offered üìÜ twice a year. This platform not only provides this course but also offers a wide range of resources designed by group employees, industry leaders, and academic experts.&lt;/p&gt;
&lt;p&gt;Registering for &lt;strong&gt;INSIDE LVMH&lt;/strong&gt; is not limited to obtaining the certificate; it also provides regular access to exclusive content.&lt;/p&gt;
&lt;hr /&gt;
&lt;h1 id="referencias"&gt;üìö Referencias&lt;/h1&gt;
&lt;ol style="list-style-type: decimal"&gt;
&lt;li&gt;&lt;strong&gt;Inside LVMH&lt;/strong&gt; :&lt;a href="https://www.insidelvmh.com" class="uri"&gt;https://www.insidelvmh.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;LVMH&lt;/strong&gt;: &lt;a href="https://www.lvmh.com/en" class="uri"&gt;https://www.lvmh.com/en&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class="r distill-force-highlighting-css"&gt;&lt;code&gt;&lt;/code&gt;&lt;/pre&gt;</description>
      <distill:md5>b406650295afe4d2fa4da21f94b5b6f6</distill:md5>
      <category>Agile</category>
      <category>Tools</category>
      <category>Methodology</category>
      <category>Supply chain</category>
      <guid>https://r0mymendez.github.io/posts_en/2025-01-11-inside-lvmh-certification-a-journey-through-ux-technology-innovation-and-supply-chain-in-luxury</guid>
      <pubDate>Sat, 11 Jan 2025 00:00:00 +0000</pubDate>
      <media:content url="https://r0mymendez.github.io/posts_en/2025-01-11-inside-lvmh-certification-a-journey-through-ux-technology-innovation-and-supply-chain-in-luxury/preview.png" medium="image" type="image/png" width="800" height="509"/>
    </item>
    <item>
      <title>Diagram-as-Code: Creating Dynamic and Interactive Documentation for Visual Content</title>
      <dc:creator>Romina Mendez</dc:creator>
      <link>https://r0mymendez.github.io/posts_en/2025-01-10-diagram-as-code-creating-dynamic-and-interactive-documentation-for-visual-content</link>
      <description>


&lt;h1 id="diagram-as-code"&gt;üé® Diagram as code&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;Diagram as Code&lt;/strong&gt; is an approach that allows you to create diagrams through code instead of traditional graphic tools. Instead of manually building diagrams, you can write code in a text file to define the structure, components, and connections of your diagrams.&lt;/p&gt;
&lt;p&gt;&lt;img src="https://r0mymendez.github.io//posts_en/2025-01-10-diagram-as-code-creating-dynamic-and-interactive-documentation-for-visual-content/preview.png" /&gt;&lt;/p&gt;
&lt;p&gt;This code is then translated into graphical images, making it easier to integrate and document in software projects, where it is especially useful for creating and updating architectural and flow diagrams programmatically.&lt;/p&gt;
&lt;hr /&gt;
&lt;h1 id="what-is-diagrams"&gt;What is Diagrams?&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;Diagrams&lt;/strong&gt; is a &lt;strong&gt;üêçPython library&lt;/strong&gt; that implements the Diagram as Code approach, enabling you to create architectural infrastructure diagrams and other types of diagrams through code. With Diagrams, you can easily define cloud infrastructure components (such as &lt;code&gt;AWS&lt;/code&gt;, &lt;code&gt;Azure&lt;/code&gt;, and &lt;code&gt;GCP&lt;/code&gt;), network elements, software services, and more, all with just a few lines of code.&lt;/p&gt;
&lt;h3 id="benefits-of-diagram-as-code"&gt;üéâ Benefits of Diagram-as-Code&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;üìù &lt;strong&gt;Representation of Diagrams as Code&lt;/strong&gt;: Create and update diagrams directly from code, ensuring maintainability in agile projects.&lt;/li&gt;
&lt;li&gt;üìë &lt;strong&gt;Automated Documentation&lt;/strong&gt;: Generate visuals from code, keeping diagrams aligned with the current architecture.&lt;/li&gt;
&lt;li&gt;üîÑ &lt;strong&gt;Change Control&lt;/strong&gt;: Track diagram modifications over time.&lt;/li&gt;
&lt;li&gt;üîç &lt;strong&gt;Enhanced Clarity&lt;/strong&gt;: Improve understanding of complex systems with clear, shared visuals.&lt;/li&gt;
&lt;li&gt;‚úèÔ∏è &lt;strong&gt;Customizable&lt;/strong&gt;: Represent cloud infrastructures, workflows, or data pipelines with flexible and tailored visuals.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h1 id="tutorial"&gt;Tutorial&lt;/h1&gt;
&lt;h2 id="library-installation"&gt;üêç Library Installation&lt;/h2&gt;
&lt;p&gt;I was currently using version &lt;code&gt;'0.23.4'&lt;/code&gt; for this tutorial.&lt;/p&gt;
&lt;pre class="python"&gt;&lt;code&gt;!pip install diagrams==&amp;#39;0.23.4&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;hr /&gt;
&lt;h1 id="diagrams-nodes"&gt;üé® Diagrams: Nodes&lt;/h1&gt;
&lt;p&gt;The library allows you to create architectural diagrams programmatically, using nodes to represent different infrastructure components and services.&lt;/p&gt;
&lt;hr /&gt;
&lt;h2 id="node-types"&gt;Node Types&lt;/h2&gt;
&lt;p&gt;Nodes in Diagrams represent components from different cloud service providers as well as other architectural elements. Here are the main categories of available nodes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;‚òÅÔ∏è &lt;strong&gt;Cloud Providers&lt;/strong&gt;: AWS (Amazon Web Services), Azure, GCP, IBM Cloud, Alibaba Cloud, Oracle Cloud, DigitalOcean, among others.&lt;/li&gt;
&lt;li&gt;üè¢ &lt;strong&gt;On-Premise&lt;/strong&gt;: Represents the infrastructure physically located on the company‚Äôs premises.&lt;/li&gt;
&lt;li&gt;üö¢ &lt;strong&gt;Kubernetes (K8S)&lt;/strong&gt;: Container orchestration system to automate the deployment, scaling, and management of containerized applications (represented by a ship‚Äôs wheel, symbolizing control and navigation).&lt;/li&gt;
&lt;li&gt;üñ•Ô∏è &lt;strong&gt;OpenStack&lt;/strong&gt;: Open-source software platform for creating and managing public and private clouds.&lt;/li&gt;
&lt;li&gt;üîß &lt;strong&gt;Generic&lt;/strong&gt;: Generic nodes that can represent any component not specifically covered by provider-specific nodes (crossed tools, representing different tools in one category).&lt;/li&gt;
&lt;li&gt;‚òÅÔ∏è &lt;strong&gt;SaaS (Software as a Service)&lt;/strong&gt;: Represents applications delivered as a service over the internet, such as Snowflake, chat services (Slack, Teams, Telegram, among others), security (e.g., Okta), or social networks (crossed out phone and cloud for the SaaS concept).&lt;/li&gt;
&lt;li&gt;üîß &lt;strong&gt;Custom&lt;/strong&gt;: Allows users to customize their diagrams using PNG icons stored in a specific folder. This is useful for representing infrastructure components not covered by the default nodes (crossed-out custom tools).&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2 id="programming-languages"&gt;üíª Programming Languages&lt;/h2&gt;
&lt;p&gt;The &lt;strong&gt;Diagrams&lt;/strong&gt; library allows you to use different nodes to represent various programming languages. These nodes are helpful for indicating in your diagrams if any part of your architecture utilizes scripts or components developed in a specific programming language.&lt;/p&gt;
&lt;p&gt;Below, we will showcase all the available languages in the library. If any language is missing, you can add custom nodes by uploading the corresponding logo into a specific folder.&lt;/p&gt;
&lt;pre class="python"&gt;&lt;code&gt;# Create the diagram object
with diagrams.Diagram(&amp;quot;Programming Languages&amp;quot;, show=False, filename=&amp;quot;languages&amp;quot;):
    # Get all the languages available in this library
    languages = [item for item in dir(diagrams.programming.language) if item[0] != &amp;#39;_&amp;#39;]

    # Divide the representation in two lines
    mid_index = len(languages) // 2
    first_line = languages[:mid_index]
    second_line = languages[mid_index:]

    # Add nodes in the first row
    prev_node = None

    for language in first_line:
        current_node = eval(f&amp;quot;diagrams.programming.language.{language}(language)&amp;quot;)
        if prev_node is not None:
            prev_node &amp;gt;&amp;gt; current_node
        prev_node = current_node

    # Add nodes in the second row
    prev_node = None

    for language in second_line:
        current_node = eval(f&amp;quot;diagrams.programming.language.{language}(language)&amp;quot;)
        if prev_node is not None:
            prev_node &amp;gt;&amp;gt; current_node
        prev_node = current_node

Image(&amp;quot;languages.png&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src="https://r0mymendez.github.io//posts_en/2025-01-10-diagram-as-code-creating-dynamic-and-interactive-documentation-for-visual-content/img/language.png" /&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;h2 id="aws-amazon-web-services"&gt;‚òÅÔ∏è AWS (Amazon Web Services)&lt;/h2&gt;
&lt;p&gt;We can use Amazon nodes, which are organized into several categories, such as:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Analytics and Business&lt;/strong&gt;: aws.analytics, aws.business&lt;br /&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Compute and Storage&lt;/strong&gt;: aws.compute, aws.storage, aws.cost&lt;br /&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Database and DevTools&lt;/strong&gt;: aws.database, aws.devtools&lt;br /&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Integration and Management&lt;/strong&gt;: aws.integration, aws.management&lt;br /&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Machine Learning and Mobile&lt;/strong&gt;: aws.ml, aws.mobile&lt;br /&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Networking and Security&lt;/strong&gt;: aws.network, aws.security&lt;br /&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Others&lt;/strong&gt;: aws.blockchain, aws.enduser, aws.engagement, aws.game, aws.general, aws.iot, aws.media, aws.migration, aws.quantum, aws.robotics, aws.satellite&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Next, we will represent one of these categories to visualize the available nodes within &lt;code&gt;aws.database&lt;/code&gt;.&lt;/p&gt;
&lt;pre class="python"&gt;&lt;code&gt;from diagrams import Diagram
from IPython.display import Image
import diagrams.aws.database as aws_database


database_components = []
for item in dir(aws_database):
    if item[0] != &amp;#39;_&amp;#39;:
        if not any(comp.startswith(item) or item.startswith(comp) for comp in database_components):
            database_components.append(item)


with Diagram(&amp;quot;AWS Database&amp;quot;, show=False, filename=&amp;quot;aws_database&amp;quot;):
    mid_index = len(database_components) // 2
    first_line = database_components[:mid_index]
    second_line = database_components[mid_index:]


    prev_node = None
    for item_database in first_line:
        current_node = eval(f&amp;quot;aws_database.{item_database}(item_database)&amp;quot;)
        if prev_node is not None:
            prev_node &amp;gt;&amp;gt; current_node
        prev_node = current_node


    prev_node = None
    for item_database in second_line:
        current_node = eval(f&amp;quot;aws_database.{item_database}(item_database)&amp;quot;)
        if prev_node is not None:
            prev_node &amp;gt;&amp;gt; current_node
        prev_node = current_node

Image(&amp;quot;aws_database.png&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src="https://r0mymendez.github.io//posts_en/2025-01-10-diagram-as-code-creating-dynamic-and-interactive-documentation-for-visual-content/img/database.jpeg" /&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;h2 id="use-case"&gt;‚òÅÔ∏è Use Case&lt;/h2&gt;
&lt;p&gt;Now, let‚Äôs create a simple blueprint that corresponds to importing a dataset and training a machine learning model on &lt;strong&gt;AWS&lt;/strong&gt;.&lt;/p&gt;
&lt;pre class="python"&gt;&lt;code&gt;from diagrams import Diagram, Cluster
from diagrams.aws.storage import S3
from diagrams.aws.analytics import Glue, Athena
import diagrams.aws.ml as ml
from diagrams.aws.integration import StepFunctions
from diagrams.aws.compute import Lambda
from diagrams.aws.network import APIGateway
from IPython.display import Image

with Diagram(&amp;quot;AWS Data Processing Pipeline&amp;quot;, show=False):

    lambda_raw = Lambda(&amp;#39;Get Raw Data&amp;#39;)
    # Buckets de S3
    with Cluster(&amp;quot;Data Lake&amp;quot;):
        s3_rawData = S3(&amp;quot;raw_data&amp;quot;)
        s3_stage = S3(&amp;quot;staging_data&amp;quot;)
        s3_data_capture = S3(&amp;quot;data_capture&amp;quot;)


    athena = Athena(&amp;quot;Athena&amp;quot;)
    s3_rawData &amp;gt;&amp;gt; athena
    s3_stage &amp;gt;&amp;gt; athena
    s3_data_capture &amp;gt;&amp;gt; athena

    #  Step Functions Pipeline
    with Cluster(&amp;quot;Data Processing Pipeline&amp;quot;):
        step_functions = StepFunctions(&amp;quot;Pipeline&amp;quot;)

        # Glue Jobs in Step Functions
        with Cluster(&amp;quot;Glue Jobs&amp;quot;):
            data_quality = Glue(&amp;quot;job_data_quality&amp;quot;)
            transform = Glue(&amp;quot;job_data_transform&amp;quot;)
            dataset_preparation = Glue(&amp;quot;job_dataset_model&amp;quot;)

        # Define Step Functions Flows
        step_functions &amp;gt;&amp;gt; data_quality &amp;gt;&amp;gt; transform &amp;gt;&amp;gt; dataset_preparation
        s3_rawData &amp;gt;&amp;gt; data_quality

    # SageMaker for model training and deployment
    with Cluster(&amp;quot;SageMaker Model Deployment&amp;quot;):
        train_model = ml.SagemakerTrainingJob(&amp;quot;job_train_model&amp;quot;)
        eval_model = ml.SagemakerGroundTruth(&amp;quot;job_evaluate_model&amp;quot;)
        endpoint = ml.SagemakerModel(&amp;quot;model_enpoint&amp;quot;)

    # API Gateway and Lambda for the endpoint
    api_gateway = APIGateway(&amp;quot;API_gateway&amp;quot;)
    lambda_fn = Lambda(&amp;quot;invoke_endpoint&amp;quot;)

    # Connection
    lambda_raw &amp;gt;&amp;gt; s3_rawData
    s3_stage &amp;gt;&amp;gt; train_model &amp;gt;&amp;gt; eval_model &amp;gt;&amp;gt; endpoint
    endpoint &amp;gt;&amp;gt; lambda_fn &amp;gt;&amp;gt; api_gateway
    endpoint &amp;gt;&amp;gt; s3_data_capture
    dataset_preparation &amp;gt;&amp;gt; train_model


Image(&amp;quot;aws_data_processing_pipeline.png&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;div class="figure"&gt;
&lt;img src="https://r0mymendez.github.io//posts_en/2025-01-10-diagram-as-code-creating-dynamic-and-interactive-documentation-for-visual-content/img/architecture.png" alt="" /&gt;
&lt;p class="caption"&gt;Image description&lt;/p&gt;
&lt;/div&gt;
&lt;hr /&gt;
&lt;h1 id="repository"&gt;Repository&lt;/h1&gt;
&lt;p&gt;Below are the link to all the code, if you find it useful, you can leave a star ‚≠êÔ∏è and follow me to receive notifications of new articles. This will help me grow in the tech community and create more content.&lt;/p&gt;
&lt;p&gt;&lt;img src="https://r0mymendez.github.io//posts_en/2025-01-10-diagram-as-code-creating-dynamic-and-interactive-documentation-for-visual-content/img/github.png" /&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;If you want to see how to implement a documentation site using this pipeline you can read the article I published in the following &lt;a href="https://dev.to/r0mymendez/deploying-docs-as-code-on-aws-building-dynamic-documentation-sites-in-mkdocs-and-docusaurus-3516"&gt;link&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;h1 id="references"&gt;üìö References&lt;/h1&gt;
&lt;ol style="list-style-type: decimal"&gt;
&lt;li&gt;&lt;strong&gt;Diagrams:&lt;/strong&gt; &lt;a href="https://diagrams.mingrammer.com/" class="uri"&gt;https://diagrams.mingrammer.com/&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class="r distill-force-highlighting-css"&gt;&lt;code&gt;&lt;/code&gt;&lt;/pre&gt;</description>
      <distill:md5>3d75e92d56a59f2769d531e7e03e1d7b</distill:md5>
      <category>Data</category>
      <category>Python</category>
      <category>Cloud Computing</category>
      <category>AWS</category>
      <guid>https://r0mymendez.github.io/posts_en/2025-01-10-diagram-as-code-creating-dynamic-and-interactive-documentation-for-visual-content</guid>
      <pubDate>Fri, 10 Jan 2025 00:00:00 +0000</pubDate>
      <media:content url="https://r0mymendez.github.io/posts_en/2025-01-10-diagram-as-code-creating-dynamic-and-interactive-documentation-for-visual-content/preview.png" medium="image" type="image/png" width="800" height="466"/>
    </item>
    <item>
      <title>Deploying Docs-as-Code on AWS: Building Dynamic Documentation Sites in MkDocs and Docusaurus</title>
      <dc:creator>Romina Mendez</dc:creator>
      <link>https://r0mymendez.github.io/posts_en/2025-01-10-deploying-docs-as-code-on-aws-building-dynamic-documentation-sites-in-mkdocs-and-docusaurus</link>
      <description>


&lt;p&gt;The solution includes support for &lt;code&gt;charts&lt;/code&gt; and &lt;code&gt;diagrams&lt;/code&gt;, continuous integration &lt;code&gt;(CI/CD)&lt;/code&gt; using a simple workflow in &lt;code&gt;GitHub Actions&lt;/code&gt;, and automatic deployment using &lt;code&gt;Terraform&lt;/code&gt;. Let‚Äôs get started!&lt;/p&gt;
&lt;p&gt;&lt;img src="https://r0mymendez.github.io//posts_en/2025-01-10-deploying-docs-as-code-on-aws-building-dynamic-documentation-sites-in-mkdocs-and-docusaurus/preview.png" /&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;h1 id="what-is-documentation-as-code"&gt;What is Documentation as Code?&lt;/h1&gt;
&lt;p&gt;Documentation and its updates are an important process in many companies that develop software, often carried out using different tools, many of which are paid solutions.&lt;br /&gt;
Therefore, in recent times, the concept of &lt;strong&gt;‚Äúdoc as code‚Äù&lt;/strong&gt; has emerged. This means using the same tools and workflows used in software development to &lt;code&gt;manage&lt;/code&gt;, &lt;code&gt;version&lt;/code&gt;, and &lt;code&gt;deploy&lt;/code&gt; documentation.&lt;br /&gt;
This approach not only allows for better tracking of the documentation but also facilitates its maintenance and ensures alignment with the same best practices used in software development, not just in the code but also in the documentation .&lt;/p&gt;
&lt;p&gt;&lt;img src="https://r0mymendez.github.io//posts_en/2025-01-10-deploying-docs-as-code-on-aws-building-dynamic-documentation-sites-in-mkdocs-and-docusaurus/img/img-1.png" /&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;h2 id="tools-for-documentation-as-code"&gt;Tools for Documentation as Code&lt;/h2&gt;
&lt;p&gt;For the development of these sites, it is essential to understand some practices and tools that allow us to implement this approach. Below is a detailed list of the most important aspects to cover in this tutorial.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;üìù &lt;strong&gt;Markdown&lt;/strong&gt;: The most common markup language for writing documentation due to its simplicity and integration with version control platforms and static site generators.&lt;/li&gt;
&lt;li&gt;üóÇÔ∏è &lt;strong&gt;Git&lt;/strong&gt;: Git allows versioning of documentation just like code. Thanks to Git, every change in the documentation is recorded, enabling teams to track edits, revert changes, and collaborate more efficiently.&lt;/li&gt;
&lt;li&gt;üîÑ &lt;strong&gt;Gitflow&lt;/strong&gt;: This methodology provides a structured workflow to manage versions and revisions of documentation, ensuring that changes are approved and tested before reaching production. Gitflow also facilitates collaboration between teams, allowing for safe and organized change management.&lt;/li&gt;
&lt;li&gt;‚òÅÔ∏è &lt;strong&gt;Cloud Services&lt;/strong&gt;: Using services like AWS S3, Netlify, or GitHub Pages, you can deploy documentation at a low cost. These services allow the creation of fast, secure, and easily accessible static sites.&lt;/li&gt;
&lt;li&gt;üåê &lt;strong&gt;Static Site Generators&lt;/strong&gt;: Tools like Docusaurus, Jekyll, or Hugo convert Markdown documentation into a navigable website, allowing you to create rich and organized documentation without a server.&lt;/li&gt;
&lt;li&gt;üöÄ &lt;strong&gt;Continuous Integration (CI/CD)&lt;/strong&gt;: CI/CD pipelines (e.g., GitHub Actions, GitLab CI, or Jenkins) allow you to automatically deploy documentation when a new version is merged or modifications are approved. This ensures the documentation is always up-to-date.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src="https://r0mymendez.github.io//posts_en/2025-01-10-deploying-docs-as-code-on-aws-building-dynamic-documentation-sites-in-mkdocs-and-docusaurus/img/img-2.png" /&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;h2 id="advantages-of-docs-as-code"&gt;Advantages of Docs-as-Code&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;‚úÖ Consistency and Quality&lt;/strong&gt;: By using version control and change reviews, the documentation remains consistent and of high quality.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;‚öôÔ∏è Automation&lt;/strong&gt;: CI/CD tools enable automation of documentation deployment, reducing update times and minimizing errors.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ü§ù Efficient Collaboration&lt;/strong&gt;: With tools like Git, teams can collaborate on creating and maintaining documentation without conflicts.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;üîß Simplified Maintenance&lt;/strong&gt;: Maintaining documentation is integrated into the development workflow, making updates easier as the code evolves.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2 id="mkdocs"&gt;üìÑ MkDocs&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;MkDocs&lt;/strong&gt; is a static site generator written in &lt;strong&gt;üêçPython,&lt;/strong&gt; designed specifically for documenting projects. Its goal is to simplify creating documentation using Markdown files, which are easy to write and read.&lt;/p&gt;
&lt;p&gt;With minimal configuration, &lt;strong&gt;MkDocs&lt;/strong&gt; converts Markdown files into a navigable and well-structured documentation website, making it ideal for developers and teams who want to keep their documentation up to date.&lt;/p&gt;
&lt;hr /&gt;
&lt;h2 id="mkdocs-material"&gt;‚úèÔ∏è MkDocs Material&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;MkDocs Material&lt;/strong&gt; is an advanced theme for &lt;strong&gt;MkDocs&lt;/strong&gt; that follows Google‚Äôs Material Design guidelines.&lt;/p&gt;
&lt;h3 id="key-features-include"&gt;üöÄ Key features include:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;üì± &lt;strong&gt;Responsive Design&lt;/strong&gt;: Automatically adapts to any screen size.&lt;br /&gt;
&lt;/li&gt;
&lt;li&gt;üé® &lt;strong&gt;Customization&lt;/strong&gt;: Easily modify colors, fonts, favicon, and logo to match your project‚Äôs visual identity.&lt;br /&gt;
&lt;/li&gt;
&lt;li&gt;üîç &lt;strong&gt;Search Interface&lt;/strong&gt;: Advanced search groups results and highlights searched terms, helping users find the information they need.&lt;br /&gt;
&lt;/li&gt;
&lt;li&gt;‚ö° &lt;strong&gt;Lazy Loading&lt;/strong&gt;: Implements lazy loading for search results, improving performance and reducing load times.&lt;br /&gt;
&lt;/li&gt;
&lt;li&gt;üîó &lt;strong&gt;Integrations&lt;/strong&gt;: Compatible with Google Analytics, Disqus, and GitHub, facilitating traffic analysis, user feedback, and direct connection to the project repository.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2 id="mermaid"&gt;‚úèÔ∏è Mermaid&lt;/h2&gt;
&lt;p&gt;Mermaid is a **JavaScript** library for creating diagrams and charts from text. By integrating with MkDocs Material, Mermaid allows you to generate visualizations such as flowcharts, entity-relationship diagrams, and other charts within the documentation without external tools.&lt;/p&gt;
&lt;p&gt;&lt;img src="https://r0mymendez.github.io//posts_en/2025-01-10-deploying-docs-as-code-on-aws-building-dynamic-documentation-sites-in-mkdocs-and-docusaurus/img/img-3.png" /&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;h2 id="dynamic-page-jinja"&gt;üß© Dynamic Page: Jinja&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Jinja&lt;/strong&gt; is a library that allows embedding variables and data from Python dictionaries into HTML, making web pages dynamic. This library is commonly used for generating dynamic HTML and sending personalized emails.&lt;/p&gt;
&lt;hr /&gt;
&lt;h2 id="docusaurus-overview"&gt;ü¶ñ Docusaurus Overview&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Docusaurus&lt;/strong&gt; is an open-source project developed by Meta in 2007 that simplifies the creation, deployment, and maintenance of documentation websites in a fast and efficient way. It allows the use of Markdown and MDX to write content, while its core built on React enables full customization of the styles to fit the specific needs of the project.&lt;/p&gt;
&lt;p&gt;Additionally, Docusaurus supports Mermaid through the &lt;code&gt;@docusaurus/theme-mermaid&lt;/code&gt; plugin, enabling the inclusion of charts and diagrams directly within the documentation.&lt;/p&gt;
&lt;hr /&gt;
&lt;h1 id="diagram-as-code"&gt;üé® Diagram as Code&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;Diagram as Code&lt;/strong&gt; is an approach that allows you to create diagrams through code, rather than using traditional graphic tools. Instead of manually building diagrams, you write code in a text file to define the structure, components, and connections of your diagrams.&lt;/p&gt;
&lt;p&gt;This code is then translated into graphical images, making it easier to integrate and document in software projects. It‚Äôs especially useful for creating and updating architectural and flow diagrams programmatically.&lt;/p&gt;
&lt;hr /&gt;
&lt;h2 id="diagram-as-code-example-of-creating-cloud-diagrams"&gt;üé® Diagram as Code: Example of Creating Cloud Diagrams&lt;/h2&gt;
&lt;p&gt;As previously mentioned, &lt;strong&gt;Diagrams&lt;/strong&gt; allows you to generate blueprints using the icons of major cloud technologies. The representation of these diagrams is done through nodes, and in our example, we‚Äôll use all cloud-related nodes and AWS services.&lt;/p&gt;
&lt;p&gt;&lt;img src="https://r0mymendez.github.io//posts_en/2025-01-10-deploying-docs-as-code-on-aws-building-dynamic-documentation-sites-in-mkdocs-and-docusaurus/img/img-4.png" /&gt;&lt;/p&gt;
&lt;p&gt;For more details on how I created this, you can read my article about &lt;a href="https://dev.to/r0mymendez/doc-as-diagrams-2ci5-temp-slug-2900884?preview=41df4c1f39f0ebe2634f376408ef3ef751cc09bff3c487f9ab7e7b364f729767da9709796b1bff2fc1e2fc925e62087ad52a19c3cd2e0a28d5a4b68d"&gt;Diagram as Code&lt;/a&gt;, and the full implementation can be found in this repository:&lt;/p&gt;
&lt;p&gt;&lt;img src="https://r0mymendez.github.io//posts_en/2025-01-10-deploying-docs-as-code-on-aws-building-dynamic-documentation-sites-in-mkdocs-and-docusaurus/img/github.png" /&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;h1 id="use-case-creating-a-documentation-site-for-a-machine-learning-project"&gt;üìö Use Case: Creating a Documentation Site for a Machine Learning Project&lt;/h1&gt;
&lt;p&gt;In this use case, I will create a &lt;code&gt;documentation site&lt;/code&gt; for a &lt;strong&gt;machine learning project&lt;/strong&gt; involving üè• hospital data. The goal is to build an interactive documentation site using &lt;strong&gt;MkDocs&lt;/strong&gt; initially and later migrate it to &lt;strong&gt;Docusaurus&lt;/strong&gt;. The site will include both static and dynamic components to meet specific requirements, such as embedding visual diagrams and updating data dynamically from a SQLite database.&lt;/p&gt;
&lt;hr /&gt;
&lt;h2 id="key-features-of-the-documentation-site"&gt;üöÄ Key Features of the Documentation Site&lt;/h2&gt;
&lt;ol style="list-style-type: decimal"&gt;
&lt;li&gt;&lt;strong&gt;Visual Representations&lt;/strong&gt;: I will embed diagrams created with &lt;strong&gt;Diagrams&lt;/strong&gt; (&lt;code&gt;Diagram as Code&lt;/code&gt;) to illustrate the architecture of the machine learning pipeline effectively.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Dynamic Data Updates&lt;/strong&gt;: The documentation will display the version and last update date dynamically, pulling this information from a &lt;strong&gt;SQLite database&lt;/strong&gt; to ensure accuracy and relevance.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Sample of data&lt;/strong&gt;: The documentation will include a sample from the Synthea patient table, showcasing synthetic data as an example.&lt;/li&gt;
&lt;/ol&gt;
&lt;hr /&gt;
&lt;h2 id="pages-of-the-site"&gt;üìÑ Pages of the Site&lt;/h2&gt;
&lt;p&gt;For this reason our documentation site will have the following pages:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;üìÑ Home&lt;/strong&gt;: The homepage of the documentation.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;üìÑ Tables&lt;/strong&gt;:Explanation of the Synthea data tables and their uses.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;üìÑ Architecture&lt;/strong&gt;:A detailed overview of the data processing architecture, hosted on AWS.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;üìÑ Glossary&lt;/strong&gt;: A glossary of terms used throughout the project&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h2 id="mkdocs-implementation"&gt;MkDocs Implementation&lt;/h2&gt;
&lt;p&gt;In this section, we‚Äôll walk through the steps to set up a documentation project using &lt;strong&gt;MkDocs&lt;/strong&gt; from scratch and explain its organized directory structure.&lt;/p&gt;
&lt;h3 id="prerequisites-for-mkdocs"&gt;üîß Prerequisites for MkDocs&lt;/h3&gt;
&lt;p&gt;To get started, you‚Äôll need to install the following &lt;strong&gt;üêçPython&lt;/strong&gt; libraries:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Install MkDocs and the Material&lt;/strong&gt; &lt;code&gt;bash   pip install mkdocs mkdocs-material&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Install additional libraries to enable dynamic content updating&lt;/strong&gt; &lt;code&gt;bash   pip install aiosql pandas sqlite3 jinja2 shutil&lt;/code&gt; ‚Äî&lt;/p&gt;
&lt;h3 id="mkdocs-project-setting-up"&gt;üîß Mkdocs: Project Setting Up&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Initialize the Project&lt;/strong&gt;&lt;br /&gt;
Start by creating a new MkDocs project. Run the following commands in your terminal:&lt;br /&gt;
&lt;code&gt;bash    mkdocs new mkdocs    cd mkdocs&lt;/code&gt; This command creates a basic MkDocs project with a default structure .&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Explore the Directory Structure&lt;/strong&gt;&lt;br /&gt;
Once the MkDocs site is created, you need to add the following files and folders, as they are not included by default. ¬† Remember, the links to the repository are provided at the end of this post for your reference, and each component will be explained in detail below.&lt;/p&gt;
&lt;pre class="plaintext"&gt;&lt;code&gt;üìÅ docs/
  ‚îú‚îÄ‚îÄ üìÅ img/
  ‚îú‚îÄ‚îÄ `architecture.md`
  ‚îú‚îÄ‚îÄ `glossary.md`
  ‚îú‚îÄ‚îÄ `index.md`
  ‚îú‚îÄ‚îÄ `tables.md`
  ‚îú‚îÄ‚îÄ üìÅ template/
  ‚îÇ   ‚îú‚îÄ‚îÄ üìÅ db/
  ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ üìÅ data/
  ‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ hospital.db
  ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ üìÅ queries/
  ‚îÇ   ‚îú‚îÄ‚îÄ `architecture.md`
  ‚îÇ   ‚îú‚îÄ‚îÄ `glossary.md`
  ‚îÇ   ‚îú‚îÄ‚îÄ `index.md`
  ‚îÇ   ‚îú‚îÄ‚îÄ `tables.md`
  ‚îÇ   ‚îî‚îÄ‚îÄ `update.py`
üìÅ infraestructure/
üìÅ github/
  ‚îú‚îÄ‚îÄ üìÅ workflows/
  ‚îÇ   ‚îú‚îÄ‚îÄ main.yml
üìÑ mkdocs.yml&lt;/code&gt;&lt;/pre&gt;
&lt;hr /&gt;
&lt;h3 id="mkdocs-component-overview"&gt;üìÇMkdocs: Component Overview&lt;/h3&gt;
&lt;table&gt;
&lt;colgroup&gt;
&lt;col width="11%" /&gt;
&lt;col width="5%" /&gt;
&lt;col width="83%" /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr class="header"&gt;
&lt;th&gt;&lt;strong&gt;Component&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;Directory&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class="odd"&gt;
&lt;td&gt;&lt;strong&gt;Database (&lt;code&gt;db&lt;/code&gt;)&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;db&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Contains the SQLite database (&lt;code&gt;hospital.db&lt;/code&gt;) and queries (&lt;code&gt;metadata.sql&lt;/code&gt;, &lt;code&gt;person.sql&lt;/code&gt;) to manage dynamic data. Learn more about managing SQL queries in Python in my previous article: &lt;a href="https://dev.to/r0mymendez/python-projects-with-sql-strategies-for-effective-query-management-2n5k"&gt;Python Projects with SQL&lt;/a&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="even"&gt;
&lt;td&gt;üñãÔ∏è &lt;strong&gt;Templates &amp;amp; Pages&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;template&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Markdown templates: &lt;code&gt;index.md&lt;/code&gt;, &lt;code&gt;tables.md&lt;/code&gt;, &lt;code&gt;architecture.md&lt;/code&gt;, &lt;code&gt;glossary.md&lt;/code&gt;. Supports Mermaid diagrams, embedded images, and database-driven content.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="odd"&gt;
&lt;td&gt;üñºÔ∏è &lt;strong&gt;Static Content (&lt;code&gt;docs&lt;/code&gt;)&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;docs&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Final site generated by &lt;code&gt;update.py&lt;/code&gt;, including images (&lt;code&gt;img/&lt;/code&gt;) and dynamic content populated from &lt;code&gt;template&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="even"&gt;
&lt;td&gt;üåê &lt;strong&gt;Infrastructure (&lt;code&gt;infraestructure&lt;/code&gt;)&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;infraestructure&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Terraform scripts (&lt;code&gt;main.tf&lt;/code&gt;, &lt;code&gt;variables.tf&lt;/code&gt;) to deploy an S3 bucket for documentation hosting.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr /&gt;
&lt;h3 id="mkdocs-1"&gt;üìÑ Mkdocs&lt;/h3&gt;
&lt;p&gt;Configuring &lt;code&gt;mkdocs.yml&lt;/code&gt; Once we have our project structure set up, we will configure it step by step, starting with the &lt;code&gt;mkdocs.yml file&lt;/code&gt;. This file defines the structure and settings for your documentation site. Here‚Äôs how it should be structured:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;mkdocs.yml&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;pre class="yaml"&gt;&lt;code&gt;site_name: Hospital Documentation  
nav:
  - Home: index.md
  - Synthea Tables: tables.md
  - AWS Architectur: architecture.md
  - Glossary: glossary.md
markdown_extensions:
  - pymdownx.superfences:
      custom_fences:
        - name: mermaid
          class: mermaid
theme:
  name: material                &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In this &lt;strong&gt;configuration file&lt;/strong&gt;, you can primarily see in the &lt;strong&gt;nav&lt;/strong&gt; section the pages that will be accessible from the menu. Then, we specify the &lt;code&gt;Mermaid&lt;/code&gt; extension, which will be explained in the next section. Finally, the &lt;strong&gt;theme&lt;/strong&gt; section applies the &lt;code&gt;Material theme&lt;/code&gt;, enabling styling and components available within this library.&lt;/p&gt;
&lt;hr /&gt;
&lt;h3 id="mkdocs-mermaid-extension"&gt;‚úèÔ∏è Mkdocs: Mermaid Extension&lt;/h3&gt;
&lt;p&gt;As mentioned earlier, &lt;strong&gt;Mermaid&lt;/strong&gt; is a &lt;strong&gt;JavaScript&lt;/strong&gt; library for creating diagrams and charts from text. Below, we will see some examples. In our case, we will use it to generate an Entity Relationship Diagram (ERD) on the &lt;strong&gt;tables&lt;/strong&gt; page of the documentation.&lt;/p&gt;
&lt;div class="figure"&gt;
&lt;img src="https://r0mymendez.github.io//posts_en/2025-01-10-deploying-docs-as-code-on-aws-building-dynamic-documentation-sites-in-mkdocs-and-docusaurus/img/img-5.png" alt="" /&gt;
&lt;p class="caption"&gt;Image description&lt;/p&gt;
&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;In the repository, you will be able to see how to construct this code based on the Entity Relationship Diagram (ERD) found in the official Synthea documentation. You can also check the example of the tables page in the following link: &lt;a href="https://github.com/r0mymendez/doc-as-code-mkdocs/blob/main/docs/template/tables.md?plain=1"&gt;tables.md&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;h3 id="mkdocs-dynamic-content-with-jinja"&gt;‚öôÔ∏è Mkdocs: Dynamic Content with Jinja&lt;/h3&gt;
&lt;p&gt;To enable dynamic content generation for our documentation site, we‚Äôll use &lt;strong&gt;Jinja&lt;/strong&gt; to process templates and replace placeholders with actual data. Below is a step-by-step breakdown:&lt;/p&gt;
&lt;ol style="list-style-type: decimal"&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Set Up a &lt;code&gt;templates&lt;/code&gt; Folder&lt;/strong&gt;&lt;br /&gt;
Create a folder named &lt;code&gt;templates&lt;/code&gt; to store all Markdown files for the site. These files should include placeholders. For instance, in &lt;code&gt;index.md&lt;/code&gt;, you might have placeholders like &lt;code&gt;{{database.version_date}}&lt;/code&gt; and &lt;code&gt;{{database.version}}&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Utilize Placeholders&lt;/strong&gt;&lt;br /&gt;
Placeholders are dynamic variables in the Markdown files. These variables will be updated automatically using Python dictionaries to inject relevant data.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Generate Dynamic Content with &lt;code&gt;update.py&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Prepare your Markdown templates by identifying the sections where dynamic data is required.&lt;br /&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Use a Python script (&lt;code&gt;update.py&lt;/code&gt;), available in my repository, to process the templates. The script performs the following tasks:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Database Connection&lt;/strong&gt;: Connects to a SQLite database to fetch the latest values.&lt;br /&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Template Rendering&lt;/strong&gt;: Uses the Jinja library to substitute placeholders with data from the database.&lt;br /&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;File Generation&lt;/strong&gt;: Outputs updated Markdown files to the &lt;code&gt;docs&lt;/code&gt; folder, ready for rendering in MkDocs.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src="https://r0mymendez.github.io//posts_en/2025-01-10-deploying-docs-as-code-on-aws-building-dynamic-documentation-sites-in-mkdocs-and-docusaurus/img/img-6.png" /&gt;&lt;/p&gt;
&lt;pre class="python"&gt;&lt;code&gt;from jinja2 import Template
def render_template(template_str, data):
    &amp;quot;&amp;quot;&amp;quot;Render the template with the data.&amp;quot;&amp;quot;&amp;quot;
    template = Template(template_str)
    return template.render(data)
# Data structure
data_dict = {
    &amp;#39;database&amp;#39;: {
        &amp;#39;version&amp;#39;: 1,
        &amp;#39;version_date&amp;#39;: &amp;#39;2024-01-01&amp;#39;
    }
}
# Render the template
rendered_content = render_template(&amp;quot;Data updated to {{database.version_date}}&amp;quot;, data_dict)
print(rendered_content) &lt;/code&gt;&lt;/pre&gt;
&lt;pre class="bash"&gt;&lt;code&gt;Data updated to  2024-10-01 10:20:30&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;By following these steps, you can automate the updating process for your documentation site, ensuring the content remains dynamic and relevant without manual edits.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;h3 id="dynamic-update-of-data-tables"&gt;Dynamic Update of Data Tables&lt;/h3&gt;
&lt;p&gt;In the next example, we will update the content in the &lt;code&gt;tables.md&lt;/code&gt; file to show an example of the &lt;strong&gt;&lt;code&gt;persons&lt;/code&gt;&lt;/strong&gt; table from the database. To do this, we will create a placeholder &lt;code&gt;{{table.person}}&lt;/code&gt; within the Markdown file. The idea is to dynamically fetch the data from the &lt;strong&gt;&lt;code&gt;persons&lt;/code&gt;&lt;/strong&gt; table, and then use the Jinja library along with pandas to convert the query results into a Markdown table format.&lt;/p&gt;
&lt;p&gt;Here‚Äôs an example of how the &lt;code&gt;tables.md&lt;/code&gt; file looks with the placeholder:&lt;/p&gt;
&lt;pre class="markdown"&gt;&lt;code&gt;#### Example Person Table
## Person Table
{{table.person}}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The process is as follows:&lt;/p&gt;
&lt;ol style="list-style-type: decimal"&gt;
&lt;li&gt;&lt;strong&gt;Query the Database&lt;/strong&gt;: The script will query the &lt;strong&gt;&lt;code&gt;persons&lt;/code&gt;&lt;/strong&gt; table in the SQLite database to fetch relevant records.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Convert to Markdown&lt;/strong&gt;: Using &lt;strong&gt;pandas&lt;/strong&gt;, the results of the query will be converted into a Markdown table format.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Replace the Placeholder&lt;/strong&gt;: The &lt;code&gt;{{table.person}}&lt;/code&gt; placeholder in the &lt;code&gt;tables.md&lt;/code&gt; file will be replaced by the generated Markdown table.&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class="python"&gt;&lt;code&gt;import sqlite3
import pandas as pd
import aiosql


def get_queries():
    sql = aiosql.from_path(&amp;#39;template/db/queries&amp;#39;, &amp;#39;sqlite3&amp;#39;)
    return sql

def get_table_person(db_name):
    &amp;quot;&amp;quot;&amp;quot;Get a DataFrame from the PATIENTS table.&amp;quot;&amp;quot;&amp;quot;
    query = get_queries().get_example_patients.sql 
    connection = sqlite3.connect(db_name)

    df = pd.read_sql_query(query, connection)
    connection.close()
    return df

def update_tables_file(template_path, output_dir, db_name):
    &amp;quot;&amp;quot;&amp;quot;Update the tables.md file&amp;quot;&amp;quot;&amp;quot;
    df = get_table_person(db_name)
    # Convert the dataframe in markdown format
    data_dict = {
        &amp;#39;table&amp;#39;: {
            &amp;#39;person&amp;#39;: df.to_markdown(index=False)  
        }
    }


print(get_table_person(&amp;quot;hospital.db&amp;quot;))  &lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;This way, the documentation always reflects up-to-date data, displaying dynamic examples based on the actual content from the database.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;h3 id="mkdocs-final-workflow"&gt;‚öôÔ∏è Mkdocs: Final Workflow&lt;/h3&gt;
&lt;ol style="list-style-type: decimal"&gt;
&lt;li&gt;&lt;strong&gt;Create Templates&lt;/strong&gt;: Develop your pages in the &lt;code&gt;docs/template&lt;/code&gt; directory.&lt;br /&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Run &lt;code&gt;update.py&lt;/code&gt;&lt;/strong&gt;: Populate dynamic content and generate the final files in &lt;code&gt;docs/output&lt;/code&gt;.&lt;br /&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Preview Locally&lt;/strong&gt;: Use &lt;code&gt;mkdocs serve&lt;/code&gt; to preview the site on localhost.&lt;br /&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Build for Deployment&lt;/strong&gt;: Use &lt;code&gt;mkdocs build&lt;/code&gt; to generate a static site in the &lt;code&gt;docs/&lt;/code&gt; folder.&lt;br /&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Deploy&lt;/strong&gt;: Use Terraform to deploy the site to an AWS S3 bucket. Refer to the deployment section of this post for detailed instructions.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src="https://r0mymendez.github.io//posts_en/2025-01-10-deploying-docs-as-code-on-aws-building-dynamic-documentation-sites-in-mkdocs-and-docusaurus/img/img-7.png" /&gt;&lt;/p&gt;
&lt;div class="figure"&gt;
&lt;img src="https://r0mymendez.github.io//posts_en/2025-01-10-deploying-docs-as-code-on-aws-building-dynamic-documentation-sites-in-mkdocs-and-docusaurus/img/img-8.png" alt="" /&gt;
&lt;p class="caption"&gt;I&lt;/p&gt;
&lt;/div&gt;
&lt;hr /&gt;
&lt;h2 id="docusaurus-implementation"&gt;ü¶ñ Docusaurus Implementation&lt;/h2&gt;
&lt;p&gt;In the following sections, I will provide detailed steps and insights on how to implement a documentation site using &lt;strong&gt;Docusaurus&lt;/strong&gt;. This includes setup, customization, and deployment options.&lt;/p&gt;
&lt;hr /&gt;
&lt;h3 id="key-features-of-docusaurus"&gt;üöÄ Key Features of Docusaurus&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;üì∂ &lt;strong&gt;Mermaid Support&lt;/strong&gt;: Similar to MkDocs, Docusaurus supports Mermaid for embedding diagrams.&lt;br /&gt;
&lt;/li&gt;
&lt;li&gt;‚öõÔ∏è &lt;strong&gt;React Components&lt;/strong&gt;: Built on React, Docusaurus enables the integration of dynamic components into your documentation.&lt;br /&gt;
&lt;/li&gt;
&lt;li&gt;üîÑ &lt;strong&gt;Dynamic Content&lt;/strong&gt;: Leverages Python scripts to fetch and update content dynamically from an SQLite database.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h3 id="docusaurus-setup-from-scratch"&gt;üîß Docusaurus Setup: From Scratch&lt;/h3&gt;
&lt;p&gt;To get started with Docusaurus, we follow a quick setup process, which is very similar to the steps we used for MkDocs but with different tools.&lt;/p&gt;
&lt;ol style="list-style-type: decimal"&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Create a New Docusaurus Project:&lt;/strong&gt; First, install Node.js and run the following command to create a new Docusaurus site:&lt;/p&gt;
&lt;pre class="bash"&gt;&lt;code&gt;npx create-docusaurus@latest my-website classic&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Install Mermaid Package&lt;/strong&gt;: To enable Mermaid diagrams, install the required package:&lt;/p&gt;
&lt;pre class="bash"&gt;&lt;code&gt;npm install @docusaurus/theme-mermaid&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Run the Development Server&lt;/strong&gt;: Once installed, navigate to your project directory and run the development server:&lt;/p&gt;
&lt;pre class="bash"&gt;&lt;code&gt;cd my-website
npx docusaurus start&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Visit the Site&lt;/strong&gt;: Your site will be live locally at: &lt;code&gt;http://localhost:3000&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;hr /&gt;
&lt;h3 id="docusaurus-customization-configuration"&gt;üîß Docusaurus Customization: Configuration&lt;/h3&gt;
&lt;p&gt;The configuration file &lt;code&gt;docusaurus.config.js&lt;/code&gt; is where we customize the title, theme, navigation, and enable features like Mermaid for diagram rendering. Example snippet for enabling Mermaid:&lt;/p&gt;
&lt;pre class="js"&gt;&lt;code&gt;module.exports = {
  title: &amp;#39;Hospital Documentation&amp;#39;,
  tagline: &amp;#39;Documentation for Hospital Data ML Project&amp;#39;,
  favicon: &amp;#39;img/favicon.ico&amp;#39;,
  url: &amp;#39;https://your-site-url.com&amp;#39;,
  markdown: {
    mermaid: true,  // Enable Mermaid diagrams
  },
  themeConfig: {
    navbar: {
      title: &amp;#39;Hospital Docs&amp;#39;,
      items: [
        { to: &amp;#39;docs/&amp;#39;, label: &amp;#39;Home&amp;#39;, position: &amp;#39;left&amp;#39; },
        { to: &amp;#39;docs/tables&amp;#39;, label: &amp;#39;Tables&amp;#39;, position: &amp;#39;left&amp;#39; },
        { to: &amp;#39;docs/architecture&amp;#39;, label: &amp;#39;Architecture&amp;#39;, position: &amp;#39;left&amp;#39; },
        { to: &amp;#39;docs/glossary&amp;#39;, label: &amp;#39;Glossary&amp;#39;, position: &amp;#39;left&amp;#39; },
      ],
    },
    footer: {
      style: &amp;#39;dark&amp;#39;,
      links: [
        { label: &amp;#39;GitHub&amp;#39;, href: &amp;#39;https://github.com/your-repo&amp;#39; },
      ],
    },
  },
};&lt;/code&gt;&lt;/pre&gt;
&lt;hr /&gt;
&lt;h3 id="docusaurus-customizing-the-homepage"&gt;üîß Docusaurus Customizing the Homepage&lt;/h3&gt;
&lt;p&gt;To customize the homepage, we modify the &lt;code&gt;src/components/HomepageFeatures/index.js&lt;/code&gt; file. Here, you can adjust the &lt;strong&gt;FeatureList&lt;/strong&gt; object to update the features displayed on the homepage.&lt;/p&gt;
&lt;div class="figure"&gt;
&lt;img src="https://r0mymendez.github.io//posts_en/2025-01-10-deploying-docs-as-code-on-aws-building-dynamic-documentation-sites-in-mkdocs-and-docusaurus/img/img-9.png" alt="" /&gt;
&lt;p class="caption"&gt;Image description&lt;/p&gt;
&lt;/div&gt;
&lt;hr /&gt;
&lt;h3 id="docusaurus-content-organization-and-structure"&gt;üìÇ Docusaurus Content Organization and Structure&lt;/h3&gt;
&lt;p&gt;Just like in &lt;strong&gt;MkDocs&lt;/strong&gt;, Docusaurus supports &lt;strong&gt;Markdown files&lt;/strong&gt; for content, and we organize the structure as follows: 1. &lt;strong&gt;Template Folder&lt;/strong&gt;: Store your Markdown files in the &lt;code&gt;docs/template&lt;/code&gt; directory, and create a Python script (similar to &lt;code&gt;update.py&lt;/code&gt;) to fetch and populate dynamic data into these templates. 2. &lt;strong&gt;Category File (&lt;code&gt;__category__.json&lt;/code&gt;)&lt;/strong&gt;: To manage the order of documents in the sidebar, create a &lt;code&gt;__category__.json&lt;/code&gt; file in each folder. For example:&lt;/p&gt;
&lt;pre class="bash"&gt;&lt;code&gt;Architecture
  ‚îú‚îÄ‚îÄ architecture.md
  ‚îú‚îÄ‚îÄ img
  ‚îî‚îÄ‚îÄ __category__.json&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;__category__.json&lt;/code&gt; Example&lt;/strong&gt;: &lt;code&gt;json    {      "label": "Architecture",      "position": 2,      "link": {        "type": "generated-index",        "description": "AWS Data Processing Blueprint"      }    }&lt;/code&gt;&lt;/p&gt;
&lt;div class="figure"&gt;
&lt;img src="https://r0mymendez.github.io//posts_en/2025-01-10-deploying-docs-as-code-on-aws-building-dynamic-documentation-sites-in-mkdocs-and-docusaurus/img/img-10.png" alt="" /&gt;
&lt;p class="caption"&gt;Image description&lt;/p&gt;
&lt;/div&gt;
&lt;hr /&gt;
&lt;h3 id="dynamic-data-with-jinja"&gt;‚öôÔ∏è Dynamic Data with Jinja&lt;/h3&gt;
&lt;p&gt;To incorporate dynamic content, such as database tables, we use a &lt;strong&gt;üêçPython&lt;/strong&gt; script named &lt;code&gt;update.py&lt;/code&gt;, which you can find in the repository.&lt;/p&gt;
&lt;p&gt;This script fetches data from a &lt;strong&gt;SQLite&lt;/strong&gt; database and processes the Markdown files stored in the &lt;code&gt;templates&lt;/code&gt; folder. It then updates these files with the fetched data and copies them into the &lt;code&gt;docs&lt;/code&gt; folder, preparing them for site rendering.&lt;/p&gt;
&lt;p&gt;This workflow ensures that the content remains up-to-date and ready for deployment, following a similar approach to what we implemented with MkDocs.&lt;/p&gt;
&lt;hr /&gt;
&lt;h3 id="docusaurus-final-workflow"&gt;‚öôÔ∏è Docusaurus: Final Workflow&lt;/h3&gt;
&lt;ol style="list-style-type: decimal"&gt;
&lt;li&gt;&lt;strong&gt;Create Templates&lt;/strong&gt;: Develop your Markdown files within the &lt;code&gt;docs/template&lt;/code&gt; directory.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Run Python Script&lt;/strong&gt;: Use the script to dynamically populate data into the templates.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Preview Locally&lt;/strong&gt;: Run &lt;code&gt;npx docusaurus start&lt;/code&gt; to preview the site.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Build for Deployment&lt;/strong&gt;: Once ready, use &lt;code&gt;npx docusaurus build&lt;/code&gt; to generate the static site.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Deploy&lt;/strong&gt;: Host the static files on your preferred platform, such as AWS S3.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="figure"&gt;
&lt;img src="https://r0mymendez.github.io//posts_en/2025-01-10-deploying-docs-as-code-on-aws-building-dynamic-documentation-sites-in-mkdocs-and-docusaurus/img/img-11.png" alt="" /&gt;
&lt;p class="caption"&gt;Image description&lt;/p&gt;
&lt;/div&gt;
&lt;hr /&gt;
&lt;h2 id="deployment"&gt;üöÄ Deployment&lt;/h2&gt;
&lt;p&gt;In this section, we will cover the &lt;strong&gt;deployment process&lt;/strong&gt; for both &lt;strong&gt;MkDocs&lt;/strong&gt; and &lt;strong&gt;Docusaurus&lt;/strong&gt; using &lt;strong&gt;AWS S3&lt;/strong&gt; for hosting. While the deployment steps are the same for both tools, the installation processes differ, with &lt;strong&gt;MkDocs&lt;/strong&gt; being Python-based and &lt;strong&gt;Docusaurus&lt;/strong&gt; being JavaScript-based.&lt;/p&gt;
&lt;hr /&gt;
&lt;h3 id="infrastructure-setup-with-terraform"&gt;Infrastructure Setup with Terraform&lt;/h3&gt;
&lt;p&gt;To deploy a static documentation site to &lt;strong&gt;AWS S3&lt;/strong&gt;, we use Terraform to provision and configure the required resources. The setup defines the S3 bucket, enables static website hosting, and configures public access with a bucket policy to allow read-only access. You can find the &lt;strong&gt;&lt;code&gt;main.tf&lt;/code&gt;&lt;/strong&gt; file in the repository.&lt;/p&gt;
&lt;hr /&gt;
&lt;h3 id="key-components-for-s3-deployment"&gt;üöÄ Key Components for S3 Deployment&lt;/h3&gt;
&lt;ol style="list-style-type: decimal"&gt;
&lt;li&gt;&lt;strong&gt;S3 Bucket Creation&lt;/strong&gt;: The resource to create the S3 bucket where the documentation will be hosted.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Static Website Hosting&lt;/strong&gt;: Configuration for static web hosting, setting the &lt;code&gt;index.html&lt;/code&gt; and &lt;code&gt;error.html&lt;/code&gt; as the main and error documents.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Public Access Configuration&lt;/strong&gt;: Manages public access to the S3 bucket, ensuring it is configured for read-only access.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Bucket Policy&lt;/strong&gt;: Allows public access to retrieve the documentation content from the S3 bucket.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;You can access the complete &lt;strong&gt;Terraform file&lt;/strong&gt; and the corresponding configurations for deploying the site in the repository:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Terraform Configuration File&lt;/strong&gt;: * &lt;a href="https://github.com/r0mymendez/doc-as-code-mkdocs/tree/main/infraestructure"&gt;mkdocs file&lt;/a&gt; * &lt;a href="https://github.com/r0mymendez/doc-as-code-docusaurus/tree/main/infraestructure"&gt;docusaurus file&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;GitHub Action Workflow for Automatic Deployment&lt;/strong&gt;: A CI/CD pipeline to automate the deployment process is also included in the repository. * &lt;a href="https://github.com/r0mymendez/doc-as-code-mkdocs/blob/main/.github/workflows/main.yml"&gt;mkdocs file&lt;/a&gt; * &lt;a href="https://github.com/r0mymendez/doc-as-code-docusaurus/blob/main/.github/workflows/main.yml"&gt;docusaurus file&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;GitHub Actions Configuration&lt;/strong&gt; Make sure to configure your AWS credentials in the &lt;strong&gt;GitHub repository secrets&lt;/strong&gt; under &lt;strong&gt;Settings&lt;/strong&gt; &amp;gt; &lt;strong&gt;Secrets&lt;/strong&gt; &amp;gt; &lt;strong&gt;Actions&lt;/strong&gt;. This will allow GitHub Actions to securely access your AWS account and perform actions like uploading files to S3 when you push changes to the &lt;code&gt;main&lt;/code&gt; branch.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;h3 id="repositories"&gt;Repositories&lt;/h3&gt;
&lt;p&gt;Below are the links to all the code to deploy your documentation site. If you find it useful, you can leave a star ‚≠êÔ∏è and follow me to receive notifications of new articles. This will help me grow in the tech community and create more content.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;MkDocs Deployment&lt;/strong&gt;: &lt;a href="https://github.com/r0mymendez/doc-as-code-mkdocs"&gt;GitHub Repository for MkDocs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src="https://r0mymendez.github.io//posts_en/2025-01-10-deploying-docs-as-code-on-aws-building-dynamic-documentation-sites-in-mkdocs-and-docusaurus/img/github-1.png" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Docusaurus Deployment&lt;/strong&gt;: &lt;a href="https://github.com/r0mymendez/doc-as-code-docusaurus"&gt;GitHub Repository for Docusaurus&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src="https://r0mymendez.github.io//posts_en/2025-01-10-deploying-docs-as-code-on-aws-building-dynamic-documentation-sites-in-mkdocs-and-docusaurus/img/github-2.png" /&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;h2 id="final-conclusions-mkdocs-vs.-docusaurus"&gt;üîç Final Conclusions: MkDocs vs.¬†Docusaurus&lt;/h2&gt;
&lt;p&gt;Both solutions are easy to implement, but in the following items, we can explore some differences, and what is the best solution depends on the context, knowledge, and complexity you may need to implement.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;üíª &lt;strong&gt;Language &amp;amp; Customization&lt;/strong&gt;:&lt;br /&gt;
&lt;strong&gt;MkDocs&lt;/strong&gt; is Python-based, with simple YAML configurations and templates, ideal for quick setups. On the other hand, &lt;strong&gt;Docusaurus&lt;/strong&gt; is React-based, offering advanced customization and interactive components, making it more suitable for users needing more control over visuals.&lt;/li&gt;
&lt;li&gt;üìë &lt;strong&gt;Markdown &amp;amp; Rendering&lt;/strong&gt;:&lt;br /&gt;
Both use Markdown, but &lt;strong&gt;Docusaurus&lt;/strong&gt; allows for interactive elements, making it better for dynamic content.&lt;/li&gt;
&lt;li&gt;‚öôÔ∏è &lt;strong&gt;Complexity&lt;/strong&gt;:&lt;br /&gt;
&lt;strong&gt;Docusaurus&lt;/strong&gt; is better for complex documentation applications, such as those with login systems. &lt;strong&gt;MkDocs&lt;/strong&gt; is simpler but &lt;strong&gt;Docusaurus&lt;/strong&gt; offers more flexibility for styling and features.&lt;/li&gt;
&lt;li&gt;üë• &lt;strong&gt;Community&lt;/strong&gt;:&lt;br /&gt;
&lt;strong&gt;Docusaurus&lt;/strong&gt; has a strong community with Discord and 74 plugins, while &lt;strong&gt;MkDocs&lt;/strong&gt; relies on GitHub discussions for community support.&lt;/li&gt;
&lt;li&gt;‚òÅÔ∏è &lt;strong&gt;Amazon Deployment&lt;/strong&gt;:&lt;br /&gt;
You can deploy a static site to &lt;strong&gt;S3&lt;/strong&gt;, reducing deployment costs, and also use CI/CD for automatic deployment.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;h1 id="references"&gt;üìö References&lt;/h1&gt;
&lt;ol style="list-style-type: decimal"&gt;
&lt;li&gt;&lt;strong&gt;Mkdocs&lt;/strong&gt;: &lt;a href="https://www.mkdocs.org/" class="uri"&gt;https://www.mkdocs.org/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Mkdocs-Material&lt;/strong&gt;: &lt;a href="https://squidfunk.github.io/mkdocs-material/" class="uri"&gt;https://squidfunk.github.io/mkdocs-material/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Diagrams&lt;/strong&gt;: &lt;a href="https://diagrams.mingrammer.com/" class="uri"&gt;https://diagrams.mingrammer.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Docusaurus&lt;/strong&gt;: &lt;a href="https://docusaurus.io/" class="uri"&gt;https://docusaurus.io/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Jinja&lt;/strong&gt;: &lt;a href="https://jinja.palletsprojects.com/en/stable/" class="uri"&gt;https://jinja.palletsprojects.com/en/stable/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Git Book - What is doc as code&lt;/strong&gt;: &lt;a href="https://www.gitbook.com/blog/what-is-docs-as-code" class="uri"&gt;https://www.gitbook.com/blog/what-is-docs-as-code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Write the docs&lt;/strong&gt;: &lt;a href="https://www.writethedocs.org/guide/docs-as-code/" class="uri"&gt;https://www.writethedocs.org/guide/docs-as-code/&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class="r distill-force-highlighting-css"&gt;&lt;code&gt;&lt;/code&gt;&lt;/pre&gt;</description>
      <distill:md5>5903a0294c1d6b46fd2712d4c045765b</distill:md5>
      <category>Data</category>
      <category>Python</category>
      <category>Cloud Computing</category>
      <category>AWS</category>
      <guid>https://r0mymendez.github.io/posts_en/2025-01-10-deploying-docs-as-code-on-aws-building-dynamic-documentation-sites-in-mkdocs-and-docusaurus</guid>
      <pubDate>Fri, 10 Jan 2025 00:00:00 +0000</pubDate>
      <media:content url="https://r0mymendez.github.io/posts_en/2025-01-10-deploying-docs-as-code-on-aws-building-dynamic-documentation-sites-in-mkdocs-and-docusaurus/preview.png" medium="image" type="image/png" width="800" height="464"/>
    </item>
    <item>
      <title>Book Review: Solution architect handbook ‚Äì Third Edition</title>
      <dc:creator>Romina Mendez</dc:creator>
      <link>https://r0mymendez.github.io/posts_en/2025-01-11-book-review-solution-architect-handbook-third-edition</link>
      <description>


&lt;h1 id="insights-and-highlights"&gt;Insights and Highlights&lt;/h1&gt;
&lt;p&gt;After spending several weeks reading &lt;strong&gt;‚ÄòSolution architect handbook‚Äô&lt;/strong&gt;, I have decided to share my own review to highlight why I find this book to be a highly recommended read for any solutions architect or those interested in modern technology.&lt;/p&gt;
&lt;div class="figure"&gt;
&lt;img src="https://r0mymendez.github.io//posts_en/2025-01-11-book-review-solution-architect-handbook-third-edition/img/img-1.jpg" style="display: block;   margin-left: auto;   margin-right: auto;" alt="" /&gt;
&lt;p class="caption"&gt;&lt;a href="https://www.oreilly.com/library/view/aws-for-solutions/9781803238951/"&gt;source Image: oreilly&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;hr /&gt;
&lt;h1 id="twelve-reasons-to-read-this-book"&gt;Twelve Reasons to Read This Book&lt;/h1&gt;
&lt;p&gt;Below I want to detail, based on the chapters I read, the 12 reasons why you should consider reading this book:&lt;/p&gt;
&lt;div class="figure"&gt;
&lt;img src="https://r0mymendez.github.io//posts_en/2025-01-11-book-review-solution-architect-handbook-third-edition/preview.png" alt="" /&gt;
&lt;p class="caption"&gt;Image description&lt;/p&gt;
&lt;/div&gt;
&lt;ol style="list-style-type: decimal"&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;üë• Redefining Roles:&lt;/strong&gt; The book discusses how AI and machine learning are reshaping roles within solution architecture, emphasizing the necessity for ongoing adaptation to technological trends.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;‚úèÔ∏è Design Principles:&lt;/strong&gt; This book dedicates two chapters to explaining key principles for designing resilient and scalable architectures, focusing on their adaptability to future changes.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;‚òÅÔ∏è Cloud Migration Strategies:&lt;/strong&gt; The text outlines essential techniques and strategies for a successful transition to cloud infrastructures, addressing both the challenges and opportunities.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;üöÄ Performance Optimization:&lt;/strong&gt; It guides you through managing concurrency, parallelism, and various storage types to enhance system performance.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;üîí Security Practices:&lt;/strong&gt; A particularly strong chapter covers advanced security practices needed to protect valuable information and systems from emerging cyber threats.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;üìà Cost Management:&lt;/strong&gt; This section explains how to effectively manage cloud infrastructure costs, ensuring that expenses align with actual resource needs to enhance business profitability.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;‚öôÔ∏è DevOps Integration:&lt;/strong&gt; The book illustrates how integrating DevOps promotes smoother collaboration between development and operations teams and integrates security practices throughout the software lifecycle.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;üó≥ Data Architecture:&lt;/strong&gt; It examines different data architectures and their practical implementation using AWS blueprints for efficient data management.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;ü§ñ AI Architecture:&lt;/strong&gt; It addresses how modern architectures can support and enhance generative AI technologies, including strategies to optimize machine learning and MLOps.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;üì¶ Legacy System Modernization:&lt;/strong&gt; It discusses strategies for modernizing legacy systems to improve performance, scalability, and operational cost efficiency.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;üìÑ Effective Documentation:&lt;/strong&gt; A comprehensive chapter discusses the critical role of documentation in a project and how to clearly communicate the architectural vision to all stakeholders involved.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;üí¨ Soft Skills:&lt;/strong&gt; The final chapter emphasizes the importance of interpersonal skills, such as effective communication and leadership, which are crucial for managing and executing complex projects successfully.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;hr /&gt;
&lt;h1 id="final-thoughts"&gt;Final Thoughts&lt;/h1&gt;
&lt;p&gt;This book not only addresses the theory and implementation of solution architecture but also provides effective methods to manage and mitigate issues in various contexts. It covers topics from implementing modern architectural solutions like &lt;strong&gt;machine learning models&lt;/strong&gt;, &lt;strong&gt;MLOps&lt;/strong&gt;, and &lt;strong&gt;generative AI&lt;/strong&gt; to modernizing &lt;strong&gt;legacy systems&lt;/strong&gt; and &lt;strong&gt;data migrations&lt;/strong&gt;, offering practical insights on applying these technologies.&lt;/p&gt;
&lt;p&gt;Moreover, it stands out as a comprehensive guide that integrates various adaptive solutions that businesses can implement, emphasizing the importance of &lt;code&gt;strategic roles&lt;/code&gt;, &lt;code&gt;mentorship&lt;/code&gt;, and the development of &lt;code&gt;interpersonal skills&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;In summary, I recommend this book as essential reading for those interested in delving deeper into the field of solutions architecture, providing essential tools to face the current challenges of the sector.&lt;/p&gt;
&lt;hr /&gt;
&lt;h1 id="references"&gt;üìö References&lt;/h1&gt;
&lt;blockquote&gt;
&lt;ol style="list-style-type: decimal"&gt;
&lt;li&gt;&lt;a href="https://www.oreilly.com/library/view/solutions-architects-handbook/9781835084236/"&gt;&lt;strong&gt;Solutions Architect‚Äôs Handbook - Third Edition&lt;/strong&gt;&lt;/a&gt;, by Saurabh Shrivastava, Neelanjali Srivastav, Released March 2024, Publisher(s): Packt Publishing, ISBN: 9781835084236&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;pre class="r distill-force-highlighting-css"&gt;&lt;code&gt;&lt;/code&gt;&lt;/pre&gt;</description>
      <distill:md5>7e57ebe75e1cb9fc8f3e53822aa5de1d</distill:md5>
      <category>Agile</category>
      <category>Tools</category>
      <category>Methodology</category>
      <category>Supply chain</category>
      <guid>https://r0mymendez.github.io/posts_en/2025-01-11-book-review-solution-architect-handbook-third-edition</guid>
      <pubDate>Fri, 10 Jan 2025 00:00:00 +0000</pubDate>
      <media:content url="https://r0mymendez.github.io/posts_en/2025-01-11-book-review-solution-architect-handbook-third-edition/preview.png" medium="image" type="image/png" width="800" height="576"/>
    </item>
  </channel>
</rss>
